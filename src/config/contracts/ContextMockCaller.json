{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ContextMock",
          "name": "context",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "integerValue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "stringValue",
          "type": "string"
        }
      ],
      "name": "callData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ContextMock",
          "name": "context",
          "type": "address"
        }
      ],
      "name": "callSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/openzeppelin/contracts/GSN/Context.sol",
    "36": "contracts/openzeppelin/contracts/mocks/ContextMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/ContextMock.sol",
    "exportedSymbols": {
      "ContextMock": [
        7814
      ],
      "ContextMockCaller": [
        7843
      ]
    },
    "id": 7844,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7774,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:36"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/GSN/Context.sol",
        "file": "../GSN/Context.sol",
        "id": 7775,
        "nodeType": "ImportDirective",
        "scope": 7844,
        "sourceUnit": 4674,
        "src": "25:28:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7776,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4673,
              "src": "79:7:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$4673",
                "typeString": "contract Context"
              }
            },
            "id": 7777,
            "nodeType": "InheritanceSpecifier",
            "src": "79:7:36"
          }
        ],
        "contractDependencies": [
          4673
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7814,
        "linearizedBaseContracts": [
          7814,
          4673
        ],
        "name": "ContextMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 7781,
            "name": "Sender",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7779,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7781,
                  "src": "106:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "106:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "105:16:36"
            },
            "src": "93:29:36"
          },
          {
            "body": {
              "id": 7789,
              "nodeType": "Block",
              "src": "156:42:36",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7785,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4661,
                          "src": "178:10:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 7786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "178:12:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7784,
                      "name": "Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7781,
                      "src": "171:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "171:20:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7788,
                  "nodeType": "EmitStatement",
                  "src": "166:25:36"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d737d0c7",
            "id": 7790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "146:2:36"
            },
            "returnParameters": {
              "id": 7783,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:0:36"
            },
            "scope": 7814,
            "src": "128:70:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7798,
            "name": "Data",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7797,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7798,
                  "src": "215:10:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7791,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:5:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7794,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "integerValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7798,
                  "src": "227:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7793,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7796,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stringValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7798,
                  "src": "249:18:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7795,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "214:54:36"
            },
            "src": "204:65:36"
          },
          {
            "body": {
              "id": 7812,
              "nodeType": "Block",
              "src": "348:65:36",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 7806,
                          "name": "_msgData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4672,
                          "src": "368:8:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view returns (bytes memory)"
                          }
                        },
                        "id": 7807,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "368:10:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7808,
                        "name": "integerValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7800,
                        "src": "380:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7809,
                        "name": "stringValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7802,
                        "src": "394:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 7805,
                      "name": "Data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7798,
                      "src": "363:4:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,uint256,string memory)"
                      }
                    },
                    "id": 7810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:43:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7811,
                  "nodeType": "EmitStatement",
                  "src": "358:48:36"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "376bf262",
            "id": 7813,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "msgData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7803,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7800,
                  "mutability": "mutable",
                  "name": "integerValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7813,
                  "src": "292:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7799,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7802,
                  "mutability": "mutable",
                  "name": "stringValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7813,
                  "src": "314:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7801,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "291:49:36"
            },
            "returnParameters": {
              "id": 7804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:36"
            },
            "scope": 7814,
            "src": "275:138:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7844,
        "src": "55:360:36"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7843,
        "linearizedBaseContracts": [
          7843
        ],
        "name": "ContextMockCaller",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7824,
              "nodeType": "Block",
              "src": "498:36:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7819,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7816,
                        "src": "508:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ContextMock_$7814",
                          "typeString": "contract ContextMock"
                        }
                      },
                      "id": 7821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7790,
                      "src": "508:17:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 7822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:19:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7823,
                  "nodeType": "ExpressionStatement",
                  "src": "508:19:36"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3207ad96",
            "id": 7825,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7816,
                  "mutability": "mutable",
                  "name": "context",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7825,
                  "src": "470:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContextMock_$7814",
                    "typeString": "contract ContextMock"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7815,
                    "name": "ContextMock",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7814,
                    "src": "470:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContextMock_$7814",
                      "typeString": "contract ContextMock"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:21:36"
            },
            "returnParameters": {
              "id": 7818,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:36"
            },
            "scope": 7843,
            "src": "450:84:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7841,
              "nodeType": "Block",
              "src": "635:59:36",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7837,
                        "name": "integerValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7829,
                        "src": "661:12:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7838,
                        "name": "stringValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7831,
                        "src": "675:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7834,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7827,
                        "src": "645:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ContextMock_$7814",
                          "typeString": "contract ContextMock"
                        }
                      },
                      "id": 7836,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7813,
                      "src": "645:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) external"
                      }
                    },
                    "id": 7839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:42:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7840,
                  "nodeType": "ExpressionStatement",
                  "src": "645:42:36"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "00860459",
            "id": 7842,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7832,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7827,
                  "mutability": "mutable",
                  "name": "context",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7842,
                  "src": "558:19:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContextMock_$7814",
                    "typeString": "contract ContextMock"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7826,
                    "name": "ContextMock",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 7814,
                    "src": "558:11:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContextMock_$7814",
                      "typeString": "contract ContextMock"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7829,
                  "mutability": "mutable",
                  "name": "integerValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7842,
                  "src": "579:20:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7831,
                  "mutability": "mutable",
                  "name": "stringValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7842,
                  "src": "601:25:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7830,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:6:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "557:70:36"
            },
            "returnParameters": {
              "id": 7833,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:36"
            },
            "scope": 7843,
            "src": "540:154:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7844,
        "src": "417:279:36"
      }
    ],
    "src": "0:697:36"
  },
  "bytecode": "608060405234801561001057600080fd5b50610277806100206000396000f3fe608060405234801561001057600080fd5b50600436106100355760003560e01c80628604591461003a5780633207ad96146100f7575b600080fd5b6100f56004803603606081101561005057600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561008057600080fd5b82018360208201111561009257600080fd5b803590602001918460018302840111640100000000831117156100b457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061011d945050505050565b005b6100f56004803603602081101561010d57600080fd5b50356001600160a01b03166101eb565b60408051631bb5f93160e11b815260048101848152602482019283528351604483015283516001600160a01b0387169363376bf262938793879390929160640190602085019080838360005b83811015610181578181015183820152602001610169565b50505050905090810190601f1680156101ae5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505050505050565b806001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050505056fea264697066735822122099d12d39060d0f15e5553b1961a8e45a534b91acba56fffc6caa91125517459c64736f6c634300060c0033",
  "bytecodeSha1": "f4fb667e47f33e1bdf2656489e6633d345ff98aa",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ContextMockCaller",
  "coverageMap": {
    "branches": {
      "12": {},
      "36": {}
    },
    "statements": {
      "12": {},
      "36": {
        "ContextMockCaller.callData": {
          "0": [
            645,
            687
          ]
        },
        "ContextMockCaller.callSender": {
          "1": [
            508,
            527
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "ContextMock"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100355760003560e01c80628604591461003a5780633207ad96146100f7575b600080fd5b6100f56004803603606081101561005057600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561008057600080fd5b82018360208201111561009257600080fd5b803590602001918460018302840111640100000000831117156100b457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061011d945050505050565b005b6100f56004803603602081101561010d57600080fd5b50356001600160a01b03166101eb565b60408051631bb5f93160e11b815260048101848152602482019283528351604483015283516001600160a01b0387169363376bf262938793879390929160640190602085019080838360005b83811015610181578181015183820152602001610169565b50505050905090810190601f1680156101ae5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b1580156101ce57600080fd5b505af11580156101e2573d6000803e3d6000fd5b50505050505050565b806001600160a01b031663d737d0c76040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050505056fea264697066735822122099d12d39060d0f15e5553b1961a8e45a534b91acba56fffc6caa91125517459c64736f6c634300060c0033",
  "deployedSourceMap": "417:279:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:154;;;;;;;;;;;;;;;;-1:-1:-1;;;;;540:154:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;540:154:36;;-1:-1:-1;540:154:36;;-1:-1:-1;;;;;540:154:36:i;:::-;;450:84;;;;;;;;;;;;;;;;-1:-1:-1;450:84:36;-1:-1:-1;;;;;450:84:36;;:::i;540:154::-;645:42;;;-1:-1:-1;;;645:42:36;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;645:15:36;;;;;661:12;;675:11;;645:42;;;;;;;;;;;;;-1:-1:-1;645:42:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;540:154;;;:::o;450:84::-;508:7;-1:-1:-1;;;;;508:17:36;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;450:84;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    417,
    696
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x860459 EQ PUSH2 0x3A JUMPI DUP1 PUSH4 0x3207AD96 EQ PUSH2 0xF7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x11D SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x1BB5F931 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 DUP2 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH4 0x376BF262 SWAP4 DUP8 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x181 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x169 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1AE JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD737D0C7 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x23A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP10 0xD1 0x2D CODECOPY MOD 0xD 0xF ISZERO 0xE5 SSTORE EXTCODESIZE NOT PUSH2 0xA8E4 GAS MSTORE8 0x4B SWAP2 0xAC 0xBA JUMP SELFDESTRUCT 0xFC PUSH13 0xAA91125517459C64736F6C6343 STOP MOD 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        417,
        696
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "CALLVALUE",
      "path": "36"
    },
    "6": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "DUP1",
      "path": "36"
    },
    "7": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "8": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "12": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "DUP1",
      "path": "36"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "REVERT",
      "path": "36"
    },
    "16": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "POP",
      "path": "36"
    },
    "18": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "21": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "LT",
      "path": "36"
    },
    "22": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x35"
    },
    "25": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "26": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "29": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "SHR",
      "path": "36"
    },
    "32": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "DUP1",
      "path": "36"
    },
    "33": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH3",
      "path": "36",
      "value": "0x860459"
    },
    "37": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "EQ",
      "path": "36"
    },
    "38": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3A"
    },
    "41": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "42": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "DUP1",
      "path": "36"
    },
    "43": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x3207AD96"
    },
    "48": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "EQ",
      "path": "36"
    },
    "49": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xF7"
    },
    "52": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "53": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "54": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "56": {
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "DUP1",
      "path": "36"
    },
    "57": {
      "first_revert": true,
      "fn": null,
      "offset": [
        417,
        696
      ],
      "op": "REVERT",
      "path": "36"
    },
    "58": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "59": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xF5"
    },
    "62": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "64": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "65": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "66": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SUB",
      "path": "36"
    },
    "67": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x60"
    },
    "69": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP2",
      "path": "36"
    },
    "70": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "LT",
      "path": "36"
    },
    "71": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "72": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x50"
    },
    "75": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "76": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "78": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "79": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "REVERT",
      "path": "36"
    },
    "80": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "81": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "83": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "85": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "87": {
      "op": "SHL"
    },
    "88": {
      "op": "SUB"
    },
    "89": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP3",
      "path": "36"
    },
    "90": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "91": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "AND",
      "path": "36"
    },
    "92": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "93": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "95": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP2",
      "path": "36"
    },
    "96": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "97": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "98": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "99": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP2",
      "path": "36"
    },
    "100": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "101": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "102": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x60"
    },
    "104": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP2",
      "path": "36"
    },
    "105": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "106": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "108": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP3",
      "path": "36"
    },
    "109": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "110": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "111": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH5",
      "path": "36",
      "value": "0x100000000"
    },
    "117": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP2",
      "path": "36"
    },
    "118": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "GT",
      "path": "36"
    },
    "119": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "120": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x80"
    },
    "123": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "124": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "126": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "127": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "REVERT",
      "path": "36"
    },
    "128": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "129": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP3",
      "path": "36"
    },
    "130": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "131": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP4",
      "path": "36"
    },
    "132": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "134": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP3",
      "path": "36"
    },
    "135": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "136": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "GT",
      "path": "36"
    },
    "137": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "138": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x92"
    },
    "141": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "142": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "144": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "145": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "REVERT",
      "path": "36"
    },
    "146": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "147": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "148": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "149": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "150": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "152": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "153": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "154": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP5",
      "path": "36"
    },
    "155": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "157": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP4",
      "path": "36"
    },
    "158": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "MUL",
      "path": "36"
    },
    "159": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP5",
      "path": "36"
    },
    "160": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "161": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "GT",
      "path": "36"
    },
    "162": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH5",
      "path": "36",
      "value": "0x100000000"
    },
    "168": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP4",
      "path": "36"
    },
    "169": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "GT",
      "path": "36"
    },
    "170": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "OR",
      "path": "36"
    },
    "171": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "172": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xB4"
    },
    "175": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "176": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "178": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "179": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "REVERT",
      "path": "36"
    },
    "180": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "181": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "182": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "183": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "184": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "185": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1F"
    },
    "187": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "188": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "190": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "191": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "192": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DIV",
      "path": "36"
    },
    "193": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "MUL",
      "path": "36"
    },
    "194": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "196": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "197": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "199": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "200": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "201": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP2",
      "path": "36"
    },
    "202": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "203": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "205": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "206": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "207": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "208": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "209": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "210": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "211": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP2",
      "path": "36"
    },
    "212": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP2",
      "path": "36"
    },
    "213": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "214": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "216": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "217": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP4",
      "path": "36"
    },
    "218": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP4",
      "path": "36"
    },
    "219": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP1",
      "path": "36"
    },
    "220": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP3",
      "path": "36"
    },
    "221": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "DUP5",
      "path": "36"
    },
    "222": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "CALLDATACOPY",
      "path": "36"
    },
    "223": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "225": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "226": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "ADD",
      "path": "36"
    },
    "227": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "228": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "229": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "230": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "231": {
      "op": "POP"
    },
    "232": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "233": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP6",
      "path": "36"
    },
    "234": {
      "op": "POP"
    },
    "235": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x11D"
    },
    "238": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "SWAP5",
      "path": "36"
    },
    "239": {
      "op": "POP"
    },
    "240": {
      "op": "POP"
    },
    "241": {
      "op": "POP"
    },
    "242": {
      "op": "POP"
    },
    "243": {
      "op": "POP"
    },
    "244": {
      "fn": "ContextMockCaller.callData",
      "jump": "i",
      "offset": [
        540,
        694
      ],
      "op": "JUMP",
      "path": "36"
    },
    "245": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "246": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "STOP",
      "path": "36"
    },
    "247": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "248": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xF5"
    },
    "251": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "253": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "DUP1",
      "path": "36"
    },
    "254": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "255": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "SUB",
      "path": "36"
    },
    "256": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "258": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "DUP2",
      "path": "36"
    },
    "259": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "LT",
      "path": "36"
    },
    "260": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "261": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x10D"
    },
    "264": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "265": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "267": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "DUP1",
      "path": "36"
    },
    "268": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "REVERT",
      "path": "36"
    },
    "269": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "270": {
      "op": "POP"
    },
    "271": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "276": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "278": {
      "op": "SHL"
    },
    "279": {
      "op": "SUB"
    },
    "280": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "AND",
      "path": "36"
    },
    "281": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1EB"
    },
    "284": {
      "fn": "ContextMockCaller.callSender",
      "jump": "i",
      "offset": [
        450,
        534
      ],
      "op": "JUMP",
      "path": "36"
    },
    "285": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "286": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "statement": 0,
      "value": "0x40"
    },
    "288": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "289": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "290": {
      "op": "PUSH4",
      "value": "0x1BB5F931"
    },
    "295": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "297": {
      "op": "SHL"
    },
    "298": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "299": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "300": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "302": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "303": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "304": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP5",
      "path": "36"
    },
    "305": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "306": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "307": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x24"
    },
    "309": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP3",
      "path": "36"
    },
    "310": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "311": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "312": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "313": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "314": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "315": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "316": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x44"
    },
    "318": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "319": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "320": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "321": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "322": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        660
      ],
      "op": "DUP8",
      "path": "36"
    },
    "332": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        660
      ],
      "op": "AND",
      "path": "36"
    },
    "333": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        660
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "334": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        660
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x376BF262"
    },
    "339": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        660
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "340": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        661,
        673
      ],
      "op": "DUP8",
      "path": "36"
    },
    "341": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        661,
        673
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "342": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        675,
        686
      ],
      "op": "DUP8",
      "path": "36"
    },
    "343": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        675,
        686
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "344": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "345": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "346": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "347": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x64"
    },
    "349": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "350": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "351": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "353": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP6",
      "path": "36"
    },
    "354": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "355": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "356": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "357": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "358": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "361": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "362": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "363": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "364": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "LT",
      "path": "36"
    },
    "365": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "366": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x181"
    },
    "369": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "370": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "371": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "372": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "373": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "374": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "375": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP3",
      "path": "36"
    },
    "376": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "377": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "378": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "380": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "381": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x169"
    },
    "384": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMP",
      "path": "36"
    },
    "385": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "386": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "387": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "388": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "389": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "390": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "391": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "392": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "393": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "394": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "395": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "396": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1F"
    },
    "398": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "AND",
      "path": "36"
    },
    "399": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "400": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "401": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1AE"
    },
    "404": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "405": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "406": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP3",
      "path": "36"
    },
    "407": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SUB",
      "path": "36"
    },
    "408": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "409": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "410": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x1"
    },
    "412": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "413": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "415": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SUB",
      "path": "36"
    },
    "416": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x100"
    },
    "419": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "EXP",
      "path": "36"
    },
    "420": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SUB",
      "path": "36"
    },
    "421": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "NOT",
      "path": "36"
    },
    "422": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "AND",
      "path": "36"
    },
    "423": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "424": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "425": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "427": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ADD",
      "path": "36"
    },
    "428": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "429": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "430": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "431": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "432": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SWAP4",
      "path": "36"
    },
    "433": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "434": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "435": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "436": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "437": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "439": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "441": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "442": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "443": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP4",
      "path": "36"
    },
    "444": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "SUB",
      "path": "36"
    },
    "445": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP2",
      "path": "36"
    },
    "446": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "448": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP8",
      "path": "36"
    },
    "449": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "450": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "EXTCODESIZE",
      "path": "36"
    },
    "451": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "452": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "453": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "454": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1CE"
    },
    "457": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "458": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "460": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "461": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "REVERT",
      "path": "36"
    },
    "462": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "463": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "464": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "GAS",
      "path": "36"
    },
    "465": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "CALL",
      "path": "36"
    },
    "466": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "467": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "468": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "469": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1E2"
    },
    "472": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "473": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "RETURNDATASIZE",
      "path": "36"
    },
    "474": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "476": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "DUP1",
      "path": "36"
    },
    "477": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "RETURNDATACOPY",
      "path": "36"
    },
    "478": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "RETURNDATASIZE",
      "path": "36"
    },
    "479": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "481": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "REVERT",
      "path": "36"
    },
    "482": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "483": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "484": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "485": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "486": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        645,
        687
      ],
      "op": "POP",
      "path": "36"
    },
    "487": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "POP",
      "path": "36"
    },
    "488": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "POP",
      "path": "36"
    },
    "489": {
      "fn": "ContextMockCaller.callData",
      "offset": [
        540,
        694
      ],
      "op": "POP",
      "path": "36"
    },
    "490": {
      "fn": "ContextMockCaller.callData",
      "jump": "o",
      "offset": [
        540,
        694
      ],
      "op": "JUMP",
      "path": "36"
    },
    "491": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "492": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        515
      ],
      "op": "DUP1",
      "path": "36",
      "statement": 1
    },
    "493": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "495": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "497": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "499": {
      "op": "SHL"
    },
    "500": {
      "op": "SUB"
    },
    "501": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        525
      ],
      "op": "AND",
      "path": "36"
    },
    "502": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        525
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0xD737D0C7"
    },
    "507": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "509": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "510": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP2",
      "path": "36"
    },
    "511": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0xFFFFFFFF"
    },
    "516": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "AND",
      "path": "36"
    },
    "517": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xE0"
    },
    "519": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "SHL",
      "path": "36"
    },
    "520": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP2",
      "path": "36"
    },
    "521": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "522": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "524": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "ADD",
      "path": "36"
    },
    "525": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "527": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "529": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "530": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP1",
      "path": "36"
    },
    "531": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP4",
      "path": "36"
    },
    "532": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "SUB",
      "path": "36"
    },
    "533": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP2",
      "path": "36"
    },
    "534": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "536": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP8",
      "path": "36"
    },
    "537": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP1",
      "path": "36"
    },
    "538": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "EXTCODESIZE",
      "path": "36"
    },
    "539": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "540": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP1",
      "path": "36"
    },
    "541": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "542": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x226"
    },
    "545": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "546": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "548": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP1",
      "path": "36"
    },
    "549": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "REVERT",
      "path": "36"
    },
    "550": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "551": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "POP",
      "path": "36"
    },
    "552": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "GAS",
      "path": "36"
    },
    "553": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "CALL",
      "path": "36"
    },
    "554": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "555": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP1",
      "path": "36"
    },
    "556": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "557": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x23A"
    },
    "560": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "561": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "RETURNDATASIZE",
      "path": "36"
    },
    "562": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "564": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "DUP1",
      "path": "36"
    },
    "565": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "RETURNDATACOPY",
      "path": "36"
    },
    "566": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "RETURNDATASIZE",
      "path": "36"
    },
    "567": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "569": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "REVERT",
      "path": "36"
    },
    "570": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "571": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "POP",
      "path": "36"
    },
    "572": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "POP",
      "path": "36"
    },
    "573": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "POP",
      "path": "36"
    },
    "574": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        508,
        527
      ],
      "op": "POP",
      "path": "36"
    },
    "575": {
      "fn": "ContextMockCaller.callSender",
      "offset": [
        450,
        534
      ],
      "op": "POP",
      "path": "36"
    },
    "576": {
      "fn": "ContextMockCaller.callSender",
      "jump": "o",
      "offset": [
        450,
        534
      ],
      "op": "JUMP",
      "path": "36"
    }
  },
  "sha1": "3f065b3116730e3392b4c0824b888434c4333edc",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../GSN/Context.sol\";\n\ncontract ContextMock is Context {\n    event Sender(address sender);\n\n    function msgSender() public {\n        emit Sender(_msgSender());\n    }\n\n    event Data(bytes data, uint256 integerValue, string stringValue);\n\n    function msgData(uint256 integerValue, string memory stringValue) public {\n        emit Data(_msgData(), integerValue, stringValue);\n    }\n}\n\ncontract ContextMockCaller {\n    function callSender(ContextMock context) public {\n        context.msgSender();\n    }\n\n    function callData(ContextMock context, uint256 integerValue, string memory stringValue) public {\n        context.msgData(integerValue, stringValue);\n    }\n}\n",
  "sourceMap": "417:279:36:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/ContextMock.sol",
  "type": "contract"
}