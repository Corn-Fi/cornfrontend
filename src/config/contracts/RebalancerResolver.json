{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "_strategy",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "checker",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rangeBasePoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rangePoints",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rangePoints",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_rangeBasePoints",
          "type": "uint256"
        }
      ],
      "name": "setRange",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/openzeppelin/contracts/GSN/Context.sol",
    "120": "interfaces/IStrategy.sol",
    "17": "contracts/openzeppelin/contracts/access/Ownable.sol",
    "28": "contracts/openzeppelin/contracts/math/SafeMath.sol",
    "3": "contracts/RebalancerResolver.sol"
  },
  "ast": {
    "absolutePath": "contracts/RebalancerResolver.sol",
    "exportedSymbols": {
      "RebalancerResolver": [
        4467
      ]
    },
    "id": 4468,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4323,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "interfaces/IStrategy.sol",
        "file": "../interfaces/IStrategy.sol",
        "id": 4324,
        "nodeType": "ImportDirective",
        "scope": 4468,
        "sourceUnit": 22669,
        "src": "57:37:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "./openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 4325,
        "nodeType": "ImportDirective",
        "scope": 4468,
        "sourceUnit": 16341,
        "src": "95:60:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/access/Ownable.sol",
        "file": "./openzeppelin/contracts/access/Ownable.sol",
        "id": 4326,
        "nodeType": "ImportDirective",
        "scope": 4468,
        "sourceUnit": 9722,
        "src": "156:53:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 4328,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9721,
              "src": "310:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$9721",
                "typeString": "contract Ownable"
              }
            },
            "id": 4329,
            "nodeType": "InheritanceSpecifier",
            "src": "310:7:3"
          }
        ],
        "contractDependencies": [
          8185,
          9721
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 4327,
          "nodeType": "StructuredDocumentation",
          "src": "212:65:3",
          "text": " @title Corn Finance Rebalancer Resolver\n @author C.W.B."
        },
        "fullyImplemented": true,
        "id": 4467,
        "linearizedBaseContracts": [
          4467,
          9721,
          8185
        ],
        "name": "RebalancerResolver",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4332,
            "libraryName": {
              "contractScope": null,
              "id": 4330,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10968,
              "src": "330:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10968",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "324:27:3",
            "typeName": {
              "id": 4331,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "343:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "5a034dfb",
            "id": 4334,
            "mutability": "mutable",
            "name": "rangePoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4467,
            "src": "358:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4333,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "358:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "07f735cc",
            "id": 4336,
            "mutability": "mutable",
            "name": "rangeBasePoints",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 4467,
            "src": "390:30:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4335,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "390:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4347,
              "nodeType": "Block",
              "src": "453:63:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4339,
                      "name": "rangePoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4334,
                      "src": "463:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "35",
                      "id": 4340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "477:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_5_by_1",
                        "typeString": "int_const 5"
                      },
                      "value": "5"
                    },
                    "src": "463:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4342,
                  "nodeType": "ExpressionStatement",
                  "src": "463:15:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4343,
                      "name": "rangeBasePoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4336,
                      "src": "488:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "313030",
                      "id": 4344,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "506:3:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "488:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4346,
                  "nodeType": "ExpressionStatement",
                  "src": "488:21:3"
                }
              ]
            },
            "documentation": null,
            "id": 4348,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "443:2:3"
            },
            "returnParameters": {
              "id": 4338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "453:0:3"
            },
            "scope": 4467,
            "src": "432:84:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4366,
              "nodeType": "Block",
              "src": "709:87:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4358,
                      "name": "rangePoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4334,
                      "src": "719:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4359,
                      "name": "_rangePoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4351,
                      "src": "733:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "719:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4361,
                  "nodeType": "ExpressionStatement",
                  "src": "719:26:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 4364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 4362,
                      "name": "rangeBasePoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4336,
                      "src": "755:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 4363,
                      "name": "_rangeBasePoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4353,
                      "src": "773:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "755:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4365,
                  "nodeType": "ExpressionStatement",
                  "src": "755:34:3"
                }
              ]
            },
            "documentation": {
              "id": 4349,
              "nodeType": "StructuredDocumentation",
              "src": "522:97:3",
              "text": " OoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOo"
            },
            "functionSelector": "83ad4542",
            "id": 4367,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 4356,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 4355,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9670,
                  "src": "699:9:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "699:9:3"
              }
            ],
            "name": "setRange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4354,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4351,
                  "mutability": "mutable",
                  "name": "_rangePoints",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4367,
                  "src": "642:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4353,
                  "mutability": "mutable",
                  "name": "_rangeBasePoints",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4367,
                  "src": "664:24:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4352,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "641:48:3"
            },
            "returnParameters": {
              "id": 4357,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "709:0:3"
            },
            "scope": 4467,
            "src": "624:172:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4465,
              "nodeType": "Block",
              "src": "1088:886:3",
              "statements": [
                {
                  "assignments": [
                    4380,
                    4382
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4380,
                      "mutability": "mutable",
                      "name": "unstakedAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4465,
                      "src": "1099:22:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4379,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1099:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 4382,
                      "mutability": "mutable",
                      "name": "stakedAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4465,
                      "src": "1123:20:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4381,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1123:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4387,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4385,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4372,
                        "src": "1170:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4383,
                        "name": "_strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4370,
                        "src": "1147:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$22668",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "id": 4384,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceRatio",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22657,
                      "src": "1147:22:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256,uint256)"
                      }
                    },
                    "id": 4386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1147:30:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1098:79:3"
                },
                {
                  "assignments": [
                    4389
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4389,
                      "mutability": "mutable",
                      "name": "totalAmount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 4465,
                      "src": "1187:19:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4388,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1187:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 4394,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 4392,
                        "name": "stakedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4382,
                        "src": "1228:12:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 4390,
                        "name": "unstakedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4380,
                        "src": "1209:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10801,
                      "src": "1209:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 4393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:32:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1187:54:3"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 4403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 4395,
                            "name": "_strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4370,
                            "src": "1255:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$22668",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "id": 4396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rebalancePoints",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 22662,
                          "src": "1255:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 4397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1255:27:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 4398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1285:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1255:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 4400,
                        "name": "totalAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4389,
                        "src": "1290:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 4401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1304:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "1290:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1255:50:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 4464,
                  "nodeType": "IfStatement",
                  "src": "1252:716:3",
                  "trueBody": {
                    "id": 4463,
                    "nodeType": "Block",
                    "src": "1307:661:3",
                    "statements": [
                      {
                        "assignments": [
                          4405
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4405,
                            "mutability": "mutable",
                            "name": "unstaked",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4463,
                            "src": "1321:16:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4404,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1321:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4417,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4413,
                                  "name": "_strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4370,
                                  "src": "1389:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$22668",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "id": 4414,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rebalanceBasePoints",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 22667,
                                "src": "1389:29:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view external returns (uint256)"
                                }
                              },
                              "id": 4415,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1389:31:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4408,
                                      "name": "_strategy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4370,
                                      "src": "1356:9:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$22668",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "id": 4409,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rebalancePoints",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 22662,
                                    "src": "1356:25:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                      "typeString": "function () view external returns (uint256)"
                                    }
                                  },
                                  "id": 4410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1356:27:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4406,
                                  "name": "totalAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4389,
                                  "src": "1340:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4407,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10881,
                                "src": "1340:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1340:44:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10898,
                            "src": "1340:48:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1340:81:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1321:100:3"
                      },
                      {
                        "assignments": [
                          4419
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4419,
                            "mutability": "mutable",
                            "name": "unstakedUpper",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4463,
                            "src": "1436:21:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4418,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1436:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4430,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4428,
                              "name": "rangeBasePoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4336,
                              "src": "1511:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 4424,
                                      "name": "rangePoints",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4334,
                                      "src": "1493:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4422,
                                      "name": "rangeBasePoints",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4336,
                                      "src": "1473:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4423,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "add",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10801,
                                    "src": "1473:19:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 4425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1473:32:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4420,
                                  "name": "unstaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4405,
                                  "src": "1460:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4421,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10881,
                                "src": "1460:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4426,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1460:46:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4427,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10898,
                            "src": "1460:50:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1460:67:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1436:91:3"
                      },
                      {
                        "assignments": [
                          4432
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 4432,
                            "mutability": "mutable",
                            "name": "unstakedLower",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 4463,
                            "src": "1541:21:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 4431,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1541:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 4443,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 4441,
                              "name": "rangeBasePoints",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4336,
                              "src": "1616:15:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "id": 4437,
                                      "name": "rangePoints",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4334,
                                      "src": "1598:11:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": null,
                                      "id": 4435,
                                      "name": "rangeBasePoints",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4336,
                                      "src": "1578:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 4436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sub",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 10818,
                                    "src": "1578:19:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                      "typeString": "function (uint256,uint256) pure returns (uint256)"
                                    }
                                  },
                                  "id": 4438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1578:32:3",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 4433,
                                  "name": "unstaked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4405,
                                  "src": "1565:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 4434,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mul",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 10881,
                                "src": "1565:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256,uint256) pure returns (uint256)"
                                }
                              },
                              "id": 4439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1565:46:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 4440,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "div",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 10898,
                            "src": "1565:50:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 4442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1565:67:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1541:91:3"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 4450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4444,
                              "name": "unstakedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4380,
                              "src": "1650:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4445,
                              "name": "unstakedUpper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4419,
                              "src": "1667:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1650:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 4447,
                              "name": "unstakedAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4380,
                              "src": "1684:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 4448,
                              "name": "unstakedLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4432,
                              "src": "1701:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1684:30:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1650:64:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 4462,
                        "nodeType": "IfStatement",
                        "src": "1647:311:3",
                        "trueBody": {
                          "id": 4461,
                          "nodeType": "Block",
                          "src": "1716:242:3",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "components": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "74727565",
                                    "id": 4451,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1763:4:3",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "argumentTypes": null,
                                    "arguments": [
                                      {
                                        "argumentTypes": null,
                                        "expression": {
                                          "argumentTypes": null,
                                          "expression": {
                                            "argumentTypes": null,
                                            "id": 4454,
                                            "name": "IStrategy",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 22668,
                                            "src": "1838:9:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IStrategy_$22668_$",
                                              "typeString": "type(contract IStrategy)"
                                            }
                                          },
                                          "id": 4455,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "rebalanceToken",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 22645,
                                          "src": "1838:24:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$returns$__$",
                                            "typeString": "function IStrategy.rebalanceToken(address)"
                                          }
                                        },
                                        "id": 4456,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "selector",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": null,
                                        "src": "1838:33:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        }
                                      },
                                      {
                                        "argumentTypes": null,
                                        "id": 4457,
                                        "name": "_token",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4372,
                                        "src": "1897:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes4",
                                          "typeString": "bytes4"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 4452,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1790:3:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 4453,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encodeWithSelector",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": null,
                                      "src": "1790:22:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function (bytes4) pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 4458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1790:135:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "id": 4459,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1741:202:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                  "typeString": "tuple(bool,bytes memory)"
                                }
                              },
                              "functionReturnParameters": 4378,
                              "id": 4460,
                              "nodeType": "Return",
                              "src": "1734:209:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4368,
              "nodeType": "StructuredDocumentation",
              "src": "891:97:3",
              "text": " OoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOo"
            },
            "functionSelector": "1c52982e",
            "id": 4466,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checker",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 4373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4370,
                  "mutability": "mutable",
                  "name": "_strategy",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4466,
                  "src": "1010:19:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$22668",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 4369,
                    "name": "IStrategy",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 22668,
                    "src": "1010:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$22668",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4372,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4466,
                  "src": "1031:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4371,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1009:37:3"
            },
            "returnParameters": {
              "id": 4378,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4375,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4466,
                  "src": "1068:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4374,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1068:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4377,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 4466,
                  "src": "1074:12:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4376,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1067:20:3"
            },
            "scope": 4467,
            "src": "993:981:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4468,
        "src": "279:1697:3"
      }
    ],
    "src": "32:1944:3"
  },
  "bytecode": "608060405234801561001057600080fd5b50600061001b610074565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35060056001556064600255610078565b3390565b61099d806100876000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a61461015357806383ad45421461015d5780638da5cb5b14610180578063f2fde38b146101a45761007d565b806307f735cc146100825780631c52982e1461009c5780635a034dfb1461014b575b600080fd5b61008a6101ca565b60408051918252519081900360200190f35b6100ca600480360360408110156100b257600080fd5b506001600160a01b03813581169160200135166101d0565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561010f5781810151838201526020016100f7565b50505050905090810190601f16801561013c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61008a610498565b61015b61049e565b005b61015b6004803603604081101561017357600080fd5b5080359060200135610552565b6101886105c7565b604080516001600160a01b039092168252519081900360200190f35b61015b600480360360208110156101ba57600080fd5b50356001600160a01b03166105d6565b60025481565b60006060600080856001600160a01b031663bea0d7fb866040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d604081101561024d57600080fd5b5080516020909101519092509050600061026783836106e0565b90506000876001600160a01b03166377a430ea6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d60208110156102ce57600080fd5b50511180156102dd5750600081115b1561048d5760006103ca886001600160a01b0316636a117e616040518163ffffffff1660e01b815260040160206040518083038186803b15801561032057600080fd5b505afa158015610334573d6000803e3d6000fd5b505050506040513d602081101561034a57600080fd5b505160408051633bd2187560e11b815290516103c4916001600160a01b038d16916377a430ea91600480820192602092909190829003018186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d60208110156103bb57600080fd5b50518590610743565b9061079c565b905060006103f56002546103c46103ee6001546002546106e090919063ffffffff16565b8590610743565b905060006104206002546103c46104196001546002546107de90919063ffffffff16565b8690610743565b90508186118061042f57508086105b15610489575050604080516001600160a01b0389166024808301919091528251808303909101815260449091019091526020810180516001600160e01b0316636b2b60b560e11b1790526001965094506104919350505050565b5050505b5050505b9250929050565b60015481565b6104a6610820565b6000546001600160a01b03908116911614610508576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61055a610820565b6000546001600160a01b039081169116146105bc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600191909155600255565b6000546001600160a01b031690565b6105de610820565b6000546001600160a01b03908116911614610640576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166106855760405162461bcd60e51b81526004018080602001828103825260268152602001806109216026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008282018381101561073a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6000826107525750600061073d565b8282028284828161075f57fe5b041461073a5760405162461bcd60e51b81526004018080602001828103825260218152602001806109476021913960400191505060405180910390fd5b600061073a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610824565b600061073a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506108c6565b3390565b600081836108b05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561087557818101518382015260200161085d565b50505050905090810190601f1680156108a25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816108bc57fe5b0495945050505050565b600081848411156109185760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561087557818101518382015260200161085d565b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220a2d64aeeafed4e22956dcf7bcfedb1e3a0e58fa4a58225a43e0c183fdd7f289a64736f6c634300060c0033",
  "bytecodeSha1": "0731c810eae01f804896b2dc50f631bbe2519fc2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "RebalancerResolver",
  "coverageMap": {
    "branches": {
      "10": {},
      "120": {},
      "17": {
        "Ownable.transferOwnership": {
          "22": [
            1237,
            1259,
            true
          ],
          "23": [
            2038,
            2060,
            true
          ]
        }
      },
      "28": {
        "SafeMath.add": {
          "24": [
            946,
            952,
            true
          ]
        },
        "SafeMath.div": {
          "27": [
            3817,
            3822,
            true
          ]
        },
        "SafeMath.mul": {
          "25": [
            2418,
            2424,
            false
          ],
          "26": [
            2504,
            2514,
            true
          ]
        },
        "SafeMath.sub": {
          "28": [
            1805,
            1811,
            true
          ]
        }
      },
      "3": {
        "RebalancerResolver.checker": {
          "18": [
            1255,
            1286,
            false
          ],
          "19": [
            1290,
            1305,
            false
          ],
          "20": [
            1650,
            1680,
            true
          ],
          "21": [
            1684,
            1714,
            false
          ]
        }
      }
    },
    "statements": {
      "10": {
        "Context._msgSender": {
          "15": [
            815,
            832
          ]
        }
      },
      "120": {},
      "17": {
        "Ownable.owner": {
          "5": [
            1090,
            1103
          ]
        },
        "Ownable.renounceOwnership": {
          "1": [
            1720,
            1765
          ],
          "2": [
            1775,
            1794
          ]
        },
        "Ownable.transferOwnership": {
          "6": [
            2030,
            2103
          ],
          "7": [
            2113,
            2156
          ],
          "8": [
            2166,
            2183
          ]
        }
      },
      "28": {
        "SafeMath.add": {
          "9": [
            938,
            984
          ],
          "10": [
            995,
            1003
          ]
        },
        "SafeMath.div": {
          "13": [
            3110,
            3156
          ],
          "16": [
            3809,
            3837
          ]
        },
        "SafeMath.mul": {
          "11": [
            2440,
            2448
          ],
          "12": [
            2496,
            2552
          ]
        },
        "SafeMath.sub": {
          "14": [
            1351,
            1401
          ],
          "17": [
            1797,
            1826
          ]
        }
      },
      "3": {
        "RebalancerResolver.checker": {
          "0": [
            1734,
            1943
          ]
        },
        "RebalancerResolver.setRange": {
          "3": [
            719,
            745
          ],
          "4": [
            755,
            789
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context",
    "IStrategy",
    "Ownable",
    "SafeMath"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063715018a61161005b578063715018a61461015357806383ad45421461015d5780638da5cb5b14610180578063f2fde38b146101a45761007d565b806307f735cc146100825780631c52982e1461009c5780635a034dfb1461014b575b600080fd5b61008a6101ca565b60408051918252519081900360200190f35b6100ca600480360360408110156100b257600080fd5b506001600160a01b03813581169160200135166101d0565b60405180831515815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561010f5781810151838201526020016100f7565b50505050905090810190601f16801561013c5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61008a610498565b61015b61049e565b005b61015b6004803603604081101561017357600080fd5b5080359060200135610552565b6101886105c7565b604080516001600160a01b039092168252519081900360200190f35b61015b600480360360208110156101ba57600080fd5b50356001600160a01b03166105d6565b60025481565b60006060600080856001600160a01b031663bea0d7fb866040518263ffffffff1660e01b815260040180826001600160a01b03168152602001915050604080518083038186803b15801561022357600080fd5b505afa158015610237573d6000803e3d6000fd5b505050506040513d604081101561024d57600080fd5b5080516020909101519092509050600061026783836106e0565b90506000876001600160a01b03166377a430ea6040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a457600080fd5b505afa1580156102b8573d6000803e3d6000fd5b505050506040513d60208110156102ce57600080fd5b50511180156102dd5750600081115b1561048d5760006103ca886001600160a01b0316636a117e616040518163ffffffff1660e01b815260040160206040518083038186803b15801561032057600080fd5b505afa158015610334573d6000803e3d6000fd5b505050506040513d602081101561034a57600080fd5b505160408051633bd2187560e11b815290516103c4916001600160a01b038d16916377a430ea91600480820192602092909190829003018186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d60208110156103bb57600080fd5b50518590610743565b9061079c565b905060006103f56002546103c46103ee6001546002546106e090919063ffffffff16565b8590610743565b905060006104206002546103c46104196001546002546107de90919063ffffffff16565b8690610743565b90508186118061042f57508086105b15610489575050604080516001600160a01b0389166024808301919091528251808303909101815260449091019091526020810180516001600160e01b0316636b2b60b560e11b1790526001965094506104919350505050565b5050505b5050505b9250929050565b60015481565b6104a6610820565b6000546001600160a01b03908116911614610508576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61055a610820565b6000546001600160a01b039081169116146105bc576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600191909155600255565b6000546001600160a01b031690565b6105de610820565b6000546001600160a01b03908116911614610640576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166106855760405162461bcd60e51b81526004018080602001828103825260268152602001806109216026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b60008282018381101561073a576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b6000826107525750600061073d565b8282028284828161075f57fe5b041461073a5760405162461bcd60e51b81526004018080602001828103825260218152602001806109476021913960400191505060405180910390fd5b600061073a83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610824565b600061073a83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506108c6565b3390565b600081836108b05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561087557818101518382015260200161085d565b50505050905090810190601f1680156108a25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816108bc57fe5b0495945050505050565b600081848411156109185760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561087557818101518382015260200161085d565b50505090039056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220a2d64aeeafed4e22956dcf7bcfedb1e3a0e58fa4a58225a43e0c183fdd7f289a64736f6c634300060c0033",
  "deployedSourceMap": "279:1697:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;390:30;;;:::i;:::-;;;;;;;;;;;;;;;;993:981;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;993:981:3;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;358:26;;;:::i;1656:145:17:-;;;:::i;:::-;;624:172:3;;;;;;;;;;;;;;;;-1:-1:-1;624:172:3;;;;;;;:::i;1033:77:17:-;;;:::i;:::-;;;;-1:-1:-1;;;;;1033:77:17;;;;;;;;;;;;;;1950:240;;;;;;;;;;;;;;;;-1:-1:-1;1950:240:17;-1:-1:-1;;;;;1950:240:17;;:::i;390:30:3:-;;;;:::o;993:981::-;1068:4;1074:12;1099:22;1123:20;1147:9;-1:-1:-1;;;;;1147:22:3;;1170:6;1147:30;;;;;;;;;;;;;-1:-1:-1;;;;;1147:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1147:30:3;;;;;;;;;-1:-1:-1;1147:30:3;-1:-1:-1;1187:19:3;1209:32;1147:30;;1209:18;:32::i;:::-;1187:54;;1285:1;1255:9;-1:-1:-1;;;;;1255:25:3;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1255:27:3;:31;:50;;;;;1304:1;1290:11;:15;1255:50;1252:716;;;1321:16;1340:81;1389:9;-1:-1:-1;;;;;1389:29:3;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1389:31:3;1356:27;;;-1:-1:-1;;;1356:27:3;;;;1340:44;;-1:-1:-1;;;;;1356:25:3;;;;;:27;;;;;1389:31;;1356:27;;;;;;;;:25;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1356:27:3;1340:11;;:15;:44::i;:::-;:48;;:81::i;:::-;1321:100;;1436:21;1460:67;1511:15;;1460:46;1473:32;1493:11;;1473:15;;:19;;:32;;;;:::i;:::-;1460:8;;:12;:46::i;:67::-;1436:91;;1541:21;1565:67;1616:15;;1565:46;1578:32;1598:11;;1578:15;;:19;;:32;;;;:::i;:::-;1565:8;;:12;:46::i;:67::-;1541:91;;1667:13;1650:14;:30;:64;;;;1701:13;1684:14;:30;1650:64;1647:311;;;-1:-1:-1;;1790:135:3;;;-1:-1:-1;;;;;1790:135:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1790:135:3;-1:-1:-1;;;1790:135:3;;;1763:4;;-1:-1:-1;1790:135:3;-1:-1:-1;1734:209:3;;-1:-1:-1;;;;1734:209:3;1647:311;1252:716;;;;993:981;;;;;;;;;:::o;358:26::-;;;;:::o;1656:145:17:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:17;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1762:1:::1;1746:6:::0;;1725:40:::1;::::0;-1:-1:-1;;;;;1746:6:17;;::::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1792:1;1775:19:::0;;-1:-1:-1;;;;;;1775:19:17::1;::::0;;1656:145::o;624:172:3:-;1247:12:17;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:17;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;719:11:3::1;:26:::0;;;;755:15:::1;:34:::0;624:172::o;1033:77:17:-;1071:7;1097:6;-1:-1:-1;;;;;1097:6:17;1033:77;:::o;1950:240::-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:17;;;:22;;;1229:67;;;;;-1:-1:-1;;;1229:67:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2038:22:17;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:17::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2139:6;::::0;;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:17;;::::1;::::0;2139:6;::::1;::::0;2118:38:::1;::::0;::::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:17::1;-1:-1:-1::0;;;;;2166:17:17;;;::::1;::::0;;;::::1;::::0;;1950:240::o;834:176:28:-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;-1:-1:-1;834:176:28;;;;;:::o;2119:459::-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:28;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3033:130;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;1274:134::-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;735:104:10:-;822:10;735:104;:::o;3638:338:28:-;3724:7;3824:12;3817:5;3809:28;;;;-1:-1:-1;;;3809:28:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:28:o;1692:187::-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:28;;;1692:187::o",
  "language": "Solidity",
  "natspec": {
    "author": "C.W.B.",
    "kind": "dev",
    "methods": {
      "checker(address,address)": {
        "notice": "OoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOo"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRange(uint256,uint256)": {
        "notice": "OoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOo"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Corn Finance Rebalancer Resolver",
    "version": 1
  },
  "offset": [
    279,
    1976
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x83AD4542 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x180 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A4 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x7F735CC EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x1C52982E EQ PUSH2 0x9C JUMPI DUP1 PUSH4 0x5A034DFB EQ PUSH2 0x14B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x1CA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xCA PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xF7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x13C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8A PUSH2 0x498 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x49E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x552 JUMP JUMPDEST PUSH2 0x188 PUSH2 0x5C7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xBEA0D7FB DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x237 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x24D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH2 0x267 DUP4 DUP4 PUSH2 0x6E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x77A430EA PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD GT DUP1 ISZERO PUSH2 0x2DD JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x48D JUMPI PUSH1 0x0 PUSH2 0x3CA DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6A117E61 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x320 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x334 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x3BD21875 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD PUSH2 0x3C4 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP2 PUSH4 0x77A430EA SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x391 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD DUP6 SWAP1 PUSH2 0x743 JUMP JUMPDEST SWAP1 PUSH2 0x79C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x3F5 PUSH1 0x2 SLOAD PUSH2 0x3C4 PUSH2 0x3EE PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x6E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x743 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x420 PUSH1 0x2 SLOAD PUSH2 0x3C4 PUSH2 0x419 PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD PUSH2 0x7DE SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x743 JUMP JUMPDEST SWAP1 POP DUP2 DUP7 GT DUP1 PUSH2 0x42F JUMPI POP DUP1 DUP7 LT JUMPDEST ISZERO PUSH2 0x489 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x44 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x6B2B60B5 PUSH1 0xE1 SHL OR SWAP1 MSTORE PUSH1 0x1 SWAP7 POP SWAP5 POP PUSH2 0x491 SWAP4 POP POP POP POP JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4A6 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x508 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x55A PUSH2 0x820 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x5BC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x2 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH2 0x5DE PUSH2 0x820 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x640 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x921 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x73A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x752 JUMPI POP PUSH1 0x0 PUSH2 0x73D JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x75F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x73A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x947 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x824 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0x8C6 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x8B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x875 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x85D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x8A2 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP4 DUP6 DUP2 PUSH2 0x8BC JUMPI INVALID JUMPDEST DIV SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x918 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 DUP2 MSTORE DUP4 MLOAD PUSH1 0x24 DUP5 ADD MSTORE DUP4 MLOAD SWAP1 SWAP3 DUP4 SWAP3 PUSH1 0x44 SWAP1 SWAP2 ADD SWAP2 SWAP1 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 ISZERO PUSH2 0x875 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x85D JUMP JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373536166654D6174683A206D756C746970 PUSH13 0x69636174696F6E206F76657266 PUSH13 0x6F77A2646970667358221220A2 0xD6 0x4A 0xEE 0xAF 0xED 0x4E 0x22 SWAP6 PUSH14 0xCF7BCFEDB1E3A0E58FA4A58225A4 RETURNDATACOPY 0xC XOR EXTCODEHASH 0xDD PUSH32 0x289A64736F6C634300060C003300000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        279,
        1976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x715018A6"
    },
    "49": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "EQ",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x153"
    },
    "53": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x83AD4542"
    },
    "60": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D"
    },
    "64": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x8DA5CB5B"
    },
    "71": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x180"
    },
    "75": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1A4"
    },
    "86": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D"
    },
    "90": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMP",
      "path": "3"
    },
    "91": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "92": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "93": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x7F735CC"
    },
    "98": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "EQ",
      "path": "3"
    },
    "99": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1C52982E"
    },
    "109": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9C"
    },
    "113": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x5A034DFB"
    },
    "120": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14B"
    },
    "124": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "DUP1",
      "path": "3"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        279,
        1976
      ],
      "op": "REVERT",
      "path": "3"
    },
    "130": {
      "offset": [
        390,
        420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "131": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A"
    },
    "134": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CA"
    },
    "137": {
      "fn": null,
      "jump": "i",
      "offset": [
        390,
        420
      ],
      "op": "JUMP",
      "path": "3"
    },
    "138": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "141": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "142": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "143": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "144": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "DUP3",
      "path": "3"
    },
    "145": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "146": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "147": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "149": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "150": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "SUB",
      "path": "3"
    },
    "151": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "153": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "ADD",
      "path": "3"
    },
    "154": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "155": {
      "fn": null,
      "offset": [
        390,
        420
      ],
      "op": "RETURN",
      "path": "3"
    },
    "156": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "157": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCA"
    },
    "160": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "162": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "163": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "164": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SUB",
      "path": "3"
    },
    "165": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "167": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "168": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "LT",
      "path": "3"
    },
    "169": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "170": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB2"
    },
    "173": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "176": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "177": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "REVERT",
      "path": "3"
    },
    "178": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "179": {
      "op": "POP"
    },
    "180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "184": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "186": {
      "op": "SHL"
    },
    "187": {
      "op": "SUB"
    },
    "188": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "189": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "190": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "191": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "AND",
      "path": "3"
    },
    "192": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "193": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "195": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "196": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "197": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "AND",
      "path": "3"
    },
    "198": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D0"
    },
    "201": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        993,
        1974
      ],
      "op": "JUMP",
      "path": "3"
    },
    "202": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "203": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "205": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "206": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "207": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "208": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "209": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "210": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "211": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "212": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "214": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "215": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "216": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "218": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "219": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP3",
      "path": "3"
    },
    "220": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "221": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SUB",
      "path": "3"
    },
    "222": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP3",
      "path": "3"
    },
    "223": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "224": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "225": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "226": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "227": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "228": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "229": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "230": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "232": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "233": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "234": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "235": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "236": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "237": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "238": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "240": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "241": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "242": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "243": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "244": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "245": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "247": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "248": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "249": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "250": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "LT",
      "path": "3"
    },
    "251": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "252": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10F"
    },
    "255": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "256": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "257": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "258": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "259": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "260": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "261": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP3",
      "path": "3"
    },
    "262": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "263": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "264": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "266": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "267": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF7"
    },
    "270": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMP",
      "path": "3"
    },
    "271": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "272": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "273": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "274": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "275": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "276": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "277": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "278": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "279": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "280": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "281": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "282": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "284": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "AND",
      "path": "3"
    },
    "285": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "286": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "287": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C"
    },
    "290": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "291": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "292": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP3",
      "path": "3"
    },
    "293": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SUB",
      "path": "3"
    },
    "294": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "295": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "296": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "298": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP4",
      "path": "3"
    },
    "299": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "301": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SUB",
      "path": "3"
    },
    "302": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "305": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "EXP",
      "path": "3"
    },
    "306": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SUB",
      "path": "3"
    },
    "307": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "NOT",
      "path": "3"
    },
    "308": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "AND",
      "path": "3"
    },
    "309": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP2",
      "path": "3"
    },
    "310": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "311": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "313": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "ADD",
      "path": "3"
    },
    "314": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "315": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "316": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "317": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "318": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "319": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "320": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "321": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "322": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "323": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "325": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "326": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "DUP1",
      "path": "3"
    },
    "327": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "328": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SUB",
      "path": "3"
    },
    "329": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "330": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "RETURN",
      "path": "3"
    },
    "331": {
      "offset": [
        358,
        384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "332": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        358,
        384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8A"
    },
    "335": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        358,
        384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x498"
    },
    "338": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        358,
        384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "339": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "340": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15B"
    },
    "343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x49E"
    },
    "346": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMP",
      "path": "17"
    },
    "347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "348": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "STOP",
      "path": "17"
    },
    "349": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "350": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15B"
    },
    "353": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "355": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "DUP1",
      "path": "3"
    },
    "356": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "357": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "SUB",
      "path": "3"
    },
    "358": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "360": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "DUP2",
      "path": "3"
    },
    "361": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "LT",
      "path": "3"
    },
    "362": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "363": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x173"
    },
    "366": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "367": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "369": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "DUP1",
      "path": "3"
    },
    "370": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "REVERT",
      "path": "3"
    },
    "371": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "372": {
      "op": "POP"
    },
    "373": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "DUP1",
      "path": "3"
    },
    "374": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "375": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "376": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "378": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "ADD",
      "path": "3"
    },
    "379": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "380": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x552"
    },
    "383": {
      "fn": "RebalancerResolver.setRange",
      "jump": "i",
      "offset": [
        624,
        796
      ],
      "op": "JUMP",
      "path": "3"
    },
    "384": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "385": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x188"
    },
    "388": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5C7"
    },
    "391": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMP",
      "path": "17"
    },
    "392": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "393": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "395": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "DUP1",
      "path": "17"
    },
    "396": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "397": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "401": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "403": {
      "op": "SHL"
    },
    "404": {
      "op": "SUB"
    },
    "405": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "406": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "407": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "AND",
      "path": "17"
    },
    "408": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "DUP3",
      "path": "17"
    },
    "409": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "410": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "411": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "412": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "DUP2",
      "path": "17"
    },
    "413": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "414": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "SUB",
      "path": "17"
    },
    "415": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "417": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "ADD",
      "path": "17"
    },
    "418": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "419": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "RETURN",
      "path": "17"
    },
    "420": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "421": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x15B"
    },
    "424": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "426": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "DUP1",
      "path": "17"
    },
    "427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "CALLDATASIZE",
      "path": "17"
    },
    "428": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "SUB",
      "path": "17"
    },
    "429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "431": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "DUP2",
      "path": "17"
    },
    "432": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "LT",
      "path": "17"
    },
    "433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "ISZERO",
      "path": "17"
    },
    "434": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x1BA"
    },
    "437": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "438": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "440": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "DUP1",
      "path": "17"
    },
    "441": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "REVERT",
      "path": "17"
    },
    "442": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "443": {
      "op": "POP"
    },
    "444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "CALLDATALOAD",
      "path": "17"
    },
    "445": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "449": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "451": {
      "op": "SHL"
    },
    "452": {
      "op": "SUB"
    },
    "453": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "AND",
      "path": "17"
    },
    "454": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5D6"
    },
    "457": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMP",
      "path": "17"
    },
    "458": {
      "offset": [
        390,
        420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "459": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        390,
        420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "461": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        390,
        420
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "462": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        390,
        420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "463": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        390,
        420
      ],
      "op": "JUMP",
      "path": "3"
    },
    "464": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "465": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1068,
        1072
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "467": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1074,
        1086
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "469": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1099,
        1121
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "471": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1123,
        1143
      ],
      "op": "DUP1",
      "path": "3"
    },
    "472": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1156
      ],
      "op": "DUP6",
      "path": "3"
    },
    "473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "477": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "479": {
      "op": "SHL"
    },
    "480": {
      "op": "SUB"
    },
    "481": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1169
      ],
      "op": "AND",
      "path": "3"
    },
    "482": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1169
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xBEA0D7FB"
    },
    "487": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1170,
        1176
      ],
      "op": "DUP7",
      "path": "3"
    },
    "488": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "490": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "491": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP3",
      "path": "3"
    },
    "492": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "497": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "AND",
      "path": "3"
    },
    "498": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "500": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "SHL",
      "path": "3"
    },
    "501": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "502": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "503": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "505": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "ADD",
      "path": "3"
    },
    "506": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "507": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP3",
      "path": "3"
    },
    "508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "512": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "514": {
      "op": "SHL"
    },
    "515": {
      "op": "SUB"
    },
    "516": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "AND",
      "path": "3"
    },
    "517": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "518": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "519": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "521": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "ADD",
      "path": "3"
    },
    "522": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "523": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "POP",
      "path": "3"
    },
    "524": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "POP",
      "path": "3"
    },
    "525": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "527": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "528": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "529": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "530": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP4",
      "path": "3"
    },
    "531": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "SUB",
      "path": "3"
    },
    "532": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "533": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP7",
      "path": "3"
    },
    "534": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "535": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "536": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "537": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "538": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "539": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x223"
    },
    "542": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "543": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "545": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "546": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "REVERT",
      "path": "3"
    },
    "547": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "548": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "POP",
      "path": "3"
    },
    "549": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "GAS",
      "path": "3"
    },
    "550": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "551": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "552": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "553": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "554": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x237"
    },
    "557": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "558": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "559": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "561": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "562": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "563": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "564": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "566": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "REVERT",
      "path": "3"
    },
    "567": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "568": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "POP",
      "path": "3"
    },
    "569": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "POP",
      "path": "3"
    },
    "570": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "POP",
      "path": "3"
    },
    "571": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "POP",
      "path": "3"
    },
    "572": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "574": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "575": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "576": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "578": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP2",
      "path": "3"
    },
    "579": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "LT",
      "path": "3"
    },
    "580": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "581": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x24D"
    },
    "584": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "585": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "587": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "588": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "REVERT",
      "path": "3"
    },
    "589": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "590": {
      "op": "POP"
    },
    "591": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP1",
      "path": "3"
    },
    "592": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "593": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "595": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "596": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "597": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "ADD",
      "path": "3"
    },
    "598": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "599": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "600": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "601": {
      "op": "POP"
    },
    "602": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "603": {
      "op": "POP"
    },
    "604": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1187,
        1206
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "606": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1209,
        1241
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x267"
    },
    "609": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP4",
      "path": "3"
    },
    "610": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1147,
        1177
      ],
      "op": "DUP4",
      "path": "3"
    },
    "611": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1209,
        1227
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E0"
    },
    "614": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        1209,
        1241
      ],
      "op": "JUMP",
      "path": "3"
    },
    "615": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1209,
        1241
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "616": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1187,
        1241
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "617": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1187,
        1241
      ],
      "op": "POP",
      "path": "3"
    },
    "618": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1285,
        1286
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "620": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1264
      ],
      "op": "DUP8",
      "path": "3"
    },
    "621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "627": {
      "op": "SHL"
    },
    "628": {
      "op": "SUB"
    },
    "629": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1280
      ],
      "op": "AND",
      "path": "3"
    },
    "630": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1280
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x77A430EA"
    },
    "635": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "637": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "638": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP2",
      "path": "3"
    },
    "639": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "644": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "AND",
      "path": "3"
    },
    "645": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "647": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "SHL",
      "path": "3"
    },
    "648": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP2",
      "path": "3"
    },
    "649": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "650": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "652": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "ADD",
      "path": "3"
    },
    "653": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "655": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "657": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "658": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "659": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP4",
      "path": "3"
    },
    "660": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "SUB",
      "path": "3"
    },
    "661": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP2",
      "path": "3"
    },
    "662": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP7",
      "path": "3"
    },
    "663": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "664": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "665": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "666": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "667": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "668": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A4"
    },
    "671": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "672": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "674": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "675": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "REVERT",
      "path": "3"
    },
    "676": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "677": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "POP",
      "path": "3"
    },
    "678": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "GAS",
      "path": "3"
    },
    "679": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "680": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "681": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "682": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "683": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B8"
    },
    "686": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "687": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "688": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "690": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "691": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "692": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "693": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "695": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "REVERT",
      "path": "3"
    },
    "696": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "697": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "POP",
      "path": "3"
    },
    "698": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "POP",
      "path": "3"
    },
    "699": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "POP",
      "path": "3"
    },
    "700": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "POP",
      "path": "3"
    },
    "701": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "703": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "704": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "705": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "707": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP2",
      "path": "3"
    },
    "708": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "LT",
      "path": "3"
    },
    "709": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "710": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2CE"
    },
    "713": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "714": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "716": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "DUP1",
      "path": "3"
    },
    "717": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "REVERT",
      "path": "3"
    },
    "718": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "719": {
      "op": "POP"
    },
    "720": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1282
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "721": {
      "branch": 18,
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1286
      ],
      "op": "GT",
      "path": "3"
    },
    "722": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1305
      ],
      "op": "DUP1",
      "path": "3"
    },
    "723": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1305
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "724": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1305
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2DD"
    },
    "727": {
      "branch": 18,
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1305
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "728": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1305
      ],
      "op": "POP",
      "path": "3"
    },
    "729": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1304,
        1305
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "731": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1290,
        1301
      ],
      "op": "DUP2",
      "path": "3"
    },
    "732": {
      "branch": 19,
      "fn": "RebalancerResolver.checker",
      "offset": [
        1290,
        1305
      ],
      "op": "GT",
      "path": "3"
    },
    "733": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1255,
        1305
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "734": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1252,
        1968
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "735": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1252,
        1968
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x48D"
    },
    "738": {
      "branch": 19,
      "fn": "RebalancerResolver.checker",
      "offset": [
        1252,
        1968
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "739": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1321,
        1337
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "741": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1421
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CA"
    },
    "744": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1398
      ],
      "op": "DUP9",
      "path": "3"
    },
    "745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "747": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "749": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "751": {
      "op": "SHL"
    },
    "752": {
      "op": "SUB"
    },
    "753": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1418
      ],
      "op": "AND",
      "path": "3"
    },
    "754": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1418
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6A117E61"
    },
    "759": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "761": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "762": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "763": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "768": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "AND",
      "path": "3"
    },
    "769": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "771": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "SHL",
      "path": "3"
    },
    "772": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "773": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "774": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "776": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "ADD",
      "path": "3"
    },
    "777": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "779": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "781": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "782": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "783": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP4",
      "path": "3"
    },
    "784": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "SUB",
      "path": "3"
    },
    "785": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "786": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP7",
      "path": "3"
    },
    "787": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "788": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "789": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "790": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "791": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "792": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x320"
    },
    "795": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "796": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "798": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "799": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "REVERT",
      "path": "3"
    },
    "800": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "801": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "POP",
      "path": "3"
    },
    "802": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "GAS",
      "path": "3"
    },
    "803": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "804": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "805": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "806": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "807": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x334"
    },
    "810": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "811": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "812": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "814": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "815": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "816": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "817": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "819": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "REVERT",
      "path": "3"
    },
    "820": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "821": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "POP",
      "path": "3"
    },
    "822": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "POP",
      "path": "3"
    },
    "823": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "POP",
      "path": "3"
    },
    "824": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "POP",
      "path": "3"
    },
    "825": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "827": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "828": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "829": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "831": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP2",
      "path": "3"
    },
    "832": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "LT",
      "path": "3"
    },
    "833": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "834": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34A"
    },
    "837": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "838": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "840": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "DUP1",
      "path": "3"
    },
    "841": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "REVERT",
      "path": "3"
    },
    "842": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "845": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "847": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "848": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "849": {
      "op": "PUSH4",
      "value": "0x3BD21875"
    },
    "854": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "856": {
      "op": "SHL"
    },
    "857": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "858": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "859": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "860": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "861": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1384
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C4"
    },
    "864": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1384
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "871": {
      "op": "SHL"
    },
    "872": {
      "op": "SUB"
    },
    "873": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1381
      ],
      "op": "DUP14",
      "path": "3"
    },
    "874": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1381
      ],
      "op": "AND",
      "path": "3"
    },
    "875": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1381
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "876": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1381
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x77A430EA"
    },
    "881": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1381
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "882": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "884": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "885": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP3",
      "path": "3"
    },
    "886": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "ADD",
      "path": "3"
    },
    "887": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "888": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "890": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1389,
        1420
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "891": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "892": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "893": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "894": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP3",
      "path": "3"
    },
    "895": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "896": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "SUB",
      "path": "3"
    },
    "897": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "ADD",
      "path": "3"
    },
    "898": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "899": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1381
      ],
      "op": "DUP7",
      "path": "3"
    },
    "900": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "901": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "EXTCODESIZE",
      "path": "3"
    },
    "902": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "903": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "904": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "905": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x391"
    },
    "908": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "909": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "911": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "912": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "REVERT",
      "path": "3"
    },
    "913": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "914": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "POP",
      "path": "3"
    },
    "915": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "GAS",
      "path": "3"
    },
    "916": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "917": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "918": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "919": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "920": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A5"
    },
    "923": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "924": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "925": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "927": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "928": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "929": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "930": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "932": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "REVERT",
      "path": "3"
    },
    "933": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "934": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "POP",
      "path": "3"
    },
    "935": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "POP",
      "path": "3"
    },
    "936": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "POP",
      "path": "3"
    },
    "937": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "POP",
      "path": "3"
    },
    "938": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "940": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "941": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "942": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "944": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP2",
      "path": "3"
    },
    "945": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "LT",
      "path": "3"
    },
    "946": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "947": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3BB"
    },
    "950": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "951": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "953": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "DUP1",
      "path": "3"
    },
    "954": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "REVERT",
      "path": "3"
    },
    "955": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "956": {
      "op": "POP"
    },
    "957": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1356,
        1383
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "958": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1351
      ],
      "op": "DUP6",
      "path": "3"
    },
    "959": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1351
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "960": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1355
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x743"
    },
    "963": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        1340,
        1384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "964": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "965": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1388
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "966": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1388
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x79C"
    },
    "969": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        1340,
        1421
      ],
      "op": "JUMP",
      "path": "3"
    },
    "970": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1340,
        1421
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "971": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1321,
        1421
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "972": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1321,
        1421
      ],
      "op": "POP",
      "path": "3"
    },
    "973": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1436,
        1457
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "975": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1460,
        1527
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3F5"
    },
    "978": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1511,
        1526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "980": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1511,
        1526
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "981": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1460,
        1506
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C4"
    },
    "984": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1505
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3EE"
    },
    "987": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1493,
        1504
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "989": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1493,
        1504
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "990": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1488
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "992": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1488
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "993": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1492
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E0"
    },
    "996": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1492
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "997": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1505
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "998": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1505
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "999": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1505
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1004": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1505
      ],
      "op": "AND",
      "path": "3"
    },
    "1005": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        1473,
        1505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1006": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1473,
        1505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1007": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1460,
        1468
      ],
      "op": "DUP6",
      "path": "3"
    },
    "1008": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1460,
        1468
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1009": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1460,
        1472
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x743"
    },
    "1012": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        1460,
        1506
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1013": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1460,
        1527
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1014": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1436,
        1527
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1015": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1436,
        1527
      ],
      "op": "POP",
      "path": "3"
    },
    "1016": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1541,
        1562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1018": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1565,
        1632
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x420"
    },
    "1021": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1616,
        1631
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1023": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1616,
        1631
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1024": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1565,
        1611
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3C4"
    },
    "1027": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1610
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x419"
    },
    "1030": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1598,
        1609
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1032": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1598,
        1609
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1033": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1593
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1035": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1593
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1036": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1597
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7DE"
    },
    "1039": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1597
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1040": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1610
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1041": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1610
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1042": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1610
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xFFFFFFFF"
    },
    "1047": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1610
      ],
      "op": "AND",
      "path": "3"
    },
    "1048": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        1578,
        1610
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1049": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1578,
        1610
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1050": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1565,
        1573
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1051": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1565,
        1573
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1052": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1565,
        1577
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x743"
    },
    "1055": {
      "fn": "RebalancerResolver.checker",
      "jump": "i",
      "offset": [
        1565,
        1611
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1056": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1565,
        1632
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1057": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1541,
        1632
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1058": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1541,
        1632
      ],
      "op": "POP",
      "path": "3"
    },
    "1059": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1667,
        1680
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1060": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1650,
        1664
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1061": {
      "branch": 20,
      "fn": "RebalancerResolver.checker",
      "offset": [
        1650,
        1680
      ],
      "op": "GT",
      "path": "3"
    },
    "1062": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1650,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1063": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1650,
        1714
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x42F"
    },
    "1066": {
      "branch": 20,
      "fn": "RebalancerResolver.checker",
      "offset": [
        1650,
        1714
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1067": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1650,
        1714
      ],
      "op": "POP",
      "path": "3"
    },
    "1068": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1701,
        1714
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1069": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1684,
        1698
      ],
      "op": "DUP7",
      "path": "3"
    },
    "1070": {
      "branch": 21,
      "fn": "RebalancerResolver.checker",
      "offset": [
        1684,
        1714
      ],
      "op": "LT",
      "path": "3"
    },
    "1071": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1650,
        1714
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1072": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1647,
        1958
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1073": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1647,
        1958
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x489"
    },
    "1076": {
      "branch": 21,
      "fn": "RebalancerResolver.checker",
      "offset": [
        1647,
        1958
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1077": {
      "op": "POP"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 0,
      "value": "0x40"
    },
    "1081": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1082": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP10",
      "path": "3"
    },
    "1092": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "AND",
      "path": "3"
    },
    "1093": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x24"
    },
    "1095": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1096": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1097": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "ADD",
      "path": "3"
    },
    "1098": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1099": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1100": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1101": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1102": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1103": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1104": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1105": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1106": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SUB",
      "path": "3"
    },
    "1107": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1108": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1109": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "ADD",
      "path": "3"
    },
    "1110": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1111": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1112": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x44"
    },
    "1114": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1115": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1116": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "ADD",
      "path": "3"
    },
    "1117": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1118": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1119": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1120": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1122": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1123": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "ADD",
      "path": "3"
    },
    "1124": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1125": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1132": {
      "op": "SHL"
    },
    "1133": {
      "op": "SUB"
    },
    "1134": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "AND",
      "path": "3"
    },
    "1135": {
      "op": "PUSH4",
      "value": "0x6B2B60B5"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1142": {
      "op": "SHL"
    },
    "1143": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "OR",
      "path": "3"
    },
    "1144": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1145": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1146": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1763,
        1767
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1148": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1763,
        1767
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "1149": {
      "op": "POP"
    },
    "1150": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1790,
        1925
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1151": {
      "op": "POP"
    },
    "1152": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1734,
        1943
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x491"
    },
    "1155": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1734,
        1943
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1156": {
      "op": "POP"
    },
    "1157": {
      "op": "POP"
    },
    "1158": {
      "op": "POP"
    },
    "1159": {
      "op": "POP"
    },
    "1160": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1734,
        1943
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1161": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1647,
        1958
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1162": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1252,
        1968
      ],
      "op": "POP",
      "path": "3"
    },
    "1163": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1252,
        1968
      ],
      "op": "POP",
      "path": "3"
    },
    "1164": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1252,
        1968
      ],
      "op": "POP",
      "path": "3"
    },
    "1165": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        1252,
        1968
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1166": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "1167": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "1168": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "1169": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1170": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1171": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "1172": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1173": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1174": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        993,
        1974
      ],
      "op": "POP",
      "path": "3"
    },
    "1175": {
      "fn": "RebalancerResolver.checker",
      "jump": "o",
      "offset": [
        993,
        1974
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1176": {
      "offset": [
        358,
        384
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1177": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        358,
        384
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "1179": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        358,
        384
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1180": {
      "fn": "RebalancerResolver.checker",
      "offset": [
        358,
        384
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1181": {
      "fn": "RebalancerResolver.checker",
      "jump": "o",
      "offset": [
        358,
        384
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1182": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1183": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x4A6"
    },
    "1186": {
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x820"
    },
    "1189": {
      "jump": "i",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1190": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1191": {
      "offset": [
        1237,
        1243
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1193": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1200": {
      "op": "SHL"
    },
    "1201": {
      "op": "SUB"
    },
    "1202": {
      "offset": [
        1237,
        1243
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1203": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1204": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "AND",
      "path": "17"
    },
    "1205": {
      "offset": [
        1237,
        1259
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1206": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1259
      ],
      "op": "AND",
      "path": "17"
    },
    "1207": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1237,
        1259
      ],
      "op": "EQ",
      "path": "17"
    },
    "1208": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x508"
    },
    "1211": {
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1212": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1214": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1215": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1222": {
      "op": "SHL"
    },
    "1223": {
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1224": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1225": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1227": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1229": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1230": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1231": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1232": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1233": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1234": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "1236": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1237": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1238": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1239": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1272": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "1274": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1275": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1276": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1277": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1278": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1279": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1280": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1281": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1282": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SUB",
      "path": "17"
    },
    "1283": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "1285": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1286": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1287": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1288": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1289": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1762,
        1763
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 1,
      "value": "0x0"
    },
    "1291": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1292": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1293": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1295": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "SUB"
    },
    "1304": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1305": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1306": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "AND",
      "path": "17"
    },
    "1307": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1746,
        1752
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1308": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1341": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1342": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1762,
        1763
      ],
      "op": "DUP4",
      "path": "17"
    },
    "1343": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1762,
        1763
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1725,
        1765
      ],
      "op": "LOG3",
      "path": "17"
    },
    "1345": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1792,
        1793
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 2,
      "value": "0x0"
    },
    "1347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1348": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1355": {
      "op": "SHL"
    },
    "1356": {
      "op": "SUB"
    },
    "1357": {
      "op": "NOT"
    },
    "1358": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "AND",
      "path": "17"
    },
    "1359": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1360": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1775,
        1794
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1361": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1656,
        1801
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1362": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        624,
        796
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1363": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x55A"
    },
    "1366": {
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x820"
    },
    "1369": {
      "jump": "i",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1370": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1371": {
      "offset": [
        1237,
        1243
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1373": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1237,
        1243
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1380": {
      "op": "SHL"
    },
    "1381": {
      "op": "SUB"
    },
    "1382": {
      "offset": [
        1237,
        1243
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1383": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1237,
        1243
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1384": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1237,
        1243
      ],
      "op": "AND",
      "path": "17"
    },
    "1385": {
      "offset": [
        1237,
        1259
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1386": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1237,
        1259
      ],
      "op": "AND",
      "path": "17"
    },
    "1387": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1237,
        1259
      ],
      "op": "EQ",
      "path": "17"
    },
    "1388": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5BC"
    },
    "1391": {
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1392": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1394": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1395": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1396": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1400": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1402": {
      "op": "SHL"
    },
    "1403": {
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1404": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1405": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1407": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1409": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1410": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1411": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1412": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1413": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1414": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "1416": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1417": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1418": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1419": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1452": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "1454": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1455": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1456": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1457": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1458": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1459": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1460": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1461": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1462": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "SUB",
      "path": "17"
    },
    "1463": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "1465": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1466": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1467": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1468": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1469": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        719,
        730
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x1"
    },
    "1471": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        719,
        745
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1472": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        719,
        745
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1473": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        719,
        745
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1474": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        719,
        745
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1475": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        755,
        770
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 4,
      "value": "0x2"
    },
    "1477": {
      "fn": "RebalancerResolver.setRange",
      "offset": [
        755,
        789
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1478": {
      "fn": "RebalancerResolver.setRange",
      "jump": "o",
      "offset": [
        624,
        796
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1479": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1480": {
      "fn": "Ownable.owner",
      "offset": [
        1071,
        1078
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1482": {
      "fn": "Ownable.owner",
      "offset": [
        1097,
        1103
      ],
      "op": "SLOAD",
      "path": "17",
      "statement": 5
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1489": {
      "op": "SHL"
    },
    "1490": {
      "op": "SUB"
    },
    "1491": {
      "fn": "Ownable.owner",
      "offset": [
        1097,
        1103
      ],
      "op": "AND",
      "path": "17"
    },
    "1492": {
      "fn": "Ownable.owner",
      "offset": [
        1033,
        1110
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1493": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [
        1033,
        1110
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1494": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1495": {
      "offset": [
        1247,
        1259
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x5DE"
    },
    "1498": {
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x820"
    },
    "1501": {
      "jump": "i",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1502": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1247,
        1259
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1503": {
      "offset": [
        1237,
        1243
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x0"
    },
    "1505": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1512": {
      "op": "SHL"
    },
    "1513": {
      "op": "SUB"
    },
    "1514": {
      "offset": [
        1237,
        1243
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1515": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1516": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1243
      ],
      "op": "AND",
      "path": "17"
    },
    "1517": {
      "offset": [
        1237,
        1259
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1518": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1259
      ],
      "op": "AND",
      "path": "17"
    },
    "1519": {
      "branch": 22,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1237,
        1259
      ],
      "op": "EQ",
      "path": "17"
    },
    "1520": {
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x640"
    },
    "1523": {
      "branch": 22,
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1524": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1526": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1527": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1528": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1532": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1534": {
      "op": "SHL"
    },
    "1535": {
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1537": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1544": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x24"
    },
    "1548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "1584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x44"
    },
    "1586": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1587": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1588": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1589": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1590": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1591": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1592": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1593": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1594": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SUB",
      "path": "17"
    },
    "1595": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x64"
    },
    "1597": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "ADD",
      "path": "17"
    },
    "1598": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1599": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1600": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1229,
        1296
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1605": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1607": {
      "op": "SHL"
    },
    "1608": {
      "op": "SUB"
    },
    "1609": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2038,
        2060
      ],
      "op": "DUP2",
      "path": "17",
      "statement": 6
    },
    "1610": {
      "branch": 23,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2038,
        2060
      ],
      "op": "AND",
      "path": "17"
    },
    "1611": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x685"
    },
    "1614": {
      "branch": 23,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "JUMPI",
      "path": "17"
    },
    "1615": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1617": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1618": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1622": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1624": {
      "op": "SHL"
    },
    "1625": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1626": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1627": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x4"
    },
    "1629": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "ADD",
      "path": "17"
    },
    "1630": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1631": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1632": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1634": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "ADD",
      "path": "17"
    },
    "1635": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1636": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1637": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SUB",
      "path": "17"
    },
    "1638": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP3",
      "path": "17"
    },
    "1639": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1640": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x26"
    },
    "1642": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP2",
      "path": "17"
    },
    "1643": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MSTORE",
      "path": "17"
    },
    "1644": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x20"
    },
    "1646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "ADD",
      "path": "17"
    },
    "1647": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1648": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH2",
      "path": "17",
      "value": "0x921"
    },
    "1651": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x26"
    },
    "1653": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1654": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "CODECOPY",
      "path": "17"
    },
    "1655": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1657": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "ADD",
      "path": "17"
    },
    "1658": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1659": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "POP",
      "path": "17"
    },
    "1660": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "POP",
      "path": "17"
    },
    "1661": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1663": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1664": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1665": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1666": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SUB",
      "path": "17"
    },
    "1667": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1668": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "REVERT",
      "path": "17"
    },
    "1669": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2030,
        2103
      ],
      "op": "JUMPDEST",
      "path": "17"
    },
    "1670": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 7,
      "value": "0x0"
    },
    "1672": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1673": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1674": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "PUSH1",
      "path": "17",
      "value": "0x40"
    },
    "1676": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "MLOAD",
      "path": "17"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1681": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1683": {
      "op": "SHL"
    },
    "1684": {
      "op": "SUB"
    },
    "1685": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1686": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "DUP6",
      "path": "17"
    },
    "1687": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "AND",
      "path": "17"
    },
    "1688": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "SWAP4",
      "path": "17"
    },
    "1689": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1690": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "AND",
      "path": "17"
    },
    "1691": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2139,
        2145
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1692": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "PUSH32",
      "path": "17",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "1725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2118,
        2156
      ],
      "op": "LOG3",
      "path": "17"
    },
    "1727": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2172
      ],
      "op": "PUSH1",
      "path": "17",
      "statement": 8,
      "value": "0x0"
    },
    "1729": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "DUP1",
      "path": "17"
    },
    "1730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SLOAD",
      "path": "17"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "op": "SUB"
    },
    "1739": {
      "op": "NOT"
    },
    "1740": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "AND",
      "path": "17"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1747": {
      "op": "SHL"
    },
    "1748": {
      "op": "SUB"
    },
    "1749": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP3",
      "path": "17"
    },
    "1752": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "AND",
      "path": "17"
    },
    "1753": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1755": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP2",
      "path": "17"
    },
    "1756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "OR",
      "path": "17"
    },
    "1757": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SWAP1",
      "path": "17"
    },
    "1758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2166,
        2183
      ],
      "op": "SSTORE",
      "path": "17"
    },
    "1759": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1950,
        2190
      ],
      "op": "JUMP",
      "path": "17"
    },
    "1760": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1761": {
      "fn": "SafeMath.add",
      "offset": [
        892,
        899
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1763": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1764": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1765": {
      "fn": "SafeMath.add",
      "offset": [
        923,
        928
      ],
      "op": "ADD",
      "path": "28"
    },
    "1766": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP4",
      "path": "28",
      "statement": 9
    },
    "1767": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1768": {
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "LT",
      "path": "28"
    },
    "1769": {
      "branch": 24,
      "fn": "SafeMath.add",
      "offset": [
        946,
        952
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "1770": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x73A"
    },
    "1773": {
      "branch": 24,
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1774": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1776": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1777": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1778": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1782": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1784": {
      "op": "SHL"
    },
    "1785": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1786": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1787": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1789": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1791": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1792": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "28"
    },
    "1793": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1794": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1B"
    },
    "1796": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x24"
    },
    "1798": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1799": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "28"
    },
    "1800": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1801": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
    },
    "1834": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x44"
    },
    "1836": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1837": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "28"
    },
    "1838": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1839": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1840": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1841": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1842": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1843": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1844": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SUB",
      "path": "28"
    },
    "1845": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x64"
    },
    "1847": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "ADD",
      "path": "28"
    },
    "1848": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1849": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1850": {
      "fn": "SafeMath.add",
      "offset": [
        938,
        984
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1851": {
      "fn": "SafeMath.add",
      "offset": [
        1002,
        1003
      ],
      "op": "SWAP1",
      "path": "28",
      "statement": 10
    },
    "1852": {
      "op": "POP"
    },
    "1853": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1854": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "1855": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1856": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "POP",
      "path": "28"
    },
    "1857": {
      "fn": "SafeMath.add",
      "offset": [
        834,
        1010
      ],
      "op": "POP",
      "path": "28"
    },
    "1858": {
      "fn": "SafeMath.add",
      "jump": "o",
      "offset": [
        834,
        1010
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1859": {
      "fn": "SafeMath.mul",
      "offset": [
        2119,
        2578
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1860": {
      "fn": "SafeMath.mul",
      "offset": [
        2177,
        2184
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1862": {
      "branch": 25,
      "fn": "SafeMath.mul",
      "offset": [
        2418,
        2424
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1863": {
      "fn": "SafeMath.mul",
      "offset": [
        2414,
        2459
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x752"
    },
    "1866": {
      "branch": 25,
      "fn": "SafeMath.mul",
      "offset": [
        2414,
        2459
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1867": {
      "op": "POP"
    },
    "1868": {
      "fn": "SafeMath.mul",
      "offset": [
        2447,
        2448
      ],
      "op": "PUSH1",
      "path": "28",
      "statement": 11,
      "value": "0x0"
    },
    "1870": {
      "fn": "SafeMath.mul",
      "offset": [
        2440,
        2448
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x73D"
    },
    "1873": {
      "fn": "SafeMath.mul",
      "offset": [
        2440,
        2448
      ],
      "op": "JUMP",
      "path": "28"
    },
    "1874": {
      "fn": "SafeMath.mul",
      "offset": [
        2414,
        2459
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1875": {
      "fn": "SafeMath.mul",
      "offset": [
        2481,
        2486
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1876": {
      "fn": "SafeMath.mul",
      "offset": [
        2481,
        2486
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1877": {
      "fn": "SafeMath.mul",
      "offset": [
        2481,
        2486
      ],
      "op": "MUL",
      "path": "28"
    },
    "1878": {
      "fn": "SafeMath.mul",
      "offset": [
        2485,
        2486
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1879": {
      "fn": "SafeMath.mul",
      "offset": [
        2481,
        2482
      ],
      "op": "DUP5",
      "path": "28"
    },
    "1880": {
      "fn": "SafeMath.mul",
      "offset": [
        2481,
        2486
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1881": {
      "fn": "SafeMath.mul",
      "offset": [
        2481,
        2482
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1882": {
      "fn": "SafeMath.mul",
      "offset": [
        2504,
        2509
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 12,
      "value": "0x75F"
    },
    "1885": {
      "fn": "SafeMath.mul",
      "offset": [
        2504,
        2509
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1886": {
      "dev": "Division by zero",
      "fn": "SafeMath.mul",
      "offset": [
        2504,
        2509
      ],
      "op": "INVALID",
      "path": "28"
    },
    "1887": {
      "fn": "SafeMath.mul",
      "offset": [
        2504,
        2509
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1888": {
      "fn": "SafeMath.mul",
      "offset": [
        2504,
        2509
      ],
      "op": "DIV",
      "path": "28"
    },
    "1889": {
      "branch": 26,
      "fn": "SafeMath.mul",
      "offset": [
        2504,
        2514
      ],
      "op": "EQ",
      "path": "28"
    },
    "1890": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x73A"
    },
    "1893": {
      "branch": 26,
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "1894": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1896": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1897": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1903": {
      "op": "SHL"
    },
    "1904": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1905": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1906": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "1908": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "ADD",
      "path": "28"
    },
    "1909": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1910": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1911": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1913": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "ADD",
      "path": "28"
    },
    "1914": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1915": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1916": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "SUB",
      "path": "28"
    },
    "1917": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP3",
      "path": "28"
    },
    "1918": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1919": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x21"
    },
    "1921": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1922": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1923": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1925": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "ADD",
      "path": "28"
    },
    "1926": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1927": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x947"
    },
    "1930": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x21"
    },
    "1932": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1933": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "CODECOPY",
      "path": "28"
    },
    "1934": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1936": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "ADD",
      "path": "28"
    },
    "1937": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1938": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "POP",
      "path": "28"
    },
    "1939": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "POP",
      "path": "28"
    },
    "1940": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1942": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1943": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1944": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "1945": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "SUB",
      "path": "28"
    },
    "1946": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "1947": {
      "fn": "SafeMath.mul",
      "offset": [
        2496,
        2552
      ],
      "op": "REVERT",
      "path": "28"
    },
    "1948": {
      "fn": "SafeMath.div",
      "offset": [
        3033,
        3163
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "1949": {
      "fn": "SafeMath.div",
      "offset": [
        3091,
        3098
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "1951": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 13,
      "value": "0x73A"
    },
    "1954": {
      "fn": "SafeMath.div",
      "offset": [
        3121,
        3122
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1955": {
      "fn": "SafeMath.div",
      "offset": [
        3124,
        3125
      ],
      "op": "DUP4",
      "path": "28"
    },
    "1956": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1958": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "1959": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1960": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1962": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "ADD",
      "path": "28"
    },
    "1963": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "1965": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1966": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "DUP1",
      "path": "28"
    },
    "1967": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1A"
    },
    "1969": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "DUP2",
      "path": "28"
    },
    "1970": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "1971": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "1973": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "ADD",
      "path": "28"
    },
    "1974": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x536166654D6174683A206469766973696F6E206279207A65726F000000000000"
    },
    "2007": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2008": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2009": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3156
      ],
      "op": "POP",
      "path": "28"
    },
    "2010": {
      "fn": "SafeMath.div",
      "offset": [
        3117,
        3120
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x824"
    },
    "2013": {
      "fn": "SafeMath.div",
      "jump": "i",
      "offset": [
        3117,
        3156
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2014": {
      "fn": "SafeMath.sub",
      "offset": [
        1274,
        1408
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2015": {
      "fn": "SafeMath.sub",
      "offset": [
        1332,
        1339
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2017": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH2",
      "path": "28",
      "statement": 14,
      "value": "0x73A"
    },
    "2020": {
      "fn": "SafeMath.sub",
      "offset": [
        1362,
        1363
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2021": {
      "fn": "SafeMath.sub",
      "offset": [
        1365,
        1366
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2022": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2024": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2025": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2026": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2028": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "28"
    },
    "2029": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2031": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2032": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2033": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1E"
    },
    "2035": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2036": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2037": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2039": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "ADD",
      "path": "28"
    },
    "2040": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "PUSH32",
      "path": "28",
      "value": "0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
    },
    "2073": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2074": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2075": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1401
      ],
      "op": "POP",
      "path": "28"
    },
    "2076": {
      "fn": "SafeMath.sub",
      "offset": [
        1358,
        1361
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8C6"
    },
    "2079": {
      "fn": "SafeMath.sub",
      "jump": "i",
      "offset": [
        1358,
        1401
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2080": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        839
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2081": {
      "fn": "Context._msgSender",
      "offset": [
        822,
        832
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 15
    },
    "2082": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        839
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2083": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        735,
        839
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2084": {
      "fn": "SafeMath.div",
      "offset": [
        3638,
        3976
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2085": {
      "fn": "SafeMath.div",
      "offset": [
        3724,
        3731
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2087": {
      "fn": "SafeMath.div",
      "offset": [
        3824,
        3836
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 16
    },
    "2088": {
      "branch": 27,
      "fn": "SafeMath.div",
      "offset": [
        3817,
        3822
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2089": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8B0"
    },
    "2092": {
      "branch": 27,
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2093": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2095": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2096": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2100": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2102": {
      "op": "SHL"
    },
    "2103": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2104": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2105": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2107": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2108": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2109": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2110": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2112": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2113": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2114": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2115": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SUB",
      "path": "28"
    },
    "2116": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2117": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2118": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2119": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2120": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2121": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2122": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2123": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2124": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2126": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2127": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2128": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2129": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2130": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2131": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2132": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2134": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2135": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2136": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2137": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2138": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2139": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2141": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2142": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2143": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2144": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "LT",
      "path": "28"
    },
    "2145": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2146": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x875"
    },
    "2149": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2150": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2151": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2152": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2153": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2154": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2155": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2156": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2157": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2158": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2160": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2161": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x85D"
    },
    "2164": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2165": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2166": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2167": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2168": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2169": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2170": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2171": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2172": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2173": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2174": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2175": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2176": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1F"
    },
    "2178": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "AND",
      "path": "28"
    },
    "2179": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2180": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2181": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8A2"
    },
    "2184": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2185": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2186": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2187": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SUB",
      "path": "28"
    },
    "2188": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2189": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2190": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x1"
    },
    "2192": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2193": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2195": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SUB",
      "path": "28"
    },
    "2196": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x100"
    },
    "2199": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "EXP",
      "path": "28"
    },
    "2200": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SUB",
      "path": "28"
    },
    "2201": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "NOT",
      "path": "28"
    },
    "2202": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "AND",
      "path": "28"
    },
    "2203": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2204": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2205": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2207": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "ADD",
      "path": "28"
    },
    "2208": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2209": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2210": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2211": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2212": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2213": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2214": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2215": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2216": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2218": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2219": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2220": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2221": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SUB",
      "path": "28"
    },
    "2222": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2223": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "REVERT",
      "path": "28"
    },
    "2224": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2225": {
      "fn": "SafeMath.div",
      "offset": [
        3809,
        3837
      ],
      "op": "POP",
      "path": "28"
    },
    "2226": {
      "fn": "SafeMath.div",
      "offset": [
        3847,
        3856
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2228": {
      "fn": "SafeMath.div",
      "offset": [
        3863,
        3864
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2229": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3860
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2230": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2231": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x8BC"
    },
    "2234": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2235": {
      "dev": "Division by zero",
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "INVALID",
      "path": "28"
    },
    "2236": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2237": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "DIV",
      "path": "28"
    },
    "2238": {
      "fn": "SafeMath.div",
      "offset": [
        3859,
        3864
      ],
      "op": "SWAP6",
      "path": "28"
    },
    "2239": {
      "fn": "SafeMath.div",
      "offset": [
        3638,
        3976
      ],
      "op": "SWAP5",
      "path": "28"
    },
    "2240": {
      "op": "POP"
    },
    "2241": {
      "op": "POP"
    },
    "2242": {
      "op": "POP"
    },
    "2243": {
      "op": "POP"
    },
    "2244": {
      "op": "POP"
    },
    "2245": {
      "fn": "SafeMath.div",
      "jump": "o",
      "offset": [
        3638,
        3976
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2246": {
      "fn": "SafeMath.sub",
      "offset": [
        1692,
        1879
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2247": {
      "fn": "SafeMath.sub",
      "offset": [
        1778,
        1785
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2249": {
      "fn": "SafeMath.sub",
      "offset": [
        1813,
        1825
      ],
      "op": "DUP2",
      "path": "28",
      "statement": 17
    },
    "2250": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2251": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2252": {
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "GT",
      "path": "28"
    },
    "2253": {
      "branch": 28,
      "fn": "SafeMath.sub",
      "offset": [
        1805,
        1811
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2254": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x918"
    },
    "2257": {
      "branch": 28,
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2258": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x40"
    },
    "2260": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2261": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2267": {
      "op": "SHL"
    },
    "2268": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2269": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2270": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2272": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x4"
    },
    "2274": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2275": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "28"
    },
    "2276": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2277": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2278": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2279": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2280": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2281": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x24"
    },
    "2283": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP5",
      "path": "28"
    },
    "2284": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "28"
    },
    "2285": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2286": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2287": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2288": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2289": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2290": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2291": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP3",
      "path": "28"
    },
    "2292": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x44"
    },
    "2294": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2295": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2296": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "28"
    },
    "2297": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP2",
      "path": "28"
    },
    "2298": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2299": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP6",
      "path": "28"
    },
    "2300": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "28"
    },
    "2301": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2302": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP1",
      "path": "28"
    },
    "2303": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2304": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2305": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x0"
    },
    "2307": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2308": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ISZERO",
      "path": "28"
    },
    "2309": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x875"
    },
    "2312": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPI",
      "path": "28"
    },
    "2313": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2314": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP2",
      "path": "28"
    },
    "2315": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "28"
    },
    "2316": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MLOAD",
      "path": "28"
    },
    "2317": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP4",
      "path": "28"
    },
    "2318": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "DUP3",
      "path": "28"
    },
    "2319": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "28"
    },
    "2320": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "MSTORE",
      "path": "28"
    },
    "2321": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH1",
      "path": "28",
      "value": "0x20"
    },
    "2323": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "ADD",
      "path": "28"
    },
    "2324": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "PUSH2",
      "path": "28",
      "value": "0x85D"
    },
    "2327": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMP",
      "path": "28"
    },
    "2328": {
      "fn": "SafeMath.sub",
      "offset": [
        1797,
        1826
      ],
      "op": "JUMPDEST",
      "path": "28"
    },
    "2329": {
      "op": "POP"
    },
    "2330": {
      "op": "POP"
    },
    "2331": {
      "op": "POP"
    },
    "2332": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2333": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SUB",
      "path": "28"
    },
    "2334": {
      "fn": "SafeMath.sub",
      "offset": [
        1848,
        1853
      ],
      "op": "SWAP1",
      "path": "28"
    },
    "2335": {
      "fn": "SafeMath.sub",
      "jump": "o",
      "offset": [
        1692,
        1879
      ],
      "op": "JUMP",
      "path": "28"
    }
  },
  "sha1": "57b2124a12b4ab6ca79f400012560e297e49b139",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.6.12;\n\nimport \"../interfaces/IStrategy.sol\";\nimport \"./openzeppelin/contracts/token/ERC20/SafeERC20.sol\";\nimport \"./openzeppelin/contracts/access/Ownable.sol\";\n\n\n/**\n* @title Corn Finance Rebalancer Resolver\n* @author C.W.B.\n*/\n\ncontract RebalancerResolver is Ownable {\n    using SafeMath for uint256;\n\n\n    uint256 public rangePoints;\n    uint256 public rangeBasePoints;\n\n    \n    constructor() public {\n        rangePoints = 5;\n        rangeBasePoints = 100;\n    }\n\n    /**\n    * OoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOo\n    */\n    function setRange(uint256 _rangePoints, uint256 _rangeBasePoints) external onlyOwner {\n        rangePoints = _rangePoints;\n        rangeBasePoints = _rangeBasePoints;\n    }\n\n    // --------------------------------------------------------------------------------\n\n    /**\n    * OoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOoOo\n    */\n    function checker(IStrategy _strategy, address _token) public view returns (bool, bytes memory) {\n        (uint256 unstakedAmount, uint256 stakedAmount) = _strategy.balanceRatio(_token);\n        uint256 totalAmount = unstakedAmount.add(stakedAmount);\n\n        if(_strategy.rebalancePoints() > 0 && totalAmount > 0) {\n            uint256 unstaked = totalAmount.mul(_strategy.rebalancePoints()).div(_strategy.rebalanceBasePoints());\n\n            uint256 unstakedUpper = unstaked.mul(rangeBasePoints.add(rangePoints)).div(rangeBasePoints);\n            uint256 unstakedLower = unstaked.mul(rangeBasePoints.sub(rangePoints)).div(rangeBasePoints);\n\n            if(unstakedAmount > unstakedUpper || unstakedAmount < unstakedLower) {\n                return (\n                    true, \n                    abi.encodeWithSelector(\n                        IStrategy.rebalanceToken.selector,\n                        _token\n                    )\n                );\n            }\n        }\n    }\n}",
  "sourceMap": "279:1697:3:-:0;;;432:84;;;;;;;;;-1:-1:-1;832:17:17;852:12;:10;:12::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:17;-1:-1:-1;;;;;874:18:17;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:17;907:43;;874:6;;907:43;-1:-1:-1;477:1:3;463:11;:15;506:3;488:15;:21;279:1697;;735:104:10;822:10;735:104;:::o;279:1697:3:-;;;;;;;",
  "sourcePath": "contracts/RebalancerResolver.sol",
  "type": "contract"
}