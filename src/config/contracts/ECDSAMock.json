{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "recover",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "toEthSignedMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "20": "contracts/openzeppelin/contracts/cryptography/ECDSA.sol",
    "39": "contracts/openzeppelin/contracts/mocks/ECDSAMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/ECDSAMock.sol",
    "exportedSymbols": {
      "ECDSAMock": [
        7995
      ]
    },
    "id": 7996,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7963,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:39"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/cryptography/ECDSA.sol",
        "file": "../cryptography/ECDSA.sol",
        "id": 7964,
        "nodeType": "ImportDirective",
        "scope": 7996,
        "sourceUnit": 6308,
        "src": "25:35:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7995,
        "linearizedBaseContracts": [
          7995
        ],
        "name": "ECDSAMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 7967,
            "libraryName": {
              "contractScope": null,
              "id": 7965,
              "name": "ECDSA",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6307,
              "src": "93:5:39",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ECDSA_$6307",
                "typeString": "library ECDSA"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "87:24:39",
            "typeName": {
              "id": 7966,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "103:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            }
          },
          {
            "body": {
              "id": 7981,
              "nodeType": "Block",
              "src": "202:47:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7978,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "232:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7976,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7969,
                        "src": "219:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 7977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "recover",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6289,
                      "src": "219:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes memory) pure returns (address)"
                      }
                    },
                    "id": 7979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "219:23:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 7975,
                  "id": 7980,
                  "nodeType": "Return",
                  "src": "212:30:39"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "19045a25",
            "id": 7982,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recover",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7969,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7982,
                  "src": "134:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7968,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "134:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7971,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7982,
                  "src": "148:22:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 7970,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "148:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "133:38:39"
            },
            "returnParameters": {
              "id": 7975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7974,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7982,
                  "src": "193:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "193:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "192:9:39"
            },
            "scope": 7995,
            "src": "117:132:39",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7993,
              "nodeType": "Block",
              "src": "331:53:39",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7989,
                        "name": "hash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7984,
                        "src": "348:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "id": 7990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toEthSignedMessageHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6306,
                      "src": "348:27:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$bound_to$_t_bytes32_$",
                        "typeString": "function (bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 7991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "348:29:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 7988,
                  "id": 7992,
                  "nodeType": "Return",
                  "src": "341:36:39"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "918a15cf",
            "id": 7994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toEthSignedMessageHash",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 7985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7984,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7994,
                  "src": "287:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7983,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "287:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "286:14:39"
            },
            "returnParameters": {
              "id": 7988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7987,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7994,
                  "src": "322:7:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7986,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "322:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "321:9:39"
            },
            "scope": 7995,
            "src": "255:129:39",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7996,
        "src": "62:324:39"
      }
    ],
    "src": "0:387:39"
  },
  "bytecode": "608060405234801561001057600080fd5b5061040d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806319045a251461003b578063918a15cf14610104575b600080fd5b6100e86004803603604081101561005157600080fd5b8135919081019060408101602082013564010000000081111561007357600080fd5b82018360208201111561008557600080fd5b803590602001918460018302840111640100000000831117156100a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610133945050505050565b604080516001600160a01b039092168252519081900360200190f35b6101216004803603602081101561011a57600080fd5b5035610146565b60408051918252519081900360200190f35b600061013f8383610157565b9392505050565b600061015182610342565b92915050565b600081516041146101af576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156102205760405162461bcd60e51b81526004018080602001828103825260228152602001806103946022913960400191505060405180910390fd5b8060ff16601b1415801561023857508060ff16601c14155b156102745760405162461bcd60e51b81526004018080602001828103825260228152602001806103b66022913960400191505060405180910390fd5b600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102d0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610338576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b9695505050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c90910190915281519101209056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a2646970667358221220fd84fd277c561e4655eae79e1366367d19faa4b40335054197a612cc81e170d964736f6c634300060c0033",
  "bytecodeSha1": "55ad596300bb6fadb2091b6b7101a332ffbf87b2",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ECDSAMock",
  "coverageMap": {
    "branches": {
      "20": {
        "ECDSA.recover": {
          "8": [
            1170,
            1192,
            false
          ],
          "9": [
            2613,
            2692,
            false
          ],
          "10": [
            2777,
            2784,
            false
          ],
          "11": [
            2788,
            2795,
            false
          ],
          "12": [
            3019,
            3039,
            true
          ]
        }
      },
      "39": {}
    },
    "statements": {
      "20": {
        "ECDSA.recover": {
          "2": [
            1208,
            1249
          ],
          "3": [
            2708,
            2752
          ],
          "4": [
            2811,
            2855
          ],
          "5": [
            3011,
            3068
          ],
          "6": [
            3079,
            3092
          ]
        },
        "ECDSA.toEthSignedMessageHash": {
          "7": [
            3545,
            3621
          ]
        }
      },
      "39": {
        "ECDSAMock.recover": {
          "0": [
            212,
            242
          ]
        },
        "ECDSAMock.toEthSignedMessageHash": {
          "1": [
            341,
            377
          ]
        }
      }
    }
  },
  "dependencies": [
    "ECDSA"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c806319045a251461003b578063918a15cf14610104575b600080fd5b6100e86004803603604081101561005157600080fd5b8135919081019060408101602082013564010000000081111561007357600080fd5b82018360208201111561008557600080fd5b803590602001918460018302840111640100000000831117156100a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610133945050505050565b604080516001600160a01b039092168252519081900360200190f35b6101216004803603602081101561011a57600080fd5b5035610146565b60408051918252519081900360200190f35b600061013f8383610157565b9392505050565b600061015182610342565b92915050565b600081516041146101af576040805162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015290519081900360640190fd5b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156102205760405162461bcd60e51b81526004018080602001828103825260228152602001806103946022913960400191505060405180910390fd5b8060ff16601b1415801561023857508060ff16601c14155b156102745760405162461bcd60e51b81526004018080602001828103825260228152602001806103b66022913960400191505060405180910390fd5b600060018783868660405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa1580156102d0573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610338576040805162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015290519081900360640190fd5b9695505050505050565b604080517f19457468657265756d205369676e6564204d6573736167653a0a333200000000602080830191909152603c8083019490945282518083039094018452605c90910190915281519101209056fe45434453413a20696e76616c6964207369676e6174757265202773272076616c756545434453413a20696e76616c6964207369676e6174757265202776272076616c7565a2646970667358221220fd84fd277c561e4655eae79e1366367d19faa4b40335054197a612cc81e170d964736f6c634300060c0033",
  "deployedSourceMap": "62:324:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;117:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:132:39;;-1:-1:-1;117:132:39;;-1:-1:-1;;;;;117:132:39:i;:::-;;;;-1:-1:-1;;;;;117:132:39;;;;;;;;;;;;;;255:129;;;;;;;;;;;;;;;;-1:-1:-1;255:129:39;;:::i;:::-;;;;;;;;;;;;;;;;117:132;193:7;219:23;:4;232:9;219:12;:23::i;:::-;212:30;117:132;-1:-1:-1;;;117:132:39:o;255:129::-;322:7;348:29;:4;:27;:29::i;:::-;341:36;255:129;-1:-1:-1;;255:129:39:o;1031:2068:20:-;1109:7;1170:9;:16;1190:2;1170:22;1166:94;;1208:41;;;-1:-1:-1;;;1208:41:20;;;;;;;;;;;;;;;;;;;;;;;;;;;1166:94;1610:4;1595:20;;1589:27;1655:4;1640:20;;1634:27;1708:4;1693:20;;1687:27;1326:9;1679:36;2626:66;2613:79;;2609:154;;;2708:44;;-1:-1:-1;;;2708:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2609:154;2777:1;:7;;2782:2;2777:7;;:18;;;;;2788:1;:7;;2793:2;2788:7;;2777:18;2773:93;;;2811:44;;-1:-1:-1;;;2811:44:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:93;2960:14;2977:24;2987:4;2993:1;2996;2999;2977:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2977:24:20;;-1:-1:-1;;2977:24:20;;;-1:-1:-1;;;;;;;3019:20:20;;3011:57;;;;;-1:-1:-1;;;3011:57:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;3086:6;1031:2068;-1:-1:-1;;;;;;1031:2068:20:o;3363:265::-;3562:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3552:69;;;;;;3363:265::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    62,
    386
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x19045A25 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x918A15CF EQ PUSH2 0x104 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x133 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x121 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x11A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x13F DUP4 DUP4 PUSH2 0x157 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x151 DUP3 PUSH2 0x342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x1AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x0 BYTE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP3 GT ISZERO PUSH2 0x220 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x394 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x238 JUMPI POP DUP1 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3B6 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP8 DUP4 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2D0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x338 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0x5C SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP INVALID GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202773272076616C7565 GASLIMIT NUMBER DIFFICULTY MSTORE8 COINBASE GASPRICE KECCAK256 PUSH10 0x6E76616C696420736967 PUSH15 0x6174757265202776272076616C7565 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT DUP5 REVERT 0x27 PUSH29 0x561E4655EAE79E1366367D19FAA4B40335054197A612CC81E170D96473 PUSH16 0x6C634300060C00330000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        62,
        386
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "6": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "DUP1",
      "path": "39"
    },
    "7": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "8": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "12": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "DUP1",
      "path": "39"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "REVERT",
      "path": "39"
    },
    "16": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "17": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "POP",
      "path": "39"
    },
    "18": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "21": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "LT",
      "path": "39"
    },
    "22": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "26": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "29": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "SHR",
      "path": "39"
    },
    "32": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "DUP1",
      "path": "39"
    },
    "33": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x19045A25"
    },
    "38": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "EQ",
      "path": "39"
    },
    "39": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "43": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "DUP1",
      "path": "39"
    },
    "44": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x918A15CF"
    },
    "49": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "EQ",
      "path": "39"
    },
    "50": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x104"
    },
    "53": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "54": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "55": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "DUP1",
      "path": "39"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        62,
        386
      ],
      "op": "REVERT",
      "path": "39"
    },
    "59": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "60": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xE8"
    },
    "63": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "65": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "66": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "67": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SUB",
      "path": "39"
    },
    "68": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "70": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "71": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "LT",
      "path": "39"
    },
    "72": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "73": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x51"
    },
    "76": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "77": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "79": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "80": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "REVERT",
      "path": "39"
    },
    "81": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "82": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "83": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "84": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "85": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "86": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "87": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "88": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "89": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "91": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "92": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "93": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "95": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP3",
      "path": "39"
    },
    "96": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "97": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "98": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH5",
      "path": "39",
      "value": "0x100000000"
    },
    "104": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "105": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "GT",
      "path": "39"
    },
    "106": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "107": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x73"
    },
    "110": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "111": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "113": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "114": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "REVERT",
      "path": "39"
    },
    "115": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "116": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP3",
      "path": "39"
    },
    "117": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "118": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP4",
      "path": "39"
    },
    "119": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "121": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP3",
      "path": "39"
    },
    "122": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "123": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "GT",
      "path": "39"
    },
    "124": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "125": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x85"
    },
    "128": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "129": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "131": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "132": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "REVERT",
      "path": "39"
    },
    "133": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "134": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "135": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "136": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "137": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "139": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "140": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "141": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP5",
      "path": "39"
    },
    "142": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "144": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP4",
      "path": "39"
    },
    "145": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MUL",
      "path": "39"
    },
    "146": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP5",
      "path": "39"
    },
    "147": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "148": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "GT",
      "path": "39"
    },
    "149": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH5",
      "path": "39",
      "value": "0x100000000"
    },
    "155": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP4",
      "path": "39"
    },
    "156": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "GT",
      "path": "39"
    },
    "157": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "OR",
      "path": "39"
    },
    "158": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "159": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA7"
    },
    "162": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "163": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "165": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "166": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "REVERT",
      "path": "39"
    },
    "167": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "168": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "169": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "170": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "171": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "172": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1F"
    },
    "174": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "175": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "177": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "178": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "179": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DIV",
      "path": "39"
    },
    "180": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MUL",
      "path": "39"
    },
    "181": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "183": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "184": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "186": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "187": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "188": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "189": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "190": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "192": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "193": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "194": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "195": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "196": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "197": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "198": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "199": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "200": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "201": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "203": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "204": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP4",
      "path": "39"
    },
    "205": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP4",
      "path": "39"
    },
    "206": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "207": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP3",
      "path": "39"
    },
    "208": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP5",
      "path": "39"
    },
    "209": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "CALLDATACOPY",
      "path": "39"
    },
    "210": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "212": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "213": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "214": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "215": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "216": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "217": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "218": {
      "op": "POP"
    },
    "219": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "220": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP6",
      "path": "39"
    },
    "221": {
      "op": "POP"
    },
    "222": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x133"
    },
    "225": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP5",
      "path": "39"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "op": "POP"
    },
    "228": {
      "op": "POP"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "op": "POP"
    },
    "231": {
      "fn": "ECDSAMock.recover",
      "jump": "i",
      "offset": [
        117,
        249
      ],
      "op": "JUMP",
      "path": "39"
    },
    "232": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "233": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "235": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP1",
      "path": "39"
    },
    "236": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "241": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "243": {
      "op": "SHL"
    },
    "244": {
      "op": "SUB"
    },
    "245": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "246": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "247": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "AND",
      "path": "39"
    },
    "248": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP3",
      "path": "39"
    },
    "249": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "250": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "251": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "252": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "DUP2",
      "path": "39"
    },
    "253": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "254": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SUB",
      "path": "39"
    },
    "255": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "257": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "ADD",
      "path": "39"
    },
    "258": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "259": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "RETURN",
      "path": "39"
    },
    "260": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "261": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x121"
    },
    "264": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "266": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "DUP1",
      "path": "39"
    },
    "267": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "268": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "SUB",
      "path": "39"
    },
    "269": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "271": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "DUP2",
      "path": "39"
    },
    "272": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "LT",
      "path": "39"
    },
    "273": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "274": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x11A"
    },
    "277": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "278": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "280": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "DUP1",
      "path": "39"
    },
    "281": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "REVERT",
      "path": "39"
    },
    "282": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "283": {
      "op": "POP"
    },
    "284": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "285": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x146"
    },
    "288": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "jump": "i",
      "offset": [
        255,
        384
      ],
      "op": "JUMP",
      "path": "39"
    },
    "289": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "290": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "292": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "DUP1",
      "path": "39"
    },
    "293": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "294": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "295": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "DUP3",
      "path": "39"
    },
    "296": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "297": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "298": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "299": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "DUP2",
      "path": "39"
    },
    "300": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "301": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "SUB",
      "path": "39"
    },
    "302": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "304": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "ADD",
      "path": "39"
    },
    "305": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "306": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "RETURN",
      "path": "39"
    },
    "307": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "308": {
      "fn": "ECDSAMock.recover",
      "offset": [
        193,
        200
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "310": {
      "fn": "ECDSAMock.recover",
      "offset": [
        219,
        242
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 0,
      "value": "0x13F"
    },
    "313": {
      "fn": "ECDSAMock.recover",
      "offset": [
        219,
        223
      ],
      "op": "DUP4",
      "path": "39"
    },
    "314": {
      "fn": "ECDSAMock.recover",
      "offset": [
        232,
        241
      ],
      "op": "DUP4",
      "path": "39"
    },
    "315": {
      "fn": "ECDSAMock.recover",
      "offset": [
        219,
        231
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x157"
    },
    "318": {
      "fn": "ECDSAMock.recover",
      "jump": "i",
      "offset": [
        219,
        242
      ],
      "op": "JUMP",
      "path": "39"
    },
    "319": {
      "fn": "ECDSAMock.recover",
      "offset": [
        219,
        242
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "320": {
      "fn": "ECDSAMock.recover",
      "offset": [
        212,
        242
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "321": {
      "fn": "ECDSAMock.recover",
      "offset": [
        117,
        249
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "322": {
      "op": "POP"
    },
    "323": {
      "op": "POP"
    },
    "324": {
      "op": "POP"
    },
    "325": {
      "fn": "ECDSAMock.recover",
      "jump": "o",
      "offset": [
        117,
        249
      ],
      "op": "JUMP",
      "path": "39"
    },
    "326": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "327": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        322,
        329
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "329": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        348,
        377
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 1,
      "value": "0x151"
    },
    "332": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        348,
        352
      ],
      "op": "DUP3",
      "path": "39"
    },
    "333": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        348,
        375
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x342"
    },
    "336": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "jump": "i",
      "offset": [
        348,
        377
      ],
      "op": "JUMP",
      "path": "39"
    },
    "337": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        348,
        377
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "338": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        341,
        377
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "339": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "offset": [
        255,
        384
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "340": {
      "op": "POP"
    },
    "341": {
      "op": "POP"
    },
    "342": {
      "fn": "ECDSAMock.toEthSignedMessageHash",
      "jump": "o",
      "offset": [
        255,
        384
      ],
      "op": "JUMP",
      "path": "39"
    },
    "343": {
      "fn": "ECDSA.recover",
      "offset": [
        1031,
        3099
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "344": {
      "fn": "ECDSA.recover",
      "offset": [
        1109,
        1116
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "346": {
      "fn": "ECDSA.recover",
      "offset": [
        1170,
        1179
      ],
      "op": "DUP2",
      "path": "20"
    },
    "347": {
      "fn": "ECDSA.recover",
      "offset": [
        1170,
        1186
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "348": {
      "fn": "ECDSA.recover",
      "offset": [
        1190,
        1192
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x41"
    },
    "350": {
      "branch": 8,
      "fn": "ECDSA.recover",
      "offset": [
        1170,
        1192
      ],
      "op": "EQ",
      "path": "20"
    },
    "351": {
      "fn": "ECDSA.recover",
      "offset": [
        1166,
        1260
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x1AF"
    },
    "354": {
      "branch": 8,
      "fn": "ECDSA.recover",
      "offset": [
        1166,
        1260
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "355": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 2,
      "value": "0x40"
    },
    "357": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "DUP1",
      "path": "20"
    },
    "358": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "365": {
      "op": "SHL"
    },
    "366": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "DUP2",
      "path": "20"
    },
    "367": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "368": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "370": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "372": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "373": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "ADD",
      "path": "20"
    },
    "374": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "375": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1F"
    },
    "377": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "379": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "380": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "ADD",
      "path": "20"
    },
    "381": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "382": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800"
    },
    "415": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "417": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "DUP3",
      "path": "20"
    },
    "418": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "ADD",
      "path": "20"
    },
    "419": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "420": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "421": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "422": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "423": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "DUP2",
      "path": "20"
    },
    "424": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "425": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "SUB",
      "path": "20"
    },
    "426": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "428": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "ADD",
      "path": "20"
    },
    "429": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "430": {
      "fn": "ECDSA.recover",
      "offset": [
        1208,
        1249
      ],
      "op": "REVERT",
      "path": "20"
    },
    "431": {
      "fn": "ECDSA.recover",
      "offset": [
        1166,
        1260
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "432": {
      "fn": "ECDSA.recover",
      "offset": [
        1610,
        1614
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "434": {
      "fn": "ECDSA.recover",
      "offset": [
        1595,
        1615
      ],
      "op": "DUP3",
      "path": "20"
    },
    "435": {
      "fn": "ECDSA.recover",
      "offset": [
        1595,
        1615
      ],
      "op": "ADD",
      "path": "20"
    },
    "436": {
      "fn": "ECDSA.recover",
      "offset": [
        1589,
        1616
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "437": {
      "fn": "ECDSA.recover",
      "offset": [
        1655,
        1659
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "439": {
      "fn": "ECDSA.recover",
      "offset": [
        1640,
        1660
      ],
      "op": "DUP4",
      "path": "20"
    },
    "440": {
      "fn": "ECDSA.recover",
      "offset": [
        1640,
        1660
      ],
      "op": "ADD",
      "path": "20"
    },
    "441": {
      "fn": "ECDSA.recover",
      "offset": [
        1634,
        1661
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "442": {
      "fn": "ECDSA.recover",
      "offset": [
        1708,
        1712
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x60"
    },
    "444": {
      "fn": "ECDSA.recover",
      "offset": [
        1693,
        1713
      ],
      "op": "DUP5",
      "path": "20"
    },
    "445": {
      "fn": "ECDSA.recover",
      "offset": [
        1693,
        1713
      ],
      "op": "ADD",
      "path": "20"
    },
    "446": {
      "fn": "ECDSA.recover",
      "offset": [
        1687,
        1714
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "447": {
      "fn": "ECDSA.recover",
      "offset": [
        1326,
        1335
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "449": {
      "fn": "ECDSA.recover",
      "offset": [
        1679,
        1715
      ],
      "op": "BYTE",
      "path": "20"
    },
    "450": {
      "fn": "ECDSA.recover",
      "offset": [
        2626,
        2692
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
    },
    "483": {
      "fn": "ECDSA.recover",
      "offset": [
        2613,
        2692
      ],
      "op": "DUP3",
      "path": "20"
    },
    "484": {
      "branch": 9,
      "fn": "ECDSA.recover",
      "offset": [
        2613,
        2692
      ],
      "op": "GT",
      "path": "20"
    },
    "485": {
      "fn": "ECDSA.recover",
      "offset": [
        2609,
        2763
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "486": {
      "fn": "ECDSA.recover",
      "offset": [
        2609,
        2763
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x220"
    },
    "489": {
      "branch": 9,
      "fn": "ECDSA.recover",
      "offset": [
        2609,
        2763
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "490": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 3,
      "value": "0x40"
    },
    "492": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "493": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "497": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "499": {
      "op": "SHL"
    },
    "500": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP2",
      "path": "20"
    },
    "501": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "502": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "504": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "ADD",
      "path": "20"
    },
    "505": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP1",
      "path": "20"
    },
    "506": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP1",
      "path": "20"
    },
    "507": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "509": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "ADD",
      "path": "20"
    },
    "510": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP3",
      "path": "20"
    },
    "511": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP2",
      "path": "20"
    },
    "512": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "SUB",
      "path": "20"
    },
    "513": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP3",
      "path": "20"
    },
    "514": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "515": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x22"
    },
    "517": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP2",
      "path": "20"
    },
    "518": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "519": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "521": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "ADD",
      "path": "20"
    },
    "522": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP1",
      "path": "20"
    },
    "523": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x394"
    },
    "526": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x22"
    },
    "528": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "529": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "530": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "532": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "ADD",
      "path": "20"
    },
    "533": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "534": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "POP",
      "path": "20"
    },
    "535": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "POP",
      "path": "20"
    },
    "536": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "538": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "539": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "DUP1",
      "path": "20"
    },
    "540": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "541": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "SUB",
      "path": "20"
    },
    "542": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "543": {
      "fn": "ECDSA.recover",
      "offset": [
        2708,
        2752
      ],
      "op": "REVERT",
      "path": "20"
    },
    "544": {
      "fn": "ECDSA.recover",
      "offset": [
        2609,
        2763
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "545": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2778
      ],
      "op": "DUP1",
      "path": "20"
    },
    "546": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "548": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2784
      ],
      "op": "AND",
      "path": "20"
    },
    "549": {
      "fn": "ECDSA.recover",
      "offset": [
        2782,
        2784
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1B"
    },
    "551": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2784
      ],
      "op": "EQ",
      "path": "20"
    },
    "552": {
      "branch": 10,
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2784
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "553": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2795
      ],
      "op": "DUP1",
      "path": "20"
    },
    "554": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2795
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "555": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2795
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x238"
    },
    "558": {
      "branch": 10,
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2795
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "559": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2795
      ],
      "op": "POP",
      "path": "20"
    },
    "560": {
      "fn": "ECDSA.recover",
      "offset": [
        2788,
        2789
      ],
      "op": "DUP1",
      "path": "20"
    },
    "561": {
      "fn": "ECDSA.recover",
      "offset": [
        2788,
        2795
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "563": {
      "fn": "ECDSA.recover",
      "offset": [
        2788,
        2795
      ],
      "op": "AND",
      "path": "20"
    },
    "564": {
      "fn": "ECDSA.recover",
      "offset": [
        2793,
        2795
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1C"
    },
    "566": {
      "fn": "ECDSA.recover",
      "offset": [
        2788,
        2795
      ],
      "op": "EQ",
      "path": "20"
    },
    "567": {
      "branch": 11,
      "fn": "ECDSA.recover",
      "offset": [
        2788,
        2795
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "568": {
      "fn": "ECDSA.recover",
      "offset": [
        2777,
        2795
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "569": {
      "fn": "ECDSA.recover",
      "offset": [
        2773,
        2866
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "570": {
      "fn": "ECDSA.recover",
      "offset": [
        2773,
        2866
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x274"
    },
    "573": {
      "branch": 11,
      "fn": "ECDSA.recover",
      "offset": [
        2773,
        2866
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "574": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 4,
      "value": "0x40"
    },
    "576": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "577": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "581": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "583": {
      "op": "SHL"
    },
    "584": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP2",
      "path": "20"
    },
    "585": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "586": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "588": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "ADD",
      "path": "20"
    },
    "589": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP1",
      "path": "20"
    },
    "590": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP1",
      "path": "20"
    },
    "591": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "593": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "ADD",
      "path": "20"
    },
    "594": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP3",
      "path": "20"
    },
    "595": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP2",
      "path": "20"
    },
    "596": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "SUB",
      "path": "20"
    },
    "597": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP3",
      "path": "20"
    },
    "598": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "599": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x22"
    },
    "601": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP2",
      "path": "20"
    },
    "602": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "603": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "605": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "ADD",
      "path": "20"
    },
    "606": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP1",
      "path": "20"
    },
    "607": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x3B6"
    },
    "610": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x22"
    },
    "612": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "613": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "CODECOPY",
      "path": "20"
    },
    "614": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "616": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "ADD",
      "path": "20"
    },
    "617": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "618": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "POP",
      "path": "20"
    },
    "619": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "POP",
      "path": "20"
    },
    "620": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "622": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "623": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "DUP1",
      "path": "20"
    },
    "624": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "625": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "SUB",
      "path": "20"
    },
    "626": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "627": {
      "fn": "ECDSA.recover",
      "offset": [
        2811,
        2855
      ],
      "op": "REVERT",
      "path": "20"
    },
    "628": {
      "fn": "ECDSA.recover",
      "offset": [
        2773,
        2866
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "629": {
      "fn": "ECDSA.recover",
      "offset": [
        2960,
        2974
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "631": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x1"
    },
    "633": {
      "fn": "ECDSA.recover",
      "offset": [
        2987,
        2991
      ],
      "op": "DUP8",
      "path": "20"
    },
    "634": {
      "fn": "ECDSA.recover",
      "offset": [
        2993,
        2994
      ],
      "op": "DUP4",
      "path": "20"
    },
    "635": {
      "fn": "ECDSA.recover",
      "offset": [
        2996,
        2997
      ],
      "op": "DUP7",
      "path": "20"
    },
    "636": {
      "fn": "ECDSA.recover",
      "offset": [
        2999,
        3000
      ],
      "op": "DUP7",
      "path": "20"
    },
    "637": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "639": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "640": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "642": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP2",
      "path": "20"
    },
    "643": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "644": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "646": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "ADD",
      "path": "20"
    },
    "647": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "649": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "650": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "652": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "653": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP1",
      "path": "20"
    },
    "654": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP6",
      "path": "20"
    },
    "655": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP2",
      "path": "20"
    },
    "656": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "657": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "659": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "ADD",
      "path": "20"
    },
    "660": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP5",
      "path": "20"
    },
    "661": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0xFF"
    },
    "663": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "AND",
      "path": "20"
    },
    "664": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP2",
      "path": "20"
    },
    "665": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "666": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "668": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "ADD",
      "path": "20"
    },
    "669": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP4",
      "path": "20"
    },
    "670": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP2",
      "path": "20"
    },
    "671": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "672": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "674": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "ADD",
      "path": "20"
    },
    "675": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP3",
      "path": "20"
    },
    "676": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP2",
      "path": "20"
    },
    "677": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "678": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "680": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "ADD",
      "path": "20"
    },
    "681": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "682": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "POP",
      "path": "20"
    },
    "683": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "POP",
      "path": "20"
    },
    "684": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "POP",
      "path": "20"
    },
    "685": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "POP",
      "path": "20"
    },
    "686": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "POP",
      "path": "20"
    },
    "687": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "689": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "691": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "692": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "694": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP2",
      "path": "20"
    },
    "695": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "SUB",
      "path": "20"
    },
    "696": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "697": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP1",
      "path": "20"
    },
    "698": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP5",
      "path": "20"
    },
    "699": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "SUB",
      "path": "20"
    },
    "700": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "701": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP6",
      "path": "20"
    },
    "702": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "GAS",
      "path": "20"
    },
    "703": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "STATICCALL",
      "path": "20"
    },
    "704": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "705": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP1",
      "path": "20"
    },
    "706": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "ISZERO",
      "path": "20"
    },
    "707": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x2D0"
    },
    "710": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "711": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "712": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "714": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "DUP1",
      "path": "20"
    },
    "715": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "RETURNDATACOPY",
      "path": "20"
    },
    "716": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "RETURNDATASIZE",
      "path": "20"
    },
    "717": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x0"
    },
    "719": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "REVERT",
      "path": "20"
    },
    "720": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "721": {
      "op": "POP"
    },
    "722": {
      "op": "POP"
    },
    "723": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "725": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "726": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "728": {
      "op": "NOT"
    },
    "729": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "ADD",
      "path": "20"
    },
    "730": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "731": {
      "fn": "ECDSA.recover",
      "offset": [
        2977,
        3001
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "732": {
      "op": "POP"
    },
    "733": {
      "op": "POP"
    },
    "734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "op": "SUB"
    },
    "742": {
      "fn": "ECDSA.recover",
      "offset": [
        3019,
        3039
      ],
      "op": "DUP2",
      "path": "20",
      "statement": 5
    },
    "743": {
      "branch": 12,
      "fn": "ECDSA.recover",
      "offset": [
        3019,
        3039
      ],
      "op": "AND",
      "path": "20"
    },
    "744": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH2",
      "path": "20",
      "value": "0x338"
    },
    "747": {
      "branch": 12,
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "JUMPI",
      "path": "20"
    },
    "748": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x40"
    },
    "750": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "DUP1",
      "path": "20"
    },
    "751": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "752": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "DUP2",
      "path": "20"
    },
    "760": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "761": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "763": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x4"
    },
    "765": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "DUP3",
      "path": "20"
    },
    "766": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "ADD",
      "path": "20"
    },
    "767": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "768": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x18"
    },
    "770": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x24"
    },
    "772": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "DUP3",
      "path": "20"
    },
    "773": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "ADD",
      "path": "20"
    },
    "774": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "775": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x45434453413A20696E76616C6964207369676E61747572650000000000000000"
    },
    "808": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x44"
    },
    "810": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "DUP3",
      "path": "20"
    },
    "811": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "ADD",
      "path": "20"
    },
    "812": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "813": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "814": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "815": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "816": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "DUP2",
      "path": "20"
    },
    "817": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "818": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "SUB",
      "path": "20"
    },
    "819": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x64"
    },
    "821": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "ADD",
      "path": "20"
    },
    "822": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "823": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "REVERT",
      "path": "20"
    },
    "824": {
      "fn": "ECDSA.recover",
      "offset": [
        3011,
        3068
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "825": {
      "fn": "ECDSA.recover",
      "offset": [
        3086,
        3092
      ],
      "op": "SWAP7",
      "path": "20",
      "statement": 6
    },
    "826": {
      "fn": "ECDSA.recover",
      "offset": [
        1031,
        3099
      ],
      "op": "SWAP6",
      "path": "20"
    },
    "827": {
      "op": "POP"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "op": "POP"
    },
    "831": {
      "op": "POP"
    },
    "832": {
      "op": "POP"
    },
    "833": {
      "fn": "ECDSA.recover",
      "jump": "o",
      "offset": [
        1031,
        3099
      ],
      "op": "JUMP",
      "path": "20"
    },
    "834": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3363,
        3628
      ],
      "op": "JUMPDEST",
      "path": "20"
    },
    "835": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "PUSH1",
      "path": "20",
      "statement": 7,
      "value": "0x40"
    },
    "837": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP1",
      "path": "20"
    },
    "838": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "839": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "PUSH32",
      "path": "20",
      "value": "0x19457468657265756D205369676E6564204D6573736167653A0A333200000000"
    },
    "872": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x20"
    },
    "874": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP1",
      "path": "20"
    },
    "875": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP4",
      "path": "20"
    },
    "876": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "ADD",
      "path": "20"
    },
    "877": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "878": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "879": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "880": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "881": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x3C"
    },
    "883": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP1",
      "path": "20"
    },
    "884": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP4",
      "path": "20"
    },
    "885": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "ADD",
      "path": "20"
    },
    "886": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "887": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "888": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "889": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "890": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP3",
      "path": "20"
    },
    "891": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "892": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP1",
      "path": "20"
    },
    "893": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP4",
      "path": "20"
    },
    "894": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SUB",
      "path": "20"
    },
    "895": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "896": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP5",
      "path": "20"
    },
    "897": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "ADD",
      "path": "20"
    },
    "898": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "DUP5",
      "path": "20"
    },
    "899": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "900": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "PUSH1",
      "path": "20",
      "value": "0x5C"
    },
    "902": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "903": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "904": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "ADD",
      "path": "20"
    },
    "905": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "906": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "907": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3562,
        3620
      ],
      "op": "MSTORE",
      "path": "20"
    },
    "908": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3552,
        3621
      ],
      "op": "DUP2",
      "path": "20"
    },
    "909": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3552,
        3621
      ],
      "op": "MLOAD",
      "path": "20"
    },
    "910": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3552,
        3621
      ],
      "op": "SWAP2",
      "path": "20"
    },
    "911": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3552,
        3621
      ],
      "op": "ADD",
      "path": "20"
    },
    "912": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3552,
        3621
      ],
      "op": "KECCAK256",
      "path": "20"
    },
    "913": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "offset": [
        3552,
        3621
      ],
      "op": "SWAP1",
      "path": "20"
    },
    "914": {
      "fn": "ECDSA.toEthSignedMessageHash",
      "jump": "o",
      "offset": [
        3363,
        3628
      ],
      "op": "JUMP",
      "path": "20"
    }
  },
  "sha1": "b1d7619858586c79f8fc9a9282bf7a7208d22971",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../cryptography/ECDSA.sol\";\n\ncontract ECDSAMock {\n    using ECDSA for bytes32;\n\n    function recover(bytes32 hash, bytes memory signature) public pure returns (address) {\n        return hash.recover(signature);\n    }\n\n    function toEthSignedMessageHash(bytes32 hash) public pure returns (bytes32) {\n        return hash.toEthSignedMessageHash();\n    }\n}\n",
  "sourceMap": "62:324:39:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/ECDSAMock.sol",
  "type": "contract"
}