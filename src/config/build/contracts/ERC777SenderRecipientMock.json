{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toBalance",
          "type": "uint256"
        }
      ],
      "name": "TokensReceivedCalled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fromBalance",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "toBalance",
          "type": "uint256"
        }
      ],
      "name": "TokensToSendCalled",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC777",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "interfaceHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "canImplementInterfaceForAddress",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "recipientFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "registerRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "registerSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC777",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "send",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "senderFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "shouldRevert",
          "type": "bool"
        }
      ],
      "name": "setShouldRevertReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "shouldRevert",
          "type": "bool"
        }
      ],
      "name": "setShouldRevertSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "userData",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "operatorData",
          "type": "bytes"
        }
      ],
      "name": "tokensToSend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/openzeppelin/contracts/GSN/Context.sol",
    "100": "contracts/openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
    "23": "contracts/openzeppelin/contracts/introspection/ERC1820Implementer.sol",
    "25": "contracts/openzeppelin/contracts/introspection/IERC1820Implementer.sol",
    "26": "contracts/openzeppelin/contracts/introspection/IERC1820Registry.sol",
    "55": "contracts/openzeppelin/contracts/mocks/ERC777SenderRecipientMock.sol",
    "98": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol",
    "99": "contracts/openzeppelin/contracts/token/ERC777/IERC777Recipient.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/ERC777SenderRecipientMock.sol",
    "exportedSymbols": {
      "ERC777SenderRecipientMock": [
        12723
      ]
    },
    "id": 12724,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12386,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:55"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/GSN/Context.sol",
        "file": "../GSN/Context.sol",
        "id": 12387,
        "nodeType": "ImportDirective",
        "scope": 12724,
        "sourceUnit": 8186,
        "src": "25:28:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777.sol",
        "file": "../token/ERC777/IERC777.sol",
        "id": 12388,
        "nodeType": "ImportDirective",
        "scope": 12724,
        "sourceUnit": 18915,
        "src": "54:37:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
        "file": "../token/ERC777/IERC777Sender.sol",
        "id": 12389,
        "nodeType": "ImportDirective",
        "scope": 12724,
        "sourceUnit": 18955,
        "src": "92:43:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
        "file": "../token/ERC777/IERC777Recipient.sol",
        "id": 12390,
        "nodeType": "ImportDirective",
        "scope": 12724,
        "sourceUnit": 18935,
        "src": "136:46:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/introspection/IERC1820Registry.sol",
        "file": "../introspection/IERC1820Registry.sol",
        "id": 12391,
        "nodeType": "ImportDirective",
        "scope": 12724,
        "sourceUnit": 10700,
        "src": "183:47:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/introspection/ERC1820Implementer.sol",
        "file": "../introspection/ERC1820Implementer.sol",
        "id": 12392,
        "nodeType": "ImportDirective",
        "scope": 12724,
        "sourceUnit": 10584,
        "src": "231:49:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12393,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8185,
              "src": "320:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$8185",
                "typeString": "contract Context"
              }
            },
            "id": 12394,
            "nodeType": "InheritanceSpecifier",
            "src": "320:7:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12395,
              "name": "IERC777Sender",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18954,
              "src": "329:13:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC777Sender_$18954",
                "typeString": "contract IERC777Sender"
              }
            },
            "id": 12396,
            "nodeType": "InheritanceSpecifier",
            "src": "329:13:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12397,
              "name": "IERC777Recipient",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 18934,
              "src": "344:16:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC777Recipient_$18934",
                "typeString": "contract IERC777Recipient"
              }
            },
            "id": 12398,
            "nodeType": "InheritanceSpecifier",
            "src": "344:16:55"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 12399,
              "name": "ERC1820Implementer",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10583,
              "src": "362:18:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC1820Implementer_$10583",
                "typeString": "contract ERC1820Implementer"
              }
            },
            "id": 12400,
            "nodeType": "InheritanceSpecifier",
            "src": "362:18:55"
          }
        ],
        "contractDependencies": [
          8185,
          10583,
          10609,
          18934,
          18954
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 12723,
        "linearizedBaseContracts": [
          12723,
          10583,
          10609,
          18934,
          18954,
          8185
        ],
        "name": "ERC777SenderRecipientMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 12420,
            "name": "TokensToSendCalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12402,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "421:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "421:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12404,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "447:12:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12406,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "469:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "469:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12408,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "489:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12410,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "513:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12409,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "513:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12412,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "533:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12411,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "533:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12414,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "561:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12416,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fromBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "584:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12415,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "584:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12418,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12420,
                  "src": "613:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "613:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "411:225:55"
            },
            "src": "387:250:55"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 12440,
            "name": "TokensReceivedCalled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12422,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "679:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "679:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12424,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "705:12:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12426,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "727:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12425,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12428,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "747:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12427,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "747:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12430,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "771:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12429,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12432,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "791:18:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12431,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12434,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "819:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "819:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12436,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fromBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "842:19:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12438,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "toBalance",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12440,
                  "src": "871:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "669:225:55"
            },
            "src": "643:252:55"
          },
          {
            "constant": false,
            "id": 12442,
            "mutability": "mutable",
            "name": "_shouldRevertSend",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 12723,
            "src": "901:30:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12441,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "901:4:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12444,
            "mutability": "mutable",
            "name": "_shouldRevertReceive",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 12723,
            "src": "937:33:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12443,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "937:4:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 12449,
            "mutability": "mutable",
            "name": "_erc1820",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 12723,
            "src": "977:96:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC1820Registry_$10699",
              "typeString": "contract IERC1820Registry"
            },
            "typeName": {
              "contractScope": null,
              "id": 12445,
              "name": "IERC1820Registry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10699,
              "src": "977:16:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$10699",
                "typeString": "contract IERC1820Registry"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "307831383230613442373631384264453731446365386364633733614142364339353930356661443234",
                  "id": 12447,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1030:42:55",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 12446,
                "name": "IERC1820Registry",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 10699,
                "src": "1013:16:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IERC1820Registry_$10699_$",
                  "typeString": "type(contract IERC1820Registry)"
                }
              },
              "id": 12448,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1013:60:55",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC1820Registry_$10699",
                "typeString": "contract IERC1820Registry"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 12454,
            "mutability": "constant",
            "name": "_TOKENS_SENDER_INTERFACE_HASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 12723,
            "src": "1080:88:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12450,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1080:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "455243373737546f6b656e7353656e646572",
                  "id": 12452,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1147:20:55",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  },
                  "value": "ERC777TokensSender"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe895",
                    "typeString": "literal_string \"ERC777TokensSender\""
                  }
                ],
                "id": 12451,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1137:9:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12453,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1137:31:55",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 12459,
            "mutability": "constant",
            "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 12723,
            "src": "1174:94:55",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 12455,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1174:7:55",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "455243373737546f6b656e73526563697069656e74",
                  "id": 12457,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1244:23:55",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  },
                  "value": "ERC777TokensRecipient"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_b281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b",
                    "typeString": "literal_string \"ERC777TokensRecipient\""
                  }
                ],
                "id": 12456,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1234:9:55",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 12458,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1234:34:55",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "baseFunctions": [
              18953
            ],
            "body": {
              "id": 12517,
              "nodeType": "Block",
              "src": "1483:563:55",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12475,
                    "name": "_shouldRevertSend",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12442,
                    "src": "1497:17:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12480,
                  "nodeType": "IfStatement",
                  "src": "1493:56:55",
                  "trueBody": {
                    "id": 12479,
                    "nodeType": "Block",
                    "src": "1516:33:55",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12476,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1530:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1530:8:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12478,
                        "nodeType": "ExpressionStatement",
                        "src": "1530:8:55"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    12482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12482,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 12517,
                      "src": "1559:13:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$18914",
                        "typeString": "contract IERC777"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12481,
                        "name": "IERC777",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18914,
                        "src": "1559:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$18914",
                          "typeString": "contract IERC777"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12487,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12484,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8173,
                          "src": "1583:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 12485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1583:12:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12483,
                      "name": "IERC777",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18914,
                      "src": "1575:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC777_$18914_$",
                        "typeString": "type(contract IERC777)"
                      }
                    },
                    "id": 12486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:21:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$18914",
                      "typeString": "contract IERC777"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1559:37:55"
                },
                {
                  "assignments": [
                    12489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12489,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 12517,
                      "src": "1607:19:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12488,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1607:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12494,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12492,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12463,
                        "src": "1645:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12490,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12482,
                        "src": "1629:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$18914",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 12491,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18790,
                      "src": "1629:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:21:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1607:43:55"
                },
                {
                  "assignments": [
                    12496
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12496,
                      "mutability": "mutable",
                      "name": "toBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 12517,
                      "src": "1756:17:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12495,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1756:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12501,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12499,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12465,
                        "src": "1792:2:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12497,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12482,
                        "src": "1776:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$18914",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 12498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18790,
                      "src": "1776:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1776:19:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1756:39:55"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12503,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12461,
                        "src": "1843:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12504,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12463,
                        "src": "1865:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12505,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12465,
                        "src": "1883:2:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12506,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12467,
                        "src": "1899:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12507,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12469,
                        "src": "1919:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12508,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12471,
                        "src": "1941:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12511,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12482,
                            "src": "1975:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC777_$18914",
                              "typeString": "contract IERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC777_$18914",
                              "typeString": "contract IERC777"
                            }
                          ],
                          "id": 12510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1967:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12509,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1967:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 12512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1967:14:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12513,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12489,
                        "src": "1995:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12514,
                        "name": "toBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12496,
                        "src": "2020:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12502,
                      "name": "TokensToSendCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12420,
                      "src": "1811:18:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,address,uint256,uint256)"
                      }
                    },
                    "id": 12515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:228:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12516,
                  "nodeType": "EmitStatement",
                  "src": "1806:233:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "75ab9782",
            "id": 12518,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensToSend",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12473,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1474:8:55"
            },
            "parameters": {
              "id": 12472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12461,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12518,
                  "src": "1306:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12463,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12518,
                  "src": "1332:12:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1332:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12465,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12518,
                  "src": "1354:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1354:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12467,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12518,
                  "src": "1374:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12469,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12518,
                  "src": "1398:23:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12468,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1398:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12471,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12518,
                  "src": "1431:27:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12470,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1296:168:55"
            },
            "returnParameters": {
              "id": 12474,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1483:0:55"
            },
            "scope": 12723,
            "src": "1275:771:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              18933
            ],
            "body": {
              "id": 12576,
              "nodeType": "Block",
              "src": "2262:568:55",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 12534,
                    "name": "_shouldRevertReceive",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12444,
                    "src": "2276:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12539,
                  "nodeType": "IfStatement",
                  "src": "2272:59:55",
                  "trueBody": {
                    "id": 12538,
                    "nodeType": "Block",
                    "src": "2298:33:55",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 12535,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2312:6:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 12536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2312:8:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12537,
                        "nodeType": "ExpressionStatement",
                        "src": "2312:8:55"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    12541
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12541,
                      "mutability": "mutable",
                      "name": "token",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 12576,
                      "src": "2341:13:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC777_$18914",
                        "typeString": "contract IERC777"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 12540,
                        "name": "IERC777",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 18914,
                        "src": "2341:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$18914",
                          "typeString": "contract IERC777"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12546,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 12543,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8173,
                          "src": "2365:10:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 12544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2365:12:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 12542,
                      "name": "IERC777",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18914,
                      "src": "2357:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC777_$18914_$",
                        "typeString": "type(contract IERC777)"
                      }
                    },
                    "id": 12545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2357:21:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$18914",
                      "typeString": "contract IERC777"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2341:37:55"
                },
                {
                  "assignments": [
                    12548
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12548,
                      "mutability": "mutable",
                      "name": "fromBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 12576,
                      "src": "2389:19:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12547,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2389:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12553,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12551,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12522,
                        "src": "2427:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12549,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12541,
                        "src": "2411:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$18914",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 12550,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18790,
                      "src": "2411:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2411:21:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2389:43:55"
                },
                {
                  "assignments": [
                    12555
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12555,
                      "mutability": "mutable",
                      "name": "toBalance",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 12576,
                      "src": "2538:17:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 12554,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2538:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12560,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12558,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12524,
                        "src": "2574:2:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12556,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12541,
                        "src": "2558:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$18914",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 12557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18790,
                      "src": "2558:15:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 12559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2558:19:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2538:39:55"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12562,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12520,
                        "src": "2627:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12563,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12522,
                        "src": "2649:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12564,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12524,
                        "src": "2667:2:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12565,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12526,
                        "src": "2683:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12566,
                        "name": "userData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12528,
                        "src": "2703:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12567,
                        "name": "operatorData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12530,
                        "src": "2725:12:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12570,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12541,
                            "src": "2759:5:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC777_$18914",
                              "typeString": "contract IERC777"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC777_$18914",
                              "typeString": "contract IERC777"
                            }
                          ],
                          "id": 12569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2751:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12568,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2751:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 12571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2751:14:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12572,
                        "name": "fromBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12548,
                        "src": "2779:11:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12573,
                        "name": "toBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12555,
                        "src": "2804:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12561,
                      "name": "TokensReceivedCalled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12440,
                      "src": "2593:20:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,bytes memory,bytes memory,address,uint256,uint256)"
                      }
                    },
                    "id": 12574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2593:230:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12575,
                  "nodeType": "EmitStatement",
                  "src": "2588:235:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "0023de29",
            "id": 12577,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensReceived",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12532,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2253:8:55"
            },
            "parameters": {
              "id": 12531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12520,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12577,
                  "src": "2085:16:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2085:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12522,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12577,
                  "src": "2111:12:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2111:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12524,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12577,
                  "src": "2133:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12526,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12577,
                  "src": "2153:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12525,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2153:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12528,
                  "mutability": "mutable",
                  "name": "userData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12577,
                  "src": "2177:23:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12527,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2177:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12530,
                  "mutability": "mutable",
                  "name": "operatorData",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12577,
                  "src": "2210:27:55",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12529,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2075:168:55"
            },
            "returnParameters": {
              "id": 12533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2262:0:55"
            },
            "scope": 12723,
            "src": "2052:778:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12603,
              "nodeType": "Block",
              "src": "2879:199:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12583,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12454,
                        "src": "2918:29:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12584,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12579,
                        "src": "2949:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12582,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10582,
                      "src": "2889:28:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 12585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2889:68:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12586,
                  "nodeType": "ExpressionStatement",
                  "src": "2889:68:55"
                },
                {
                  "assignments": [
                    12588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12588,
                      "mutability": "mutable",
                      "name": "self",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 12603,
                      "src": "2968:12:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12587,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2968:7:55",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12593,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12591,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "2991:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$12723",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$12723",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      ],
                      "id": 12590,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2983:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 12589,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2983:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 12592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2983:13:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2968:28:55"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12594,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12579,
                      "src": "3010:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 12595,
                      "name": "self",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12588,
                      "src": "3021:4:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3010:15:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12602,
                  "nodeType": "IfStatement",
                  "src": "3006:66:55",
                  "trueBody": {
                    "id": 12601,
                    "nodeType": "Block",
                    "src": "3027:45:55",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12598,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12588,
                              "src": "3056:4:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12597,
                            "name": "registerSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12621,
                            "src": "3041:14:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 12599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3041:20:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12600,
                        "nodeType": "ExpressionStatement",
                        "src": "3041:20:55"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d2de6474",
            "id": 12604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "senderFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12579,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12604,
                  "src": "2855:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12578,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2855:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2854:17:55"
            },
            "returnParameters": {
              "id": 12581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2879:0:55"
            },
            "scope": 12723,
            "src": "2836:242:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12620,
              "nodeType": "Block",
              "src": "3131:103:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12614,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3182:4:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$12723",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$12723",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          ],
                          "id": 12613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3174:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3174:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 12615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3174:13:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12616,
                        "name": "_TOKENS_SENDER_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12454,
                        "src": "3189:29:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12617,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12606,
                        "src": "3220:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12609,
                        "name": "_erc1820",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12449,
                        "src": "3141:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$10699",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 12611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10638,
                      "src": "3141:32:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 12618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3141:86:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12619,
                  "nodeType": "ExpressionStatement",
                  "src": "3141:86:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e1ecbd30",
            "id": 12621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12606,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12621,
                  "src": "3108:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12605,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3108:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3107:16:55"
            },
            "returnParameters": {
              "id": 12608,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3131:0:55"
            },
            "scope": 12723,
            "src": "3084:150:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12647,
              "nodeType": "Block",
              "src": "3286:205:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12627,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12459,
                        "src": "3325:32:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12628,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12623,
                        "src": "3359:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12626,
                      "name": "_registerInterfaceForAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10582,
                      "src": "3296:28:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 12629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3296:71:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12630,
                  "nodeType": "ExpressionStatement",
                  "src": "3296:71:55"
                },
                {
                  "assignments": [
                    12632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12632,
                      "mutability": "mutable",
                      "name": "self",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 12647,
                      "src": "3378:12:55",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12631,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3378:7:55",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 12637,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12635,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -28,
                        "src": "3401:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$12723",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$12723",
                          "typeString": "contract ERC777SenderRecipientMock"
                        }
                      ],
                      "id": 12634,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3393:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 12633,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3393:7:55",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 12636,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3393:13:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3378:28:55"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 12640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 12638,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12623,
                      "src": "3420:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 12639,
                      "name": "self",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12632,
                      "src": "3431:4:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3420:15:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 12646,
                  "nodeType": "IfStatement",
                  "src": "3416:69:55",
                  "trueBody": {
                    "id": 12645,
                    "nodeType": "Block",
                    "src": "3437:48:55",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 12642,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12632,
                              "src": "3469:4:55",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12641,
                            "name": "registerRecipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12665,
                            "src": "3451:17:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 12643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3451:23:55",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 12644,
                        "nodeType": "ExpressionStatement",
                        "src": "3451:23:55"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "e0eb2180",
            "id": 12648,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "recipientFor",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12623,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12648,
                  "src": "3262:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3262:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3261:17:55"
            },
            "returnParameters": {
              "id": 12625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3286:0:55"
            },
            "scope": 12723,
            "src": "3240:251:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12664,
              "nodeType": "Block",
              "src": "3550:109:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 12658,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3601:4:55",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$12723",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC777SenderRecipientMock_$12723",
                              "typeString": "contract ERC777SenderRecipientMock"
                            }
                          ],
                          "id": 12657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3593:7:55",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 12656,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3593:7:55",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 12659,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3593:13:55",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12660,
                        "name": "_TOKENS_RECIPIENT_INTERFACE_HASH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12459,
                        "src": "3608:32:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12661,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12650,
                        "src": "3642:9:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12653,
                        "name": "_erc1820",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12449,
                        "src": "3560:8:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC1820Registry_$10699",
                          "typeString": "contract IERC1820Registry"
                        }
                      },
                      "id": 12655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInterfaceImplementer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10638,
                      "src": "3560:32:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (address,bytes32,address) external"
                      }
                    },
                    "id": 12662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:92:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12663,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:92:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a8badaa5",
            "id": 12665,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerRecipient",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12651,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12650,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12665,
                  "src": "3524:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3524:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3523:19:55"
            },
            "returnParameters": {
              "id": 12652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3550:0:55"
            },
            "scope": 12723,
            "src": "3497:162:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12674,
              "nodeType": "Block",
              "src": "3720:49:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12670,
                      "name": "_shouldRevertSend",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12442,
                      "src": "3730:17:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12671,
                      "name": "shouldRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12667,
                      "src": "3750:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3730:32:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12673,
                  "nodeType": "ExpressionStatement",
                  "src": "3730:32:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4e4ae5a5",
            "id": 12675,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setShouldRevertSend",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12667,
                  "mutability": "mutable",
                  "name": "shouldRevert",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12675,
                  "src": "3694:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12666,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3694:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3693:19:55"
            },
            "returnParameters": {
              "id": 12669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3720:0:55"
            },
            "scope": 12723,
            "src": "3665:104:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12684,
              "nodeType": "Block",
              "src": "3833:52:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 12682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 12680,
                      "name": "_shouldRevertReceive",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12444,
                      "src": "3843:20:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 12681,
                      "name": "shouldRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12677,
                      "src": "3866:12:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3843:35:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12683,
                  "nodeType": "ExpressionStatement",
                  "src": "3843:35:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "c97e18fc",
            "id": 12685,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setShouldRevertReceive",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12677,
                  "mutability": "mutable",
                  "name": "shouldRevert",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12685,
                  "src": "3807:17:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12676,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3807:4:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3806:19:55"
            },
            "returnParameters": {
              "id": 12679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3833:0:55"
            },
            "scope": 12723,
            "src": "3775:110:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12704,
              "nodeType": "Block",
              "src": "3974:158:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12699,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12689,
                        "src": "4066:2:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12700,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12691,
                        "src": "4070:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12701,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12693,
                        "src": "4078:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12696,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12687,
                        "src": "4055:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$18914",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 12698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "send",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18800,
                      "src": "4055:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory) external"
                      }
                    },
                    "id": 12702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4055:28:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12703,
                  "nodeType": "ExpressionStatement",
                  "src": "4055:28:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3836ef89",
            "id": 12705,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "send",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12687,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12705,
                  "src": "3905:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC777_$18914",
                    "typeString": "contract IERC777"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12686,
                    "name": "IERC777",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18914,
                    "src": "3905:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$18914",
                      "typeString": "contract IERC777"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12689,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12705,
                  "src": "3920:10:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3920:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12691,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12705,
                  "src": "3932:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12690,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3932:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12693,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12705,
                  "src": "3948:17:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12692,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3948:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3904:62:55"
            },
            "returnParameters": {
              "id": 12695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3974:0:55"
            },
            "scope": 12723,
            "src": "3891:241:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12721,
              "nodeType": "Block",
              "src": "4209:41:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 12717,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12709,
                        "src": "4230:6:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 12718,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12711,
                        "src": "4238:4:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 12714,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12707,
                        "src": "4219:5:55",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC777_$18914",
                          "typeString": "contract IERC777"
                        }
                      },
                      "id": 12716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 18808,
                      "src": "4219:10:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,bytes memory) external"
                      }
                    },
                    "id": 12719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4219:24:55",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12720,
                  "nodeType": "ExpressionStatement",
                  "src": "4219:24:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "44d17187",
            "id": 12722,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12707,
                  "mutability": "mutable",
                  "name": "token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12722,
                  "src": "4152:13:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC777_$18914",
                    "typeString": "contract IERC777"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 12706,
                    "name": "IERC777",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 18914,
                    "src": "4152:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC777_$18914",
                      "typeString": "contract IERC777"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12709,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12722,
                  "src": "4167:14:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 12708,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4167:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12711,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 12722,
                  "src": "4183:17:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 12710,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4183:5:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4151:50:55"
            },
            "returnParameters": {
              "id": 12713,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4209:0:55"
            },
            "scope": 12723,
            "src": "4138:112:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 12724,
        "src": "282:3970:55"
      }
    ],
    "src": "0:4254:55"
  },
  "bytecode": "60806040526001805462010000600160b01b031916751820a4b7618bde71dce8cdc73aab6c95905fad24000017905534801561003a57600080fd5b50610da58061004a6000396000f3fe608060405234801561001057600080fd5b50600436106100a85760003560e01c806375ab97821161007157806375ab97821461036f578063a8badaa514610455578063c97e18fc1461047b578063d2de64741461049a578063e0eb2180146104c0578063e1ecbd30146104e6576100a8565b806223de29146100ad578063249cb3fa146101955780633836ef89146101d357806344d17187146102975780634e4ae5a514610350575b600080fd5b610193600480360360c08110156100c357600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a081016080820135600160201b81111561010557600080fd5b82018360208201111561011757600080fd5b803590602001918460018302840111600160201b8311171561013857600080fd5b919390929091602081019035600160201b81111561015557600080fd5b82018360208201111561016757600080fd5b803590602001918460018302840111600160201b8311171561018857600080fd5b50909250905061050c565b005b6101c1600480360360408110156101ab57600080fd5b50803590602001356001600160a01b031661072a565b60408051918252519081900360200190f35b610193600480360360808110156101e957600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561022357600080fd5b82018360208201111561023557600080fd5b803590602001918460018302840111600160201b8311171561025657600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061079f945050505050565b610193600480360360608110156102ad57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156102dc57600080fd5b8201836020820111156102ee57600080fd5b803590602001918460018302840111600160201b8311171561030f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061087e945050505050565b6101936004803603602081101561036657600080fd5b5035151561094c565b610193600480360360c081101561038557600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a081016080820135600160201b8111156103c757600080fd5b8201836020820111156103d957600080fd5b803590602001918460018302840111600160201b831117156103fa57600080fd5b919390929091602081019035600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460018302840111600160201b8311171561044a57600080fd5b50909250905061095f565b6101936004803603602081101561046b57600080fd5b50356001600160a01b0316610b78565b6101936004803603602081101561049157600080fd5b50351515610c14565b610193600480360360208110156104b057600080fd5b50356001600160a01b0316610c2e565b610193600480360360208110156104d657600080fd5b50356001600160a01b0316610c77565b610193600480360360208110156104fc57600080fd5b50356001600160a01b0316610cbc565b600154610100900460ff161561052157600080fd5b600061052b610d3d565b90506000816001600160a01b03166370a082318a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561057c57600080fd5b505afa158015610590573d6000803e3d6000fd5b505050506040513d60208110156105a657600080fd5b5051604080516370a0823160e01b81526001600160a01b038b811660048301529151929350600092918516916370a0823191602480820192602092909190829003018186803b1580156105f857600080fd5b505afa15801561060c573d6000803e3d6000fd5b505050506040513d602081101561062257600080fd5b810190808051906020019092919050505090507f47e915878c47f3ec4d7ff646a2becb229f64fd2abe4d2b5e2bb4275b0cf50d4e8b8b8b8b8b8b8b8b8b8b8b604051808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b031681526020018981526020018060200180602001866001600160a01b0316815260200185815260200184815260200183810383528a8a82818152602001925080828437600083820152601f01601f191690910184810383528881526020019050888880828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a15050505050505050505050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16610759576000610798565b604051602001808073455243313832305f4143434550545f4d4147494360601b8152506014019050604051602081830303815290604052805190602001205b9392505050565b836001600160a01b0316639bd9bbc68484846040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b5050505050505050565b6040805163fe9d930360e01b815260048101848152602482019283528351604483015283516001600160a01b0387169363fe9d9303938793879390929160640190602085019080838360005b838110156108e25781810151838201526020016108ca565b50505050905090810190601f16801561090f5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561092f57600080fd5b505af1158015610943573d6000803e3d6000fd5b50505050505050565b6001805460ff1916911515919091179055565b60015460ff161561096f57600080fd5b6000610979610d3d565b90506000816001600160a01b03166370a082318a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109ca57600080fd5b505afa1580156109de573d6000803e3d6000fd5b505050506040513d60208110156109f457600080fd5b5051604080516370a0823160e01b81526001600160a01b038b811660048301529151929350600092918516916370a0823191602480820192602092909190829003018186803b158015610a4657600080fd5b505afa158015610a5a573d6000803e3d6000fd5b505050506040513d6020811015610a7057600080fd5b810190808051906020019092919050505090507faa3e88aca472e90221daf7d3d601abafb62b120319089d7a2c2f63588da855298b8b8b8b8b8b8b8b8b8b8b604051808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b031681526020018981526020018060200180602001866001600160a01b0316815260200185815260200184815260200183810383528a8a82818152602001925080828437600083820152601f01601f191690910184810383528881526020019050888880828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a15050505050505050505050565b600154604080516329965a1d60e01b81523060048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201526001600160a01b038481166044830152915162010000909304909116916329965a1d9160648082019260009290919082900301818387803b158015610bf957600080fd5b505af1158015610c0d573d6000803e3d6000fd5b5050505050565b600180549115156101000261ff0019909216919091179055565b610c587f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89582610d41565b306001600160a01b038216811415610c7357610c7381610cbc565b5050565b610ca17fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b82610d41565b306001600160a01b038216811415610c7357610c7381610b78565b600154604080516329965a1d60e01b81523060048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201526001600160a01b038481166044830152915162010000909304909116916329965a1d9160648082019260009290919082900301818387803b158015610bf957600080fd5b3390565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff1916600117905556fea2646970667358221220bf2ea15a2fdf26056c304485d912c00c196b55a6b41dfa773714c9a6b9a2db9264736f6c634300060c0033",
  "bytecodeSha1": "f3f1cc83a9575ce5a39a61f996a0d6eac5c9b3cb",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC777SenderRecipientMock",
  "coverageMap": {
    "branches": {
      "10": {},
      "100": {},
      "23": {
        "ERC1820Implementer.canImplementInterfaceForAddress": {
          "21": [
            834,
            878,
            true
          ]
        }
      },
      "25": {},
      "26": {},
      "55": {
        "ERC777SenderRecipientMock.recipientFor": {
          "20": [
            3420,
            3435,
            false
          ]
        },
        "ERC777SenderRecipientMock.senderFor": {
          "19": [
            3010,
            3025,
            false
          ]
        },
        "ERC777SenderRecipientMock.tokensReceived": {
          "17": [
            2276,
            2296,
            false
          ]
        },
        "ERC777SenderRecipientMock.tokensToSend": {
          "18": [
            1497,
            1514,
            false
          ]
        }
      },
      "98": {},
      "99": {}
    },
    "statements": {
      "10": {
        "Context._msgSender": {
          "15": [
            815,
            832
          ]
        }
      },
      "100": {},
      "23": {
        "ERC1820Implementer._registerInterfaceForAddress": {
          "16": [
            1265,
            1316
          ]
        },
        "ERC1820Implementer.canImplementInterfaceForAddress": {
          "2": [
            827,
            918
          ]
        }
      },
      "25": {},
      "26": {},
      "55": {
        "ERC777SenderRecipientMock.burn": {
          "4": [
            4219,
            4243
          ]
        },
        "ERC777SenderRecipientMock.recipientFor": {
          "12": [
            3296,
            3367
          ],
          "13": [
            3451,
            3474
          ]
        },
        "ERC777SenderRecipientMock.registerRecipient": {
          "8": [
            3560,
            3652
          ]
        },
        "ERC777SenderRecipientMock.registerSender": {
          "14": [
            3141,
            3227
          ]
        },
        "ERC777SenderRecipientMock.send": {
          "3": [
            4055,
            4083
          ]
        },
        "ERC777SenderRecipientMock.senderFor": {
          "10": [
            2889,
            2957
          ],
          "11": [
            3041,
            3061
          ]
        },
        "ERC777SenderRecipientMock.setShouldRevertReceive": {
          "9": [
            3843,
            3878
          ]
        },
        "ERC777SenderRecipientMock.setShouldRevertSend": {
          "5": [
            3730,
            3762
          ]
        },
        "ERC777SenderRecipientMock.tokensReceived": {
          "0": [
            2312,
            2320
          ],
          "1": [
            2588,
            2823
          ]
        },
        "ERC777SenderRecipientMock.tokensToSend": {
          "6": [
            1530,
            1538
          ],
          "7": [
            1806,
            2039
          ]
        }
      },
      "98": {},
      "99": {}
    }
  },
  "dependencies": [
    "Context",
    "ERC1820Implementer",
    "IERC1820Implementer",
    "IERC1820Registry",
    "IERC777",
    "IERC777Recipient",
    "IERC777Sender"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100a85760003560e01c806375ab97821161007157806375ab97821461036f578063a8badaa514610455578063c97e18fc1461047b578063d2de64741461049a578063e0eb2180146104c0578063e1ecbd30146104e6576100a8565b806223de29146100ad578063249cb3fa146101955780633836ef89146101d357806344d17187146102975780634e4ae5a514610350575b600080fd5b610193600480360360c08110156100c357600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a081016080820135600160201b81111561010557600080fd5b82018360208201111561011757600080fd5b803590602001918460018302840111600160201b8311171561013857600080fd5b919390929091602081019035600160201b81111561015557600080fd5b82018360208201111561016757600080fd5b803590602001918460018302840111600160201b8311171561018857600080fd5b50909250905061050c565b005b6101c1600480360360408110156101ab57600080fd5b50803590602001356001600160a01b031661072a565b60408051918252519081900360200190f35b610193600480360360808110156101e957600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561022357600080fd5b82018360208201111561023557600080fd5b803590602001918460018302840111600160201b8311171561025657600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061079f945050505050565b610193600480360360608110156102ad57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b8111156102dc57600080fd5b8201836020820111156102ee57600080fd5b803590602001918460018302840111600160201b8311171561030f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061087e945050505050565b6101936004803603602081101561036657600080fd5b5035151561094c565b610193600480360360c081101561038557600080fd5b6001600160a01b03823581169260208101358216926040820135909216916060820135919081019060a081016080820135600160201b8111156103c757600080fd5b8201836020820111156103d957600080fd5b803590602001918460018302840111600160201b831117156103fa57600080fd5b919390929091602081019035600160201b81111561041757600080fd5b82018360208201111561042957600080fd5b803590602001918460018302840111600160201b8311171561044a57600080fd5b50909250905061095f565b6101936004803603602081101561046b57600080fd5b50356001600160a01b0316610b78565b6101936004803603602081101561049157600080fd5b50351515610c14565b610193600480360360208110156104b057600080fd5b50356001600160a01b0316610c2e565b610193600480360360208110156104d657600080fd5b50356001600160a01b0316610c77565b610193600480360360208110156104fc57600080fd5b50356001600160a01b0316610cbc565b600154610100900460ff161561052157600080fd5b600061052b610d3d565b90506000816001600160a01b03166370a082318a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561057c57600080fd5b505afa158015610590573d6000803e3d6000fd5b505050506040513d60208110156105a657600080fd5b5051604080516370a0823160e01b81526001600160a01b038b811660048301529151929350600092918516916370a0823191602480820192602092909190829003018186803b1580156105f857600080fd5b505afa15801561060c573d6000803e3d6000fd5b505050506040513d602081101561062257600080fd5b810190808051906020019092919050505090507f47e915878c47f3ec4d7ff646a2becb229f64fd2abe4d2b5e2bb4275b0cf50d4e8b8b8b8b8b8b8b8b8b8b8b604051808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b031681526020018981526020018060200180602001866001600160a01b0316815260200185815260200184815260200183810383528a8a82818152602001925080828437600083820152601f01601f191690910184810383528881526020019050888880828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a15050505050505050505050565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16610759576000610798565b604051602001808073455243313832305f4143434550545f4d4147494360601b8152506014019050604051602081830303815290604052805190602001205b9392505050565b836001600160a01b0316639bd9bbc68484846040518463ffffffff1660e01b815260040180846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b50945050505050600060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b5050505050505050565b6040805163fe9d930360e01b815260048101848152602482019283528351604483015283516001600160a01b0387169363fe9d9303938793879390929160640190602085019080838360005b838110156108e25781810151838201526020016108ca565b50505050905090810190601f16801561090f5780820380516001836020036101000a031916815260200191505b509350505050600060405180830381600087803b15801561092f57600080fd5b505af1158015610943573d6000803e3d6000fd5b50505050505050565b6001805460ff1916911515919091179055565b60015460ff161561096f57600080fd5b6000610979610d3d565b90506000816001600160a01b03166370a082318a6040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156109ca57600080fd5b505afa1580156109de573d6000803e3d6000fd5b505050506040513d60208110156109f457600080fd5b5051604080516370a0823160e01b81526001600160a01b038b811660048301529151929350600092918516916370a0823191602480820192602092909190829003018186803b158015610a4657600080fd5b505afa158015610a5a573d6000803e3d6000fd5b505050506040513d6020811015610a7057600080fd5b810190808051906020019092919050505090507faa3e88aca472e90221daf7d3d601abafb62b120319089d7a2c2f63588da855298b8b8b8b8b8b8b8b8b8b8b604051808c6001600160a01b031681526020018b6001600160a01b031681526020018a6001600160a01b031681526020018981526020018060200180602001866001600160a01b0316815260200185815260200184815260200183810383528a8a82818152602001925080828437600083820152601f01601f191690910184810383528881526020019050888880828437600083820152604051601f909101601f19169092018290039f50909d5050505050505050505050505050a15050505050505050505050565b600154604080516329965a1d60e01b81523060048201527fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b60248201526001600160a01b038481166044830152915162010000909304909116916329965a1d9160648082019260009290919082900301818387803b158015610bf957600080fd5b505af1158015610c0d573d6000803e3d6000fd5b5050505050565b600180549115156101000261ff0019909216919091179055565b610c587f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89582610d41565b306001600160a01b038216811415610c7357610c7381610cbc565b5050565b610ca17fb281fc8c12954d22544db45de3159a39272895b169a852b314f9cc762e44c53b82610d41565b306001600160a01b038216811415610c7357610c7381610b78565b600154604080516329965a1d60e01b81523060048201527f29ddb589b1fb5fc7cf394961c1adf5f8c6454761adf795e67fe149f658abe89560248201526001600160a01b038481166044830152915162010000909304909116916329965a1d9160648082019260009290919082900301818387803b158015610bf957600080fd5b3390565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff1916600117905556fea2646970667358221220bf2ea15a2fdf26056c304485d912c00c196b55a6b41dfa773714c9a6b9a2db9264736f6c634300060c0033",
  "deployedSourceMap": "282:3970:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:778;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2052:778:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2052:778:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2052:778:55;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2052:778:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2052:778:55;;;;;;;;;;-1:-1:-1;2052:778:55;;-1:-1:-1;2052:778:55;-1:-1:-1;2052:778:55;:::i;:::-;;697:228:23;;;;;;;;;;;;;;;;-1:-1:-1;697:228:23;;;;;;-1:-1:-1;;;;;697:228:23;;:::i;:::-;;;;;;;;;;;;;;;;3891:241:55;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3891:241:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3891:241:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3891:241:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3891:241:55;;-1:-1:-1;3891:241:55;;-1:-1:-1;;;;;3891:241:55:i;4138:112::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4138:112:55;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4138:112:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4138:112:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4138:112:55;;-1:-1:-1;4138:112:55;;-1:-1:-1;;;;;4138:112:55:i;3665:104::-;;;;;;;;;;;;;;;;-1:-1:-1;3665:104:55;;;;:::i;1275:771::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1275:771:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1275:771:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1275:771:55;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1275:771:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1275:771:55;;;;;;;;;;-1:-1:-1;1275:771:55;;-1:-1:-1;1275:771:55;-1:-1:-1;1275:771:55;:::i;3497:162::-;;;;;;;;;;;;;;;;-1:-1:-1;3497:162:55;-1:-1:-1;;;;;3497:162:55;;:::i;3775:110::-;;;;;;;;;;;;;;;;-1:-1:-1;3775:110:55;;;;:::i;2836:242::-;;;;;;;;;;;;;;;;-1:-1:-1;2836:242:55;-1:-1:-1;;;;;2836:242:55;;:::i;3240:251::-;;;;;;;;;;;;;;;;-1:-1:-1;3240:251:55;-1:-1:-1;;;;;3240:251:55;;:::i;3084:150::-;;;;;;;;;;;;;;;;-1:-1:-1;3084:150:55;-1:-1:-1;;;;;3084:150:55;;:::i;2052:778::-;2276:20;;;;;;;2272:59;;;2312:8;;;2272:59;2341:13;2365:12;:10;:12::i;:::-;2341:37;;2389:19;2411:5;-1:-1:-1;;;;;2411:15:55;;2427:4;2411:21;;;;;;;;;;;;;-1:-1:-1;;;;;2411:21:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2411:21:55;2558:19;;;-1:-1:-1;;;2558:19:55;;-1:-1:-1;;;;;2558:19:55;;;;;;;;;2411:21;;-1:-1:-1;2538:17:55;;2558:15;;;;;;:19;;;;;2411:21;;2558:19;;;;;;;;:15;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2538:39;;2593:230;2627:8;2649:4;2667:2;2683:6;2703:8;;2725:12;;2759:5;2779:11;2804:9;2593:230;;;;-1:-1:-1;;;;;2593:230:55;;;;;;-1:-1:-1;;;;;2593:230:55;;;;;;-1:-1:-1;;;;;2593:230:55;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2593:230:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2593:230:55;;;;;;;;;;;;;;;-1:-1:-1;2593:230:55;;;;;;;;;;;;;;;;;-1:-1:-1;;2593:230:55;;;;;;;;-1:-1:-1;2593:230:55;;-1:-1:-1;;;;;;;;;;;;;;2593:230:55;2052:778;;;;;;;;;;;:::o;697:228:23:-;808:7;834:35;;;;;;;;;;;-1:-1:-1;;;;;834:44:23;;;;;;;;;;;;:84;;913:4;834:84;;;487:40;;;;;;-1:-1:-1;;;487:40:23;;;;;;;;;;;;;;;;;;;477:51;;;;;;834:84;827:91;697:228;-1:-1:-1;;;697:228:23:o;3891:241:55:-;4055:5;-1:-1:-1;;;;;4055:10:55;;4066:2;4070:6;4078:4;4055:28;;;;;;;;;;;;;-1:-1:-1;;;;;4055:28:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3891:241;;;;:::o;4138:112::-;4219:24;;;-1:-1:-1;;;4219:24:55;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4219:10:55;;;;;4230:6;;4238:4;;4219:24;;;;;;;;;;;;;-1:-1:-1;4219:24:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4138:112;;;:::o;3665:104::-;3730:17;:32;;-1:-1:-1;;3730:32:55;;;;;;;;;;3665:104::o;1275:771::-;1497:17;;;;1493:56;;;1530:8;;;1493:56;1559:13;1583:12;:10;:12::i;:::-;1559:37;;1607:19;1629:5;-1:-1:-1;;;;;1629:15:55;;1645:4;1629:21;;;;;;;;;;;;;-1:-1:-1;;;;;1629:21:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1629:21:55;1776:19;;;-1:-1:-1;;;1776:19:55;;-1:-1:-1;;;;;1776:19:55;;;;;;;;;1629:21;;-1:-1:-1;1756:17:55;;1776:15;;;;;;:19;;;;;1629:21;;1776:19;;;;;;;;:15;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1756:39;;1811:228;1843:8;1865:4;1883:2;1899:6;1919:8;;1941:12;;1975:5;1995:11;2020:9;1811:228;;;;-1:-1:-1;;;;;1811:228:55;;;;;;-1:-1:-1;;;;;1811:228:55;;;;;;-1:-1:-1;;;;;1811:228:55;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1811:228:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1811:228:55;;;;;;;;;;;;;;;-1:-1:-1;1811:228:55;;;;;;;;;;;;;;;;;-1:-1:-1;;1811:228:55;;;;;;;;-1:-1:-1;1811:228:55;;-1:-1:-1;;;;;;;;;;;;;;1811:228:55;1275:771;;;;;;;;;;;:::o;3497:162::-;3560:8;;:92;;;-1:-1:-1;;;3560:92:55;;3601:4;3560:92;;;;1234:34;3560:92;;;;-1:-1:-1;;;;;3560:92:55;;;;;;;;;:8;;;;;;;;:32;;:92;;;;;-1:-1:-1;;3560:92:55;;;;;;;;-1:-1:-1;3560:8:55;:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3497:162;:::o;3775:110::-;3843:20;:35;;;;;;;-1:-1:-1;;3843:35:55;;;;;;;;;3775:110::o;2836:242::-;2889:68;1137:31;2949:7;2889:28;:68::i;:::-;2991:4;-1:-1:-1;;;;;3010:15:55;;;;3006:66;;;3041:20;3056:4;3041:14;:20::i;:::-;2836:242;;:::o;3240:251::-;3296:71;1234:34;3359:7;3296:28;:71::i;:::-;3401:4;-1:-1:-1;;;;;3420:15:55;;;;3416:69;;;3451:23;3469:4;3451:17;:23::i;3084:150::-;3141:8;;:86;;;-1:-1:-1;;;3141:86:55;;3182:4;3141:86;;;;1137:31;3141:86;;;;-1:-1:-1;;;;;3141:86:55;;;;;;;;;:8;;;;;;;;:32;;:86;;;;;-1:-1:-1;;3141:86:55;;;;;;;;-1:-1:-1;3141:8:55;:86;;;;;;;;;;735:104:10;822:10;735:104;:::o;1160:163:23:-;1265:20;:35;;;;;;;;;;;-1:-1:-1;;;;;1265:44:23;;;;;;;;;;:51;;-1:-1:-1;;1265:51:23;1312:4;1265:51;;;1160:163::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "canImplementInterfaceForAddress(bytes32,address)": {
        "notice": "See {IERC1820Implementer-canImplementInterfaceForAddress}."
      },
      "tokensReceived(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
      },
      "tokensToSend(address,address,address,uint256,bytes,bytes)": {
        "details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
      }
    },
    "version": 1
  },
  "offset": [
    282,
    4252
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75AB9782 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x75AB9782 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xA8BADAA5 EQ PUSH2 0x455 JUMPI DUP1 PUSH4 0xC97E18FC EQ PUSH2 0x47B JUMPI DUP1 PUSH4 0xD2DE6474 EQ PUSH2 0x49A JUMPI DUP1 PUSH4 0xE0EB2180 EQ PUSH2 0x4C0 JUMPI DUP1 PUSH4 0xE1ECBD30 EQ PUSH2 0x4E6 JUMPI PUSH2 0xA8 JUMP JUMPDEST DUP1 PUSH3 0x23DE29 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0x249CB3FA EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0x3836EF89 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x44D17187 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4E4AE5A5 EQ PUSH2 0x350 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x138 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x50C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x223 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x256 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x79F SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x2DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x87E SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x366 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0x94C JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD DUP3 AND SWAP3 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP1 SWAP3 AND SWAP2 PUSH1 0x60 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x3C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x3FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x20 SHL DUP2 GT ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH1 0x1 PUSH1 0x20 SHL DUP4 GT OR ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x95F JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xB78 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x491 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD ISZERO ISZERO PUSH2 0xC14 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC2E JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC77 JUMP JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCBC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x521 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x52B PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x590 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH32 0x47E915878C47F3EC4D7FF646A2BECB229F64FD2ABE4D2B5E2BB4275B0CF50D4E DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP11 DUP11 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP9 DUP9 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP16 POP SWAP1 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x759 JUMPI PUSH1 0x0 PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH20 0x455243313832305F4143434550545F4D41474943 PUSH1 0x60 SHL DUP2 MSTORE POP PUSH1 0x14 ADD SWAP1 POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x9BD9BBC6 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x874 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFE9D9303 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 DUP2 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 DUP4 MSTORE DUP4 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP4 PUSH4 0xFE9D9303 SWAP4 DUP8 SWAP4 DUP8 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x8E2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x8CA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x90F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x92F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x96F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x979 PUSH2 0xD3D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 MLOAD SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH32 0xAA3E88ACA472E90221DAF7D3D601ABAFB62B120319089D7A2C2F63588DA85529 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 DUP12 PUSH1 0x40 MLOAD DUP1 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP11 DUP11 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 SWAP2 ADD DUP5 DUP2 SUB DUP4 MSTORE DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 POP DUP9 DUP9 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP16 POP SWAP1 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP LOG1 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 MLOAD PUSH3 0x10000 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH4 0x29965A1D SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC0D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xC58 PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 DUP3 PUSH2 0xD41 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 EQ ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC73 DUP2 PUSH2 0xCBC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xCA1 PUSH32 0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B DUP3 PUSH2 0xD41 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP2 EQ ISZERO PUSH2 0xC73 JUMPI PUSH2 0xC73 DUP2 PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x29965A1D PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE SWAP2 MLOAD PUSH3 0x10000 SWAP1 SWAP4 DIV SWAP1 SWAP2 AND SWAP2 PUSH4 0x29965A1D SWAP2 PUSH1 0x64 DUP1 DUP3 ADD SWAP3 PUSH1 0x0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0x2E LOG1 GAS 0x2F 0xDF 0x26 SDIV PUSH13 0x304485D912C00C196B55A6B41D STATICCALL PUSH24 0x3714C9A6B9A2DB9264736F6C634300060C00330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        282,
        4252
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "5": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "CALLVALUE",
      "path": "55"
    },
    "6": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "7": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "8": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "12": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "REVERT",
      "path": "55"
    },
    "16": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "17": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "POP",
      "path": "55"
    },
    "18": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "21": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "LT",
      "path": "55"
    },
    "22": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xA8"
    },
    "25": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "26": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "29": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "SHR",
      "path": "55"
    },
    "32": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "33": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x75AB9782"
    },
    "38": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "GT",
      "path": "55"
    },
    "39": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x71"
    },
    "42": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "43": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "44": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x75AB9782"
    },
    "49": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "50": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x36F"
    },
    "53": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "54": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "55": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xA8BADAA5"
    },
    "60": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "61": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x455"
    },
    "64": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "65": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "66": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xC97E18FC"
    },
    "71": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "72": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x47B"
    },
    "75": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "76": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "77": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xD2DE6474"
    },
    "82": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "83": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x49A"
    },
    "86": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "87": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "88": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xE0EB2180"
    },
    "93": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "94": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x4C0"
    },
    "97": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "98": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "99": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xE1ECBD30"
    },
    "104": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "105": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x4E6"
    },
    "108": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "109": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xA8"
    },
    "112": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMP",
      "path": "55"
    },
    "113": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "114": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "115": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH3",
      "path": "55",
      "value": "0x23DE29"
    },
    "119": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "120": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xAD"
    },
    "123": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "124": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "125": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x249CB3FA"
    },
    "130": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "131": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x195"
    },
    "134": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "135": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "136": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x3836EF89"
    },
    "141": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "142": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x1D3"
    },
    "145": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "146": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "147": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x44D17187"
    },
    "152": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "153": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x297"
    },
    "156": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "157": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "158": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x4E4AE5A5"
    },
    "163": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "EQ",
      "path": "55"
    },
    "164": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x350"
    },
    "167": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "168": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "169": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "DUP1",
      "path": "55"
    },
    "172": {
      "first_revert": true,
      "fn": null,
      "offset": [
        282,
        4252
      ],
      "op": "REVERT",
      "path": "55"
    },
    "173": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "174": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "177": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "179": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "180": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "181": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SUB",
      "path": "55"
    },
    "182": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xC0"
    },
    "184": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP2",
      "path": "55"
    },
    "185": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "LT",
      "path": "55"
    },
    "186": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "187": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xC3"
    },
    "190": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "191": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "193": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "194": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "REVERT",
      "path": "55"
    },
    "195": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "200": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "202": {
      "op": "SHL"
    },
    "203": {
      "op": "SUB"
    },
    "204": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "205": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "206": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP2",
      "path": "55"
    },
    "207": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "AND",
      "path": "55"
    },
    "208": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "209": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "211": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP2",
      "path": "55"
    },
    "212": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "213": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "214": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "215": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "AND",
      "path": "55"
    },
    "216": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "217": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "219": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "220": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "221": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "222": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "223": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "224": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "AND",
      "path": "55"
    },
    "225": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "226": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x60"
    },
    "228": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "229": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "230": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "231": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "232": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "233": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP2",
      "path": "55"
    },
    "234": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "235": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "236": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xA0"
    },
    "238": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP2",
      "path": "55"
    },
    "239": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "240": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x80"
    },
    "242": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "243": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "244": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "249": {
      "op": "SHL"
    },
    "250": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP2",
      "path": "55"
    },
    "251": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "GT",
      "path": "55"
    },
    "252": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "253": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x105"
    },
    "256": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "257": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "259": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "260": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "REVERT",
      "path": "55"
    },
    "261": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "262": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "263": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "264": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP4",
      "path": "55"
    },
    "265": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "267": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "268": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "269": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "GT",
      "path": "55"
    },
    "270": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "271": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x117"
    },
    "274": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "275": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "277": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "278": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "REVERT",
      "path": "55"
    },
    "279": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "280": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "281": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "282": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "283": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "285": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "286": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "287": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP5",
      "path": "55"
    },
    "288": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "290": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP4",
      "path": "55"
    },
    "291": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "MUL",
      "path": "55"
    },
    "292": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP5",
      "path": "55"
    },
    "293": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "294": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "GT",
      "path": "55"
    },
    "295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "299": {
      "op": "SHL"
    },
    "300": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP4",
      "path": "55"
    },
    "301": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "GT",
      "path": "55"
    },
    "302": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "OR",
      "path": "55"
    },
    "303": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "304": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x138"
    },
    "307": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "308": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "310": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "311": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "REVERT",
      "path": "55"
    },
    "312": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "313": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "314": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "315": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "316": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "317": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "318": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "319": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "321": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP2",
      "path": "55"
    },
    "322": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "323": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "324": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP2",
      "path": "55"
    },
    "331": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "GT",
      "path": "55"
    },
    "332": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "333": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x155"
    },
    "336": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "337": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "339": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "340": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "REVERT",
      "path": "55"
    },
    "341": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "342": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "343": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "344": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP4",
      "path": "55"
    },
    "345": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "347": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP3",
      "path": "55"
    },
    "348": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "349": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "GT",
      "path": "55"
    },
    "350": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "351": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x167"
    },
    "354": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "355": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "357": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "358": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "REVERT",
      "path": "55"
    },
    "359": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "360": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "361": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "362": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "363": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "365": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "366": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "367": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP5",
      "path": "55"
    },
    "368": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "370": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP4",
      "path": "55"
    },
    "371": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "MUL",
      "path": "55"
    },
    "372": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP5",
      "path": "55"
    },
    "373": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ADD",
      "path": "55"
    },
    "374": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "GT",
      "path": "55"
    },
    "375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "377": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "379": {
      "op": "SHL"
    },
    "380": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP4",
      "path": "55"
    },
    "381": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "GT",
      "path": "55"
    },
    "382": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "OR",
      "path": "55"
    },
    "383": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "384": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x188"
    },
    "387": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "388": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "390": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "DUP1",
      "path": "55"
    },
    "391": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "REVERT",
      "path": "55"
    },
    "392": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "393": {
      "op": "POP"
    },
    "394": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "395": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x50C"
    },
    "402": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMP",
      "path": "55"
    },
    "403": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "404": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "STOP",
      "path": "55"
    },
    "405": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "406": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1C1"
    },
    "409": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "411": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "DUP1",
      "path": "23"
    },
    "412": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "CALLDATASIZE",
      "path": "23"
    },
    "413": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "SUB",
      "path": "23"
    },
    "414": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "DUP2",
      "path": "23"
    },
    "417": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "LT",
      "path": "23"
    },
    "418": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "419": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1AB"
    },
    "422": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "423": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "425": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "DUP1",
      "path": "23"
    },
    "426": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "REVERT",
      "path": "23"
    },
    "427": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "428": {
      "op": "POP"
    },
    "429": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "DUP1",
      "path": "23"
    },
    "430": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "431": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "432": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "434": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "ADD",
      "path": "23"
    },
    "435": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "CALLDATALOAD",
      "path": "23"
    },
    "436": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "438": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "440": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "442": {
      "op": "SHL"
    },
    "443": {
      "op": "SUB"
    },
    "444": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "AND",
      "path": "23"
    },
    "445": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x72A"
    },
    "448": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "i",
      "offset": [
        697,
        925
      ],
      "op": "JUMP",
      "path": "23"
    },
    "449": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "450": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "452": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "DUP1",
      "path": "23"
    },
    "453": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "454": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "455": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "DUP3",
      "path": "23"
    },
    "456": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "457": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "458": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "459": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "DUP2",
      "path": "23"
    },
    "460": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "461": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "SUB",
      "path": "23"
    },
    "462": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "464": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "ADD",
      "path": "23"
    },
    "465": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "466": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "RETURN",
      "path": "23"
    },
    "467": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "468": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "471": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "473": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "474": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "475": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SUB",
      "path": "55"
    },
    "476": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x80"
    },
    "478": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "479": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "LT",
      "path": "55"
    },
    "480": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "481": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x1E9"
    },
    "484": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "485": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "487": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "488": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "REVERT",
      "path": "55"
    },
    "489": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "op": "SUB"
    },
    "498": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP3",
      "path": "55"
    },
    "499": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "500": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "501": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "AND",
      "path": "55"
    },
    "502": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "503": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "505": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "506": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "507": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "508": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "509": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "510": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "AND",
      "path": "55"
    },
    "511": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "512": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "514": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP3",
      "path": "55"
    },
    "515": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "516": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "517": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "518": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "519": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "520": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "521": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "522": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x80"
    },
    "524": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "525": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "526": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x60"
    },
    "528": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP3",
      "path": "55"
    },
    "529": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "530": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "537": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "GT",
      "path": "55"
    },
    "538": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "539": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x223"
    },
    "542": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "543": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "545": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "546": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "REVERT",
      "path": "55"
    },
    "547": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "548": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP3",
      "path": "55"
    },
    "549": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "550": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP4",
      "path": "55"
    },
    "551": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "553": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP3",
      "path": "55"
    },
    "554": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "555": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "GT",
      "path": "55"
    },
    "556": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "557": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x235"
    },
    "560": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "561": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "563": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "564": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "REVERT",
      "path": "55"
    },
    "565": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "566": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "567": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "568": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "569": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "571": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "572": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "573": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP5",
      "path": "55"
    },
    "574": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "576": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP4",
      "path": "55"
    },
    "577": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "MUL",
      "path": "55"
    },
    "578": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP5",
      "path": "55"
    },
    "579": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "580": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "GT",
      "path": "55"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "585": {
      "op": "SHL"
    },
    "586": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP4",
      "path": "55"
    },
    "587": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "GT",
      "path": "55"
    },
    "588": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "OR",
      "path": "55"
    },
    "589": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "590": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x256"
    },
    "593": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "594": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "596": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "597": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "REVERT",
      "path": "55"
    },
    "598": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "599": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "600": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "601": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "602": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "603": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1F"
    },
    "605": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "606": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "608": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "609": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "610": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DIV",
      "path": "55"
    },
    "611": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "MUL",
      "path": "55"
    },
    "612": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "614": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "615": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "617": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "618": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "619": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "620": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "621": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "623": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "624": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "625": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "626": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "627": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "628": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "629": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "630": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP2",
      "path": "55"
    },
    "631": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "632": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "634": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "635": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP4",
      "path": "55"
    },
    "636": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP4",
      "path": "55"
    },
    "637": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP1",
      "path": "55"
    },
    "638": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP3",
      "path": "55"
    },
    "639": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "DUP5",
      "path": "55"
    },
    "640": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "CALLDATACOPY",
      "path": "55"
    },
    "641": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "643": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "644": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "ADD",
      "path": "55"
    },
    "645": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "646": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "647": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "648": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "649": {
      "op": "POP"
    },
    "650": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "651": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP6",
      "path": "55"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x79F"
    },
    "656": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "SWAP5",
      "path": "55"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "op": "POP"
    },
    "660": {
      "op": "POP"
    },
    "661": {
      "op": "POP"
    },
    "662": {
      "fn": "ERC777SenderRecipientMock.send",
      "jump": "i",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMP",
      "path": "55"
    },
    "663": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "664": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "667": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "669": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "670": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "671": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SUB",
      "path": "55"
    },
    "672": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x60"
    },
    "674": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP2",
      "path": "55"
    },
    "675": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "LT",
      "path": "55"
    },
    "676": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "677": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x2AD"
    },
    "680": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "681": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "683": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "684": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "REVERT",
      "path": "55"
    },
    "685": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "686": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "692": {
      "op": "SHL"
    },
    "693": {
      "op": "SUB"
    },
    "694": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP3",
      "path": "55"
    },
    "695": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "696": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "AND",
      "path": "55"
    },
    "697": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "698": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "700": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP2",
      "path": "55"
    },
    "701": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "702": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "703": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "704": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP2",
      "path": "55"
    },
    "705": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "706": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "707": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x60"
    },
    "709": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP2",
      "path": "55"
    },
    "710": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "711": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "713": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP3",
      "path": "55"
    },
    "714": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "715": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "720": {
      "op": "SHL"
    },
    "721": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP2",
      "path": "55"
    },
    "722": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "GT",
      "path": "55"
    },
    "723": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "724": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x2DC"
    },
    "727": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "728": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "730": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "731": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "REVERT",
      "path": "55"
    },
    "732": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "733": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP3",
      "path": "55"
    },
    "734": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "735": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP4",
      "path": "55"
    },
    "736": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "738": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP3",
      "path": "55"
    },
    "739": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "740": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "GT",
      "path": "55"
    },
    "741": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "742": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x2EE"
    },
    "745": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "746": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "748": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "749": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "REVERT",
      "path": "55"
    },
    "750": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "751": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "752": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "753": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "754": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "756": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "757": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "758": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP5",
      "path": "55"
    },
    "759": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "761": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP4",
      "path": "55"
    },
    "762": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "MUL",
      "path": "55"
    },
    "763": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP5",
      "path": "55"
    },
    "764": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "765": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "GT",
      "path": "55"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP4",
      "path": "55"
    },
    "772": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "GT",
      "path": "55"
    },
    "773": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "OR",
      "path": "55"
    },
    "774": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "775": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x30F"
    },
    "778": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "779": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "781": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "782": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "REVERT",
      "path": "55"
    },
    "783": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "784": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "785": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "786": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "787": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "788": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1F"
    },
    "790": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "791": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "793": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "794": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "795": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DIV",
      "path": "55"
    },
    "796": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "MUL",
      "path": "55"
    },
    "797": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "799": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "800": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "802": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "803": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "804": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP2",
      "path": "55"
    },
    "805": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "806": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "808": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "809": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "810": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "811": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "812": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "813": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "814": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP2",
      "path": "55"
    },
    "815": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP2",
      "path": "55"
    },
    "816": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "817": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "819": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "820": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP4",
      "path": "55"
    },
    "821": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP4",
      "path": "55"
    },
    "822": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP1",
      "path": "55"
    },
    "823": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP3",
      "path": "55"
    },
    "824": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "DUP5",
      "path": "55"
    },
    "825": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "CALLDATACOPY",
      "path": "55"
    },
    "826": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "828": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "829": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "ADD",
      "path": "55"
    },
    "830": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "831": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "832": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "833": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "834": {
      "op": "POP"
    },
    "835": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "836": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP6",
      "path": "55"
    },
    "837": {
      "op": "POP"
    },
    "838": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x87E"
    },
    "841": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "SWAP5",
      "path": "55"
    },
    "842": {
      "op": "POP"
    },
    "843": {
      "op": "POP"
    },
    "844": {
      "op": "POP"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "op": "POP"
    },
    "847": {
      "fn": "ERC777SenderRecipientMock.burn",
      "jump": "i",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMP",
      "path": "55"
    },
    "848": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "849": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "852": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "854": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "DUP1",
      "path": "55"
    },
    "855": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "856": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "SUB",
      "path": "55"
    },
    "857": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "859": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "DUP2",
      "path": "55"
    },
    "860": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "LT",
      "path": "55"
    },
    "861": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "862": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x366"
    },
    "865": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "866": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "868": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "DUP1",
      "path": "55"
    },
    "869": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "REVERT",
      "path": "55"
    },
    "870": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "871": {
      "op": "POP"
    },
    "872": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "873": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "874": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "875": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x94C"
    },
    "878": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "jump": "i",
      "offset": [
        3665,
        3769
      ],
      "op": "JUMP",
      "path": "55"
    },
    "879": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "880": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "883": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "885": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "886": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "887": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SUB",
      "path": "55"
    },
    "888": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xC0"
    },
    "890": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP2",
      "path": "55"
    },
    "891": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "LT",
      "path": "55"
    },
    "892": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "893": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x385"
    },
    "896": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "897": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "899": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "900": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "REVERT",
      "path": "55"
    },
    "901": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "906": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "908": {
      "op": "SHL"
    },
    "909": {
      "op": "SUB"
    },
    "910": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "911": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "912": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP2",
      "path": "55"
    },
    "913": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "AND",
      "path": "55"
    },
    "914": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "915": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "917": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP2",
      "path": "55"
    },
    "918": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "919": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "920": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "921": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "AND",
      "path": "55"
    },
    "922": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "923": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "925": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "926": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "927": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "928": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "929": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "930": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "AND",
      "path": "55"
    },
    "931": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "932": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x60"
    },
    "934": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "935": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "936": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "937": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "938": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "939": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP2",
      "path": "55"
    },
    "940": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "941": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "942": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xA0"
    },
    "944": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP2",
      "path": "55"
    },
    "945": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "946": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x80"
    },
    "948": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "949": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "950": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP2",
      "path": "55"
    },
    "957": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "GT",
      "path": "55"
    },
    "958": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "959": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x3C7"
    },
    "962": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "963": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "965": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "966": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "REVERT",
      "path": "55"
    },
    "967": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "968": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "969": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "970": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP4",
      "path": "55"
    },
    "971": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "973": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "974": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "975": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "GT",
      "path": "55"
    },
    "976": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "977": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x3D9"
    },
    "980": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "981": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "983": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "984": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "REVERT",
      "path": "55"
    },
    "985": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "986": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "987": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "988": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "989": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "991": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "992": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "993": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP5",
      "path": "55"
    },
    "994": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "996": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP4",
      "path": "55"
    },
    "997": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "MUL",
      "path": "55"
    },
    "998": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP5",
      "path": "55"
    },
    "999": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "1000": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "GT",
      "path": "55"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1007": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "GT",
      "path": "55"
    },
    "1008": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "OR",
      "path": "55"
    },
    "1009": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1010": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x3FA"
    },
    "1013": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1014": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1016": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1017": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1018": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1019": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1020": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "1021": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1022": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1023": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1024": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1025": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1027": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1028": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "1029": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1030": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "1031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1035": {
      "op": "SHL"
    },
    "1036": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1037": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "GT",
      "path": "55"
    },
    "1038": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1039": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x417"
    },
    "1042": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1043": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1045": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1046": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1047": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1048": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1049": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "1050": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1051": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1053": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1054": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "1055": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "GT",
      "path": "55"
    },
    "1056": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1057": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x429"
    },
    "1060": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1061": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1063": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1064": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1065": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1066": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1067": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "1068": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1069": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1071": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "1072": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1073": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1074": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "1076": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1077": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "MUL",
      "path": "55"
    },
    "1078": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1079": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ADD",
      "path": "55"
    },
    "1080": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "GT",
      "path": "55"
    },
    "1081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1085": {
      "op": "SHL"
    },
    "1086": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1087": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "GT",
      "path": "55"
    },
    "1088": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "OR",
      "path": "55"
    },
    "1089": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1090": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x44A"
    },
    "1093": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1094": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1096": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1097": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1098": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1099": {
      "op": "POP"
    },
    "1100": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1101": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1102": {
      "op": "POP"
    },
    "1103": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1104": {
      "op": "POP"
    },
    "1105": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x95F"
    },
    "1108": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMP",
      "path": "55"
    },
    "1109": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1110": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "1113": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "1115": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1116": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "1117": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "SUB",
      "path": "55"
    },
    "1118": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1120": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1121": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "LT",
      "path": "55"
    },
    "1122": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1123": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x46B"
    },
    "1126": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1127": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1129": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1130": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1131": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1132": {
      "op": "POP"
    },
    "1133": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "1134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1140": {
      "op": "SHL"
    },
    "1141": {
      "op": "SUB"
    },
    "1142": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "AND",
      "path": "55"
    },
    "1143": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xB78"
    },
    "1146": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "jump": "i",
      "offset": [
        3497,
        3659
      ],
      "op": "JUMP",
      "path": "55"
    },
    "1147": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1148": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "1151": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "1153": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1154": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "1155": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "SUB",
      "path": "55"
    },
    "1156": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1158": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1159": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "LT",
      "path": "55"
    },
    "1160": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1161": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x491"
    },
    "1164": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1165": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1167": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1168": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1169": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1170": {
      "op": "POP"
    },
    "1171": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "1172": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1173": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1174": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xC14"
    },
    "1177": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "jump": "i",
      "offset": [
        3775,
        3885
      ],
      "op": "JUMP",
      "path": "55"
    },
    "1178": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1179": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "1182": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "1184": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1185": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "1186": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "SUB",
      "path": "55"
    },
    "1187": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1189": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1190": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "LT",
      "path": "55"
    },
    "1191": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1192": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x4B0"
    },
    "1195": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1196": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1198": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1199": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1200": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1201": {
      "op": "POP"
    },
    "1202": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "1203": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1205": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1207": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1209": {
      "op": "SHL"
    },
    "1210": {
      "op": "SUB"
    },
    "1211": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "AND",
      "path": "55"
    },
    "1212": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xC2E"
    },
    "1215": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        2836,
        3078
      ],
      "op": "JUMP",
      "path": "55"
    },
    "1216": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1217": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "1220": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "1222": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1223": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "1224": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "SUB",
      "path": "55"
    },
    "1225": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1227": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1228": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "LT",
      "path": "55"
    },
    "1229": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1230": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x4D6"
    },
    "1233": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1234": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1236": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1237": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1238": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1239": {
      "op": "POP"
    },
    "1240": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "1241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1243": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1245": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1247": {
      "op": "SHL"
    },
    "1248": {
      "op": "SUB"
    },
    "1249": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "AND",
      "path": "55"
    },
    "1250": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xC77"
    },
    "1253": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3240,
        3491
      ],
      "op": "JUMP",
      "path": "55"
    },
    "1254": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1255": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x193"
    },
    "1258": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "1260": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1261": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "CALLDATASIZE",
      "path": "55"
    },
    "1262": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "SUB",
      "path": "55"
    },
    "1263": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1265": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1266": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "LT",
      "path": "55"
    },
    "1267": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1268": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x4FC"
    },
    "1271": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1272": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1274": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1275": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1276": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1277": {
      "op": "POP"
    },
    "1278": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "CALLDATALOAD",
      "path": "55"
    },
    "1279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1285": {
      "op": "SHL"
    },
    "1286": {
      "op": "SUB"
    },
    "1287": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "AND",
      "path": "55"
    },
    "1288": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xCBC"
    },
    "1291": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "jump": "i",
      "offset": [
        3084,
        3234
      ],
      "op": "JUMP",
      "path": "55"
    },
    "1292": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1293": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2276,
        2296
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "1295": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2276,
        2296
      ],
      "op": "SLOAD",
      "path": "55"
    },
    "1296": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2276,
        2296
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x100"
    },
    "1299": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2276,
        2296
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1300": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2276,
        2296
      ],
      "op": "DIV",
      "path": "55"
    },
    "1301": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2276,
        2296
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xFF"
    },
    "1303": {
      "branch": 17,
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2276,
        2296
      ],
      "op": "AND",
      "path": "55"
    },
    "1304": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2272,
        2331
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1305": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2272,
        2331
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x521"
    },
    "1308": {
      "branch": 17,
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2272,
        2331
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1309": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2312,
        2320
      ],
      "op": "PUSH1",
      "path": "55",
      "statement": 0,
      "value": "0x0"
    },
    "1311": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2312,
        2320
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1312": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2312,
        2320
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1313": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2272,
        2331
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1314": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2341,
        2354
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1316": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2365,
        2377
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x52B"
    },
    "1319": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2365,
        2375
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xD3D"
    },
    "1322": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "i",
      "offset": [
        2365,
        2377
      ],
      "op": "JUMP",
      "path": "55"
    },
    "1323": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2365,
        2377
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1324": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2341,
        2378
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1325": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2341,
        2378
      ],
      "op": "POP",
      "path": "55"
    },
    "1326": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2389,
        2408
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1328": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2416
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1335": {
      "op": "SHL"
    },
    "1336": {
      "op": "SUB"
    },
    "1337": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2426
      ],
      "op": "AND",
      "path": "55"
    },
    "1338": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2426
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x70A08231"
    },
    "1343": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2427,
        2431
      ],
      "op": "DUP11",
      "path": "55"
    },
    "1344": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "1346": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1347": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1348": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xFFFFFFFF"
    },
    "1353": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "AND",
      "path": "55"
    },
    "1354": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xE0"
    },
    "1356": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "SHL",
      "path": "55"
    },
    "1357": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1358": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1359": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "1361": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "ADD",
      "path": "55"
    },
    "1362": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1363": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1366": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1368": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1370": {
      "op": "SHL"
    },
    "1371": {
      "op": "SUB"
    },
    "1372": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "AND",
      "path": "55"
    },
    "1373": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1374": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1375": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1377": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "ADD",
      "path": "55"
    },
    "1378": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1379": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "POP",
      "path": "55"
    },
    "1380": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "POP",
      "path": "55"
    },
    "1381": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1383": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "1385": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1386": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1387": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1388": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "SUB",
      "path": "55"
    },
    "1389": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1390": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP7",
      "path": "55"
    },
    "1391": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1392": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "EXTCODESIZE",
      "path": "55"
    },
    "1393": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1394": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1395": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1396": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x57C"
    },
    "1399": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1400": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1402": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1403": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1404": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1405": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "POP",
      "path": "55"
    },
    "1406": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "GAS",
      "path": "55"
    },
    "1407": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "STATICCALL",
      "path": "55"
    },
    "1408": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1409": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1410": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1411": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x590"
    },
    "1414": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1415": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "1416": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1418": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1419": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "RETURNDATACOPY",
      "path": "55"
    },
    "1420": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "1421": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1423": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1424": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1425": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "POP",
      "path": "55"
    },
    "1426": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "POP",
      "path": "55"
    },
    "1427": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "POP",
      "path": "55"
    },
    "1428": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "POP",
      "path": "55"
    },
    "1429": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "1431": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1432": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "1433": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1435": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1436": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "LT",
      "path": "55"
    },
    "1437": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1438": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x5A6"
    },
    "1441": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1442": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1444": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1445": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1446": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1447": {
      "op": "POP"
    },
    "1448": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1449": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "1451": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1452": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1453": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1460": {
      "op": "SHL"
    },
    "1461": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1462": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1469": {
      "op": "SHL"
    },
    "1470": {
      "op": "SUB"
    },
    "1471": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1472": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1473": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "AND",
      "path": "55"
    },
    "1474": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "1476": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1477": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ADD",
      "path": "55"
    },
    "1478": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1479": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1480": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1481": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1482": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "1483": {
      "op": "POP"
    },
    "1484": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2538,
        2555
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1486": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2538,
        2555
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1487": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2573
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1488": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2573
      ],
      "op": "DUP6",
      "path": "55"
    },
    "1489": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2573
      ],
      "op": "AND",
      "path": "55"
    },
    "1490": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2573
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1491": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2573
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x70A08231"
    },
    "1496": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2573
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1497": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x24"
    },
    "1499": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1500": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1501": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ADD",
      "path": "55"
    },
    "1502": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1503": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1505": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2411,
        2432
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1506": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1507": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1508": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1509": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1510": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1511": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SUB",
      "path": "55"
    },
    "1512": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ADD",
      "path": "55"
    },
    "1513": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1514": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2573
      ],
      "op": "DUP7",
      "path": "55"
    },
    "1515": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1516": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "EXTCODESIZE",
      "path": "55"
    },
    "1517": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1518": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1519": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1520": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x5F8"
    },
    "1523": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1524": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1526": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1527": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1528": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1529": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1530": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "GAS",
      "path": "55"
    },
    "1531": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "STATICCALL",
      "path": "55"
    },
    "1532": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1533": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1534": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1535": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x60C"
    },
    "1538": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1539": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "1540": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1542": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1543": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "RETURNDATACOPY",
      "path": "55"
    },
    "1544": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "1545": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1547": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1548": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1549": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1550": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1551": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1552": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1553": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "1555": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1556": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "1557": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1559": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1560": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "LT",
      "path": "55"
    },
    "1561": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "1562": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x622"
    },
    "1565": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "1566": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1568": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1569": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "REVERT",
      "path": "55"
    },
    "1570": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1571": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1572": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ADD",
      "path": "55"
    },
    "1573": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1574": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1575": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1576": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1577": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1578": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1580": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "ADD",
      "path": "55"
    },
    "1581": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1582": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1583": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1584": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1585": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1586": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1587": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2558,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1588": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2538,
        2577
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1589": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2538,
        2577
      ],
      "op": "POP",
      "path": "55"
    },
    "1590": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH32",
      "path": "55",
      "statement": 1,
      "value": "0x47E915878C47F3EC4D7FF646A2BECB229F64FD2ABE4D2B5E2BB4275B0CF50D4E"
    },
    "1623": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2627,
        2635
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1624": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2649,
        2653
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1625": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2667,
        2669
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1626": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2683,
        2689
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1627": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2703,
        2711
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1628": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2703,
        2711
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1629": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2737
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1630": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2725,
        2737
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1631": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2759,
        2764
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1632": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2779,
        2790
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1633": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2804,
        2813
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1634": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "1636": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1637": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1638": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP13",
      "path": "55"
    },
    "1639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1645": {
      "op": "SHL"
    },
    "1646": {
      "op": "SUB"
    },
    "1647": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "AND",
      "path": "55"
    },
    "1648": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1649": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1650": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1652": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1653": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP12",
      "path": "55"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1660": {
      "op": "SHL"
    },
    "1661": {
      "op": "SUB"
    },
    "1662": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "AND",
      "path": "55"
    },
    "1663": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1664": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1665": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1667": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1668": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP11",
      "path": "55"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1675": {
      "op": "SHL"
    },
    "1676": {
      "op": "SUB"
    },
    "1677": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "AND",
      "path": "55"
    },
    "1678": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1679": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1680": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1682": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1683": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP10",
      "path": "55"
    },
    "1684": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1685": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1686": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1688": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1689": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1690": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1692": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1693": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1694": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1696": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1697": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP7",
      "path": "55"
    },
    "1698": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1700": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1704": {
      "op": "SHL"
    },
    "1705": {
      "op": "SUB"
    },
    "1706": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "AND",
      "path": "55"
    },
    "1707": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1708": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1709": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1711": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1712": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP6",
      "path": "55"
    },
    "1713": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1714": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1715": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1717": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1718": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1719": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1720": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1721": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1723": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1724": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1725": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1726": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SUB",
      "path": "55"
    },
    "1727": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1728": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1729": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP11",
      "path": "55"
    },
    "1730": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP11",
      "path": "55"
    },
    "1731": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1732": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1733": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1734": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1735": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1737": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1738": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1739": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "POP",
      "path": "55"
    },
    "1740": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1741": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1742": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1743": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "CALLDATACOPY",
      "path": "55"
    },
    "1744": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1746": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1747": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1748": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1749": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1750": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1F"
    },
    "1752": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1755": {
      "op": "NOT"
    },
    "1756": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "AND",
      "path": "55"
    },
    "1757": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1758": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1759": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1760": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1761": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1762": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SUB",
      "path": "55"
    },
    "1763": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1764": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1765": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP9",
      "path": "55"
    },
    "1766": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1767": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1768": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "1770": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1771": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1772": {
      "op": "POP"
    },
    "1773": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP9",
      "path": "55"
    },
    "1774": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP9",
      "path": "55"
    },
    "1775": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1776": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1777": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1778": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "CALLDATACOPY",
      "path": "55"
    },
    "1779": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "1781": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP4",
      "path": "55"
    },
    "1782": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1783": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1784": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1785": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "1787": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1788": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1F"
    },
    "1790": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1791": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "1792": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1793": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1795": {
      "op": "NOT"
    },
    "1796": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "AND",
      "path": "55"
    },
    "1797": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1798": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "1799": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "ADD",
      "path": "55"
    },
    "1800": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "DUP3",
      "path": "55"
    },
    "1801": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1802": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SUB",
      "path": "55"
    },
    "1803": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP16",
      "path": "55"
    },
    "1804": {
      "op": "POP"
    },
    "1805": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "1806": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "SWAP14",
      "path": "55"
    },
    "1807": {
      "op": "POP"
    },
    "1808": {
      "op": "POP"
    },
    "1809": {
      "op": "POP"
    },
    "1810": {
      "op": "POP"
    },
    "1811": {
      "op": "POP"
    },
    "1812": {
      "op": "POP"
    },
    "1813": {
      "op": "POP"
    },
    "1814": {
      "op": "POP"
    },
    "1815": {
      "op": "POP"
    },
    "1816": {
      "op": "POP"
    },
    "1817": {
      "op": "POP"
    },
    "1818": {
      "op": "POP"
    },
    "1819": {
      "op": "POP"
    },
    "1820": {
      "op": "POP"
    },
    "1821": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2593,
        2823
      ],
      "op": "LOG1",
      "path": "55"
    },
    "1822": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1823": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1824": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1825": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1826": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1827": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1828": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1829": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1830": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1831": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1832": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "offset": [
        2052,
        2830
      ],
      "op": "POP",
      "path": "55"
    },
    "1833": {
      "fn": "ERC777SenderRecipientMock.tokensReceived",
      "jump": "o",
      "offset": [
        2052,
        2830
      ],
      "op": "JUMP",
      "path": "55"
    },
    "1834": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1835": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        808,
        815
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "DUP3",
      "path": "23",
      "statement": 2
    },
    "1838": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1839": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1840": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1842": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1843": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1844": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1845": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1847": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1848": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1849": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        869
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1850": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1856": {
      "op": "SHL"
    },
    "1857": {
      "op": "SUB"
    },
    "1858": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1859": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "AND",
      "path": "23"
    },
    "1860": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1861": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1862": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1863": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "1864": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1865": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1866": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1867": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "1868": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1870": {
      "branch": 21,
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        878
      ],
      "op": "AND",
      "path": "23"
    },
    "1871": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        918
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x759"
    },
    "1874": {
      "branch": 21,
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        918
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1875": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        913,
        917
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1877": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        918
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x798"
    },
    "1880": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        918
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1881": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        918
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1882": {
      "offset": [
        487,
        527
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1884": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1885": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1887": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "ADD",
      "path": "23"
    },
    "1888": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1889": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1890": {
      "op": "PUSH20",
      "value": "0x455243313832305F4143434550545F4D41474943"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1913": {
      "op": "SHL"
    },
    "1914": {
      "offset": [
        487,
        527
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1915": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1916": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "POP",
      "path": "23"
    },
    "1917": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x14"
    },
    "1919": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "ADD",
      "path": "23"
    },
    "1920": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1921": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "POP",
      "path": "23"
    },
    "1922": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1924": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1925": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1927": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1928": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1929": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "SUB",
      "path": "23"
    },
    "1930": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "SUB",
      "path": "23"
    },
    "1931": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1932": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1933": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1934": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "1936": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        487,
        527
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "1937": {
      "offset": [
        477,
        528
      ],
      "op": "DUP1",
      "path": "23"
    },
    "1938": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        477,
        528
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1939": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        477,
        528
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1940": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        477,
        528
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "1942": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        477,
        528
      ],
      "op": "ADD",
      "path": "23"
    },
    "1943": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        477,
        528
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "1944": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        834,
        918
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1945": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        827,
        918
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "1946": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "offset": [
        697,
        925
      ],
      "op": "SWAP3",
      "path": "23"
    },
    "1947": {
      "op": "POP"
    },
    "1948": {
      "op": "POP"
    },
    "1949": {
      "op": "POP"
    },
    "1950": {
      "fn": "ERC1820Implementer.canImplementInterfaceForAddress",
      "jump": "o",
      "offset": [
        697,
        925
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1951": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "1952": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4060
      ],
      "op": "DUP4",
      "path": "55",
      "statement": 3
    },
    "1953": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1955": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1959": {
      "op": "SHL"
    },
    "1960": {
      "op": "SUB"
    },
    "1961": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4065
      ],
      "op": "AND",
      "path": "55"
    },
    "1962": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4065
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x9BD9BBC6"
    },
    "1967": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4066,
        4068
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1968": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4070,
        4076
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1969": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4078,
        4082
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1970": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "1972": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "1973": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1974": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xFFFFFFFF"
    },
    "1979": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "AND",
      "path": "55"
    },
    "1980": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xE0"
    },
    "1982": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SHL",
      "path": "55"
    },
    "1983": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "1984": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "1985": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "1987": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "1988": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "1989": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP5",
      "path": "55"
    },
    "1990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1992": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1994": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1996": {
      "op": "SHL"
    },
    "1997": {
      "op": "SUB"
    },
    "1998": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "AND",
      "path": "55"
    },
    "1999": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2000": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2001": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2003": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2004": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2005": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2006": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2007": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2009": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2010": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2011": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2013": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2014": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2015": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2016": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SUB",
      "path": "55"
    },
    "2017": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2018": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2019": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2020": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2021": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2022": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2023": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2024": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2025": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2027": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2028": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2029": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2030": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2031": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2032": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2033": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2035": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2036": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2037": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2038": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2039": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2040": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2042": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2043": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2044": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2045": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "LT",
      "path": "55"
    },
    "2046": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2047": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x812"
    },
    "2050": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2051": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2052": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2053": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2054": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2055": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2056": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2057": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2058": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2059": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2061": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2062": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x7FA"
    },
    "2065": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMP",
      "path": "55"
    },
    "2066": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2067": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2068": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2069": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2070": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2071": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2072": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2073": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2074": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2075": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2076": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2077": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1F"
    },
    "2079": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "AND",
      "path": "55"
    },
    "2080": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2081": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2082": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x83F"
    },
    "2085": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2086": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2087": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2088": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SUB",
      "path": "55"
    },
    "2089": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2090": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2091": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "2093": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2094": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2096": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SUB",
      "path": "55"
    },
    "2097": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x100"
    },
    "2100": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "EXP",
      "path": "55"
    },
    "2101": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SUB",
      "path": "55"
    },
    "2102": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "NOT",
      "path": "55"
    },
    "2103": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "AND",
      "path": "55"
    },
    "2104": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2105": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2106": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2108": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ADD",
      "path": "55"
    },
    "2109": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2110": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2111": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2112": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2113": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SWAP5",
      "path": "55"
    },
    "2114": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2115": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2116": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2117": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2118": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2119": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2121": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2123": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2124": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2125": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2126": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "SUB",
      "path": "55"
    },
    "2127": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2128": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2130": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP8",
      "path": "55"
    },
    "2131": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2132": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "EXTCODESIZE",
      "path": "55"
    },
    "2133": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2134": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2135": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2136": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x860"
    },
    "2139": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2140": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2142": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2143": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2144": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2145": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2146": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "GAS",
      "path": "55"
    },
    "2147": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "CALL",
      "path": "55"
    },
    "2148": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2149": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2150": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2151": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x874"
    },
    "2154": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2155": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2156": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2158": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2159": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "RETURNDATACOPY",
      "path": "55"
    },
    "2160": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2161": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2163": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2164": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2165": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2166": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2167": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2168": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        4055,
        4083
      ],
      "op": "POP",
      "path": "55"
    },
    "2169": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "POP",
      "path": "55"
    },
    "2170": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "POP",
      "path": "55"
    },
    "2171": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "POP",
      "path": "55"
    },
    "2172": {
      "fn": "ERC777SenderRecipientMock.send",
      "offset": [
        3891,
        4132
      ],
      "op": "POP",
      "path": "55"
    },
    "2173": {
      "fn": "ERC777SenderRecipientMock.send",
      "jump": "o",
      "offset": [
        3891,
        4132
      ],
      "op": "JUMP",
      "path": "55"
    },
    "2174": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2175": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "statement": 4,
      "value": "0x40"
    },
    "2177": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2178": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2179": {
      "op": "PUSH4",
      "value": "0xFE9D9303"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2186": {
      "op": "SHL"
    },
    "2187": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2188": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2189": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "2191": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2192": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2193": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP5",
      "path": "55"
    },
    "2194": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2195": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2196": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x24"
    },
    "2198": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2199": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2200": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2201": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2202": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2203": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2204": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2205": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x44"
    },
    "2207": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2208": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2209": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2210": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2211": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2218": {
      "op": "SHL"
    },
    "2219": {
      "op": "SUB"
    },
    "2220": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4229
      ],
      "op": "DUP8",
      "path": "55"
    },
    "2221": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4229
      ],
      "op": "AND",
      "path": "55"
    },
    "2222": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4229
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "2223": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4229
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xFE9D9303"
    },
    "2228": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4229
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "2229": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4230,
        4236
      ],
      "op": "DUP8",
      "path": "55"
    },
    "2230": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4230,
        4236
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "2231": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4238,
        4242
      ],
      "op": "DUP8",
      "path": "55"
    },
    "2232": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4238,
        4242
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "2233": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2234": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2235": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2236": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x64"
    },
    "2238": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2239": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2240": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2242": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP6",
      "path": "55"
    },
    "2243": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2244": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2245": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2246": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2247": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2250": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2251": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2252": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2253": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "LT",
      "path": "55"
    },
    "2254": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2255": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x8E2"
    },
    "2258": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2259": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2260": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2261": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2262": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2263": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2264": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2265": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2266": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2267": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2269": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2270": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x8CA"
    },
    "2273": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMP",
      "path": "55"
    },
    "2274": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2275": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2276": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2277": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2278": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2279": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2280": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2281": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2282": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2283": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2284": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2285": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1F"
    },
    "2287": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "AND",
      "path": "55"
    },
    "2288": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2289": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2290": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x90F"
    },
    "2293": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2294": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2295": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2296": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SUB",
      "path": "55"
    },
    "2297": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2298": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2299": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "2301": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2302": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2304": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SUB",
      "path": "55"
    },
    "2305": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x100"
    },
    "2308": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "EXP",
      "path": "55"
    },
    "2309": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SUB",
      "path": "55"
    },
    "2310": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "NOT",
      "path": "55"
    },
    "2311": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "AND",
      "path": "55"
    },
    "2312": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2313": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2314": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2316": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ADD",
      "path": "55"
    },
    "2317": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2318": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2319": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2320": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2321": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "2322": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2323": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2324": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2325": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2326": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2328": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2330": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2331": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2332": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2333": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "SUB",
      "path": "55"
    },
    "2334": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2335": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2337": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP8",
      "path": "55"
    },
    "2338": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2339": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "EXTCODESIZE",
      "path": "55"
    },
    "2340": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2341": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2342": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2343": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x92F"
    },
    "2346": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2347": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2349": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2350": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2351": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2352": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2353": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "GAS",
      "path": "55"
    },
    "2354": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "CALL",
      "path": "55"
    },
    "2355": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2356": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2357": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2358": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x943"
    },
    "2361": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2362": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2363": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2365": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2366": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "RETURNDATACOPY",
      "path": "55"
    },
    "2367": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2368": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2370": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2371": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2372": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2373": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2374": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2375": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4219,
        4243
      ],
      "op": "POP",
      "path": "55"
    },
    "2376": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "POP",
      "path": "55"
    },
    "2377": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "POP",
      "path": "55"
    },
    "2378": {
      "fn": "ERC777SenderRecipientMock.burn",
      "offset": [
        4138,
        4250
      ],
      "op": "POP",
      "path": "55"
    },
    "2379": {
      "fn": "ERC777SenderRecipientMock.burn",
      "jump": "o",
      "offset": [
        4138,
        4250
      ],
      "op": "JUMP",
      "path": "55"
    },
    "2380": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3665,
        3769
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2381": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3747
      ],
      "op": "PUSH1",
      "path": "55",
      "statement": 5,
      "value": "0x1"
    },
    "2383": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2384": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "SLOAD",
      "path": "55"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2387": {
      "op": "NOT"
    },
    "2388": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "AND",
      "path": "55"
    },
    "2389": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2390": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2391": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2392": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2393": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2394": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2395": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "OR",
      "path": "55"
    },
    "2396": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2397": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "offset": [
        3730,
        3762
      ],
      "op": "SSTORE",
      "path": "55"
    },
    "2398": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertSend",
      "jump": "o",
      "offset": [
        3665,
        3769
      ],
      "op": "JUMP",
      "path": "55"
    },
    "2399": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2400": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1497,
        1514
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1"
    },
    "2402": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1497,
        1514
      ],
      "op": "SLOAD",
      "path": "55"
    },
    "2403": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1497,
        1514
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xFF"
    },
    "2405": {
      "branch": 18,
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1497,
        1514
      ],
      "op": "AND",
      "path": "55"
    },
    "2406": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1493,
        1549
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2407": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1493,
        1549
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x96F"
    },
    "2410": {
      "branch": 18,
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1493,
        1549
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2411": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1530,
        1538
      ],
      "op": "PUSH1",
      "path": "55",
      "statement": 6,
      "value": "0x0"
    },
    "2413": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1530,
        1538
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2414": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1530,
        1538
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2415": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1493,
        1549
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2416": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1559,
        1572
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2418": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1583,
        1595
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x979"
    },
    "2421": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1583,
        1593
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xD3D"
    },
    "2424": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "i",
      "offset": [
        1583,
        1595
      ],
      "op": "JUMP",
      "path": "55"
    },
    "2425": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1583,
        1595
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2426": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1559,
        1596
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2427": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1559,
        1596
      ],
      "op": "POP",
      "path": "55"
    },
    "2428": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1607,
        1626
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2430": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1634
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2437": {
      "op": "SHL"
    },
    "2438": {
      "op": "SUB"
    },
    "2439": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1644
      ],
      "op": "AND",
      "path": "55"
    },
    "2440": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1644
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x70A08231"
    },
    "2445": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1645,
        1649
      ],
      "op": "DUP11",
      "path": "55"
    },
    "2446": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2448": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2449": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2450": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0xFFFFFFFF"
    },
    "2455": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "AND",
      "path": "55"
    },
    "2456": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0xE0"
    },
    "2458": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "SHL",
      "path": "55"
    },
    "2459": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2460": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2461": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "2463": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "ADD",
      "path": "55"
    },
    "2464": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2465": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2472": {
      "op": "SHL"
    },
    "2473": {
      "op": "SUB"
    },
    "2474": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "AND",
      "path": "55"
    },
    "2475": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2476": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2477": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2479": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "ADD",
      "path": "55"
    },
    "2480": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2481": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "POP",
      "path": "55"
    },
    "2482": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "POP",
      "path": "55"
    },
    "2483": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2485": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2487": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2488": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2489": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2490": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "SUB",
      "path": "55"
    },
    "2491": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2492": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP7",
      "path": "55"
    },
    "2493": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2494": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "EXTCODESIZE",
      "path": "55"
    },
    "2495": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2496": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2497": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2498": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x9CA"
    },
    "2501": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2502": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2504": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2505": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2506": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2507": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "POP",
      "path": "55"
    },
    "2508": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "GAS",
      "path": "55"
    },
    "2509": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "STATICCALL",
      "path": "55"
    },
    "2510": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2511": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2512": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2513": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x9DE"
    },
    "2516": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2517": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2518": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2520": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2521": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "RETURNDATACOPY",
      "path": "55"
    },
    "2522": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2523": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2525": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2526": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2527": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "POP",
      "path": "55"
    },
    "2528": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "POP",
      "path": "55"
    },
    "2529": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "POP",
      "path": "55"
    },
    "2530": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "POP",
      "path": "55"
    },
    "2531": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2533": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2534": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2535": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2537": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2538": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "LT",
      "path": "55"
    },
    "2539": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2540": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x9F4"
    },
    "2543": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2544": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2546": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2547": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2548": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2549": {
      "op": "POP"
    },
    "2550": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2551": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2553": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2554": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2555": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2562": {
      "op": "SHL"
    },
    "2563": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2564": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2571": {
      "op": "SHL"
    },
    "2572": {
      "op": "SUB"
    },
    "2573": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2574": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2575": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "AND",
      "path": "55"
    },
    "2576": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "2578": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2579": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ADD",
      "path": "55"
    },
    "2580": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2581": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2582": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2583": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2584": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "2585": {
      "op": "POP"
    },
    "2586": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1756,
        1773
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2588": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1756,
        1773
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2589": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1791
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2590": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1791
      ],
      "op": "DUP6",
      "path": "55"
    },
    "2591": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1791
      ],
      "op": "AND",
      "path": "55"
    },
    "2592": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1791
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2593": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1791
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x70A08231"
    },
    "2598": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1791
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2599": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x24"
    },
    "2601": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2602": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2603": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ADD",
      "path": "55"
    },
    "2604": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2605": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2607": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1629,
        1650
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2608": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2609": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2610": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2611": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2612": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2613": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SUB",
      "path": "55"
    },
    "2614": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ADD",
      "path": "55"
    },
    "2615": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2616": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1791
      ],
      "op": "DUP7",
      "path": "55"
    },
    "2617": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2618": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "EXTCODESIZE",
      "path": "55"
    },
    "2619": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2620": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2621": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2622": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xA46"
    },
    "2625": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2626": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2628": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2629": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2630": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2631": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2632": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "GAS",
      "path": "55"
    },
    "2633": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "STATICCALL",
      "path": "55"
    },
    "2634": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2635": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2636": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2637": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xA5A"
    },
    "2640": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2641": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2642": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2644": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2645": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "RETURNDATACOPY",
      "path": "55"
    },
    "2646": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2647": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2649": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2650": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2651": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2652": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2653": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2654": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2655": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2657": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2658": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "2659": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2661": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2662": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "LT",
      "path": "55"
    },
    "2663": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "2664": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xA70"
    },
    "2667": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "2668": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2670": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2671": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "REVERT",
      "path": "55"
    },
    "2672": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2673": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2674": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ADD",
      "path": "55"
    },
    "2675": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2676": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2677": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2678": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2679": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2680": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2682": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "ADD",
      "path": "55"
    },
    "2683": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2684": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2685": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2686": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2687": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2688": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2689": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1776,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2690": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1756,
        1795
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2691": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1756,
        1795
      ],
      "op": "POP",
      "path": "55"
    },
    "2692": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH32",
      "path": "55",
      "statement": 7,
      "value": "0xAA3E88ACA472E90221DAF7D3D601ABAFB62B120319089D7A2C2F63588DA85529"
    },
    "2725": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1843,
        1851
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2726": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1865,
        1869
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2727": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1883,
        1885
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2728": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1899,
        1905
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2729": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1919,
        1927
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2730": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1919,
        1927
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2731": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1941,
        1953
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2732": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1941,
        1953
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2733": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1975,
        1980
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2734": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1995,
        2006
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2735": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        2020,
        2029
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2736": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2738": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2739": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2740": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP13",
      "path": "55"
    },
    "2741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2747": {
      "op": "SHL"
    },
    "2748": {
      "op": "SUB"
    },
    "2749": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "AND",
      "path": "55"
    },
    "2750": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2751": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2752": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2754": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2755": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP12",
      "path": "55"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2762": {
      "op": "SHL"
    },
    "2763": {
      "op": "SUB"
    },
    "2764": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "AND",
      "path": "55"
    },
    "2765": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2766": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2767": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2769": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2770": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP11",
      "path": "55"
    },
    "2771": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2773": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2777": {
      "op": "SHL"
    },
    "2778": {
      "op": "SUB"
    },
    "2779": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "AND",
      "path": "55"
    },
    "2780": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2781": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2782": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2784": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2785": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP10",
      "path": "55"
    },
    "2786": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2787": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2788": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2790": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2791": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2792": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2794": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2795": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2796": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2798": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2799": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP7",
      "path": "55"
    },
    "2800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2806": {
      "op": "SHL"
    },
    "2807": {
      "op": "SUB"
    },
    "2808": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "AND",
      "path": "55"
    },
    "2809": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2810": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2811": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2813": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2814": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP6",
      "path": "55"
    },
    "2815": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2816": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2817": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2819": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2820": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP5",
      "path": "55"
    },
    "2821": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2822": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2823": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2825": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2826": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2827": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2828": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SUB",
      "path": "55"
    },
    "2829": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2830": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2831": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP11",
      "path": "55"
    },
    "2832": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP11",
      "path": "55"
    },
    "2833": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2834": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2835": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2836": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2837": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2839": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2840": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2841": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "POP",
      "path": "55"
    },
    "2842": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2843": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2844": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP5",
      "path": "55"
    },
    "2845": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "CALLDATACOPY",
      "path": "55"
    },
    "2846": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2848": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2849": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2850": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2851": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2852": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1F"
    },
    "2854": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2857": {
      "op": "NOT"
    },
    "2858": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "AND",
      "path": "55"
    },
    "2859": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2860": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2861": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2862": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP5",
      "path": "55"
    },
    "2863": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2864": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SUB",
      "path": "55"
    },
    "2865": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2866": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2867": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP9",
      "path": "55"
    },
    "2868": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2869": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2870": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x20"
    },
    "2872": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2873": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2874": {
      "op": "POP"
    },
    "2875": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP9",
      "path": "55"
    },
    "2876": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP9",
      "path": "55"
    },
    "2877": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2878": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2879": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP5",
      "path": "55"
    },
    "2880": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "CALLDATACOPY",
      "path": "55"
    },
    "2881": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "2883": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP4",
      "path": "55"
    },
    "2884": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2885": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2886": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2887": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2889": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2890": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x1F"
    },
    "2892": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2893": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "2894": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2897": {
      "op": "NOT"
    },
    "2898": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "AND",
      "path": "55"
    },
    "2899": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2900": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "2901": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "ADD",
      "path": "55"
    },
    "2902": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2903": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2904": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SUB",
      "path": "55"
    },
    "2905": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP16",
      "path": "55"
    },
    "2906": {
      "op": "POP"
    },
    "2907": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "2908": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "SWAP14",
      "path": "55"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "op": "POP"
    },
    "2911": {
      "op": "POP"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "op": "POP"
    },
    "2915": {
      "op": "POP"
    },
    "2916": {
      "op": "POP"
    },
    "2917": {
      "op": "POP"
    },
    "2918": {
      "op": "POP"
    },
    "2919": {
      "op": "POP"
    },
    "2920": {
      "op": "POP"
    },
    "2921": {
      "op": "POP"
    },
    "2922": {
      "op": "POP"
    },
    "2923": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1811,
        2039
      ],
      "op": "LOG1",
      "path": "55"
    },
    "2924": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2925": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2926": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2927": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2928": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2929": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2930": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2931": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2932": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2933": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2934": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "offset": [
        1275,
        2046
      ],
      "op": "POP",
      "path": "55"
    },
    "2935": {
      "fn": "ERC777SenderRecipientMock.tokensToSend",
      "jump": "o",
      "offset": [
        1275,
        2046
      ],
      "op": "JUMP",
      "path": "55"
    },
    "2936": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "2937": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "PUSH1",
      "path": "55",
      "statement": 8,
      "value": "0x1"
    },
    "2939": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "SLOAD",
      "path": "55"
    },
    "2940": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "2942": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP1",
      "path": "55"
    },
    "2943": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "2944": {
      "op": "PUSH4",
      "value": "0x29965A1D"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2951": {
      "op": "SHL"
    },
    "2952": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP2",
      "path": "55"
    },
    "2953": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2954": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3601,
        3605
      ],
      "op": "ADDRESS",
      "path": "55"
    },
    "2955": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "2957": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2958": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ADD",
      "path": "55"
    },
    "2959": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2960": {
      "offset": [
        1234,
        1268
      ],
      "op": "PUSH32",
      "path": "55",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "2993": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x24"
    },
    "2995": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP3",
      "path": "55"
    },
    "2996": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ADD",
      "path": "55"
    },
    "2997": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3004": {
      "op": "SHL"
    },
    "3005": {
      "op": "SUB"
    },
    "3006": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP5",
      "path": "55"
    },
    "3007": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3008": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "AND",
      "path": "55"
    },
    "3009": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x44"
    },
    "3011": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP4",
      "path": "55"
    },
    "3012": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ADD",
      "path": "55"
    },
    "3013": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "3014": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3015": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "3016": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "PUSH3",
      "path": "55",
      "value": "0x10000"
    },
    "3020": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3021": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "3022": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "DIV",
      "path": "55"
    },
    "3023": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3024": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3025": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "AND",
      "path": "55"
    },
    "3026": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3027": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3592
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x29965A1D"
    },
    "3032": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3592
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3033": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x64"
    },
    "3035": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3036": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3037": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ADD",
      "path": "55"
    },
    "3038": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3041": {
      "op": "SWAP3"
    },
    "3042": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3043": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3044": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3045": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3046": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3047": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "SUB",
      "path": "55"
    },
    "3048": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ADD",
      "path": "55"
    },
    "3049": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3050": {
      "op": "DUP4"
    },
    "3051": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3568
      ],
      "op": "DUP8",
      "path": "55"
    },
    "3052": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3053": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "EXTCODESIZE",
      "path": "55"
    },
    "3054": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3055": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3056": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3057": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xBF9"
    },
    "3060": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "3061": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "3063": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3064": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "REVERT",
      "path": "55"
    },
    "3065": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3066": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "POP",
      "path": "55"
    },
    "3067": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "GAS",
      "path": "55"
    },
    "3068": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "CALL",
      "path": "55"
    },
    "3069": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3070": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3071": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3072": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xC0D"
    },
    "3075": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "3076": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "3077": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "3079": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3080": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "RETURNDATACOPY",
      "path": "55"
    },
    "3081": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "RETURNDATASIZE",
      "path": "55"
    },
    "3082": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "3084": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "REVERT",
      "path": "55"
    },
    "3085": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3086": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "POP",
      "path": "55"
    },
    "3087": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "POP",
      "path": "55"
    },
    "3088": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "POP",
      "path": "55"
    },
    "3089": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3560,
        3652
      ],
      "op": "POP",
      "path": "55"
    },
    "3090": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "offset": [
        3497,
        3659
      ],
      "op": "POP",
      "path": "55"
    },
    "3091": {
      "fn": "ERC777SenderRecipientMock.registerRecipient",
      "jump": "o",
      "offset": [
        3497,
        3659
      ],
      "op": "JUMP",
      "path": "55"
    },
    "3092": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3775,
        3885
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3093": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3863
      ],
      "op": "PUSH1",
      "path": "55",
      "statement": 9,
      "value": "0x1"
    },
    "3095": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3096": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SLOAD",
      "path": "55"
    },
    "3097": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3098": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3099": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3100": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0x100"
    },
    "3103": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "MUL",
      "path": "55"
    },
    "3104": {
      "op": "PUSH2",
      "value": "0xFF00"
    },
    "3107": {
      "op": "NOT"
    },
    "3108": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3109": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "3110": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "AND",
      "path": "55"
    },
    "3111": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3112": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3113": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3114": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "OR",
      "path": "55"
    },
    "3115": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3116": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "offset": [
        3843,
        3878
      ],
      "op": "SSTORE",
      "path": "55"
    },
    "3117": {
      "fn": "ERC777SenderRecipientMock.setShouldRevertReceive",
      "jump": "o",
      "offset": [
        3775,
        3885
      ],
      "op": "JUMP",
      "path": "55"
    },
    "3118": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3119": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2889,
        2957
      ],
      "op": "PUSH2",
      "path": "55",
      "statement": 10,
      "value": "0xC58"
    },
    "3122": {
      "offset": [
        1137,
        1168
      ],
      "op": "PUSH32",
      "path": "55",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "3155": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2949,
        2956
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3156": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2889,
        2917
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xD41"
    },
    "3159": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        2889,
        2957
      ],
      "op": "JUMP",
      "path": "55"
    },
    "3160": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2889,
        2957
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3161": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2991,
        2995
      ],
      "op": "ADDRESS",
      "path": "55"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3168": {
      "op": "SHL"
    },
    "3169": {
      "op": "SUB"
    },
    "3170": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3010,
        3025
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3171": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3010,
        3025
      ],
      "op": "AND",
      "path": "55"
    },
    "3172": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3010,
        3025
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3173": {
      "branch": 19,
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3010,
        3025
      ],
      "op": "EQ",
      "path": "55"
    },
    "3174": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3006,
        3072
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3175": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3006,
        3072
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xC73"
    },
    "3178": {
      "branch": 19,
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3006,
        3072
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "3179": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3041,
        3061
      ],
      "op": "PUSH2",
      "path": "55",
      "statement": 11,
      "value": "0xC73"
    },
    "3182": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3056,
        3060
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3183": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3041,
        3055
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xCBC"
    },
    "3186": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "i",
      "offset": [
        3041,
        3061
      ],
      "op": "JUMP",
      "path": "55"
    },
    "3187": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        3041,
        3061
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3188": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "POP",
      "path": "55"
    },
    "3189": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "offset": [
        2836,
        3078
      ],
      "op": "POP",
      "path": "55"
    },
    "3190": {
      "fn": "ERC777SenderRecipientMock.senderFor",
      "jump": "o",
      "offset": [
        2836,
        3078
      ],
      "op": "JUMP",
      "path": "55"
    },
    "3191": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3240,
        3491
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3192": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3296,
        3367
      ],
      "op": "PUSH2",
      "path": "55",
      "statement": 12,
      "value": "0xCA1"
    },
    "3195": {
      "offset": [
        1234,
        1268
      ],
      "op": "PUSH32",
      "path": "55",
      "value": "0xB281FC8C12954D22544DB45DE3159A39272895B169A852B314F9CC762E44C53B"
    },
    "3228": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3359,
        3366
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3229": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3296,
        3324
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xD41"
    },
    "3232": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3296,
        3367
      ],
      "op": "JUMP",
      "path": "55"
    },
    "3233": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3296,
        3367
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3234": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3401,
        3405
      ],
      "op": "ADDRESS",
      "path": "55"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3237": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "op": "SUB"
    },
    "3243": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3420,
        3435
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3244": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3420,
        3435
      ],
      "op": "AND",
      "path": "55"
    },
    "3245": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3420,
        3435
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3246": {
      "branch": 20,
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3420,
        3435
      ],
      "op": "EQ",
      "path": "55"
    },
    "3247": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3416,
        3485
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3248": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3416,
        3485
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xC73"
    },
    "3251": {
      "branch": 20,
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3416,
        3485
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "3252": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3451,
        3474
      ],
      "op": "PUSH2",
      "path": "55",
      "statement": 13,
      "value": "0xC73"
    },
    "3255": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3469,
        3473
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3256": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "offset": [
        3451,
        3468
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xB78"
    },
    "3259": {
      "fn": "ERC777SenderRecipientMock.recipientFor",
      "jump": "i",
      "offset": [
        3451,
        3474
      ],
      "op": "JUMP",
      "path": "55"
    },
    "3260": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3084,
        3234
      ],
      "op": "JUMPDEST",
      "path": "55"
    },
    "3261": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "PUSH1",
      "path": "55",
      "statement": 14,
      "value": "0x1"
    },
    "3263": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "SLOAD",
      "path": "55"
    },
    "3264": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x40"
    },
    "3266": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3267": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "3268": {
      "op": "PUSH4",
      "value": "0x29965A1D"
    },
    "3273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3275": {
      "op": "SHL"
    },
    "3276": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3277": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "3278": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3182,
        3186
      ],
      "op": "ADDRESS",
      "path": "55"
    },
    "3279": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x4"
    },
    "3281": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3282": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "ADD",
      "path": "55"
    },
    "3283": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "3284": {
      "offset": [
        1137,
        1168
      ],
      "op": "PUSH32",
      "path": "55",
      "value": "0x29DDB589B1FB5FC7CF394961C1ADF5F8C6454761ADF795E67FE149F658ABE895"
    },
    "3317": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x24"
    },
    "3319": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3320": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "ADD",
      "path": "55"
    },
    "3321": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3324": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3328": {
      "op": "SHL"
    },
    "3329": {
      "op": "SUB"
    },
    "3330": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP5",
      "path": "55"
    },
    "3331": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3332": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "AND",
      "path": "55"
    },
    "3333": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x44"
    },
    "3335": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP4",
      "path": "55"
    },
    "3336": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "ADD",
      "path": "55"
    },
    "3337": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "MSTORE",
      "path": "55"
    },
    "3338": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3339": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "MLOAD",
      "path": "55"
    },
    "3340": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "PUSH3",
      "path": "55",
      "value": "0x10000"
    },
    "3344": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3345": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "SWAP4",
      "path": "55"
    },
    "3346": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "DIV",
      "path": "55"
    },
    "3347": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3348": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3349": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "AND",
      "path": "55"
    },
    "3350": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3351": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3173
      ],
      "op": "PUSH4",
      "path": "55",
      "value": "0x29965A1D"
    },
    "3356": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3173
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3357": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x64"
    },
    "3359": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3360": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3361": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "ADD",
      "path": "55"
    },
    "3362": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "SWAP3",
      "path": "55"
    },
    "3363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3365": {
      "op": "SWAP3"
    },
    "3366": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3367": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "SWAP2",
      "path": "55"
    },
    "3368": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3369": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP3",
      "path": "55"
    },
    "3370": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "SWAP1",
      "path": "55"
    },
    "3371": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "SUB",
      "path": "55"
    },
    "3372": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "ADD",
      "path": "55"
    },
    "3373": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP2",
      "path": "55"
    },
    "3374": {
      "op": "DUP4"
    },
    "3375": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3149
      ],
      "op": "DUP8",
      "path": "55"
    },
    "3376": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3377": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "EXTCODESIZE",
      "path": "55"
    },
    "3378": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3379": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3380": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "ISZERO",
      "path": "55"
    },
    "3381": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "PUSH2",
      "path": "55",
      "value": "0xBF9"
    },
    "3384": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "JUMPI",
      "path": "55"
    },
    "3385": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "PUSH1",
      "path": "55",
      "value": "0x0"
    },
    "3387": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "DUP1",
      "path": "55"
    },
    "3388": {
      "fn": "ERC777SenderRecipientMock.registerSender",
      "offset": [
        3141,
        3227
      ],
      "op": "REVERT",
      "path": "55"
    },
    "3389": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        839
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3390": {
      "fn": "Context._msgSender",
      "offset": [
        822,
        832
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 15
    },
    "3391": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        839
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3392": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        735,
        839
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3393": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1160,
        1323
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "3394": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1285
      ],
      "op": "PUSH1",
      "path": "23",
      "statement": 16,
      "value": "0x0"
    },
    "3396": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3397": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3398": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3399": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "3401": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "DUP3",
      "path": "23"
    },
    "3402": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "DUP2",
      "path": "23"
    },
    "3403": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3404": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "3406": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3407": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3408": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1300
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3413": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3415": {
      "op": "SHL"
    },
    "3416": {
      "op": "SUB"
    },
    "3417": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3418": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "SWAP4",
      "path": "23"
    },
    "3419": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "AND",
      "path": "23"
    },
    "3420": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "DUP5",
      "path": "23"
    },
    "3421": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3422": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "3423": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3424": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "3425": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3426": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1309
      ],
      "op": "KECCAK256",
      "path": "23"
    },
    "3427": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1316
      ],
      "op": "DUP1",
      "path": "23"
    },
    "3428": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1316
      ],
      "op": "SLOAD",
      "path": "23"
    },
    "3429": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3431": {
      "op": "NOT"
    },
    "3432": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1316
      ],
      "op": "AND",
      "path": "23"
    },
    "3433": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1312,
        1316
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "3435": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1316
      ],
      "op": "OR",
      "path": "23"
    },
    "3436": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1316
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "3437": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "offset": [
        1265,
        1316
      ],
      "op": "SSTORE",
      "path": "23"
    },
    "3438": {
      "fn": "ERC1820Implementer._registerInterfaceForAddress",
      "jump": "o",
      "offset": [
        1160,
        1323
      ],
      "op": "JUMP",
      "path": "23"
    }
  },
  "sha1": "0bf437126f520a6247ecca1acbca3a1e38d356de",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../GSN/Context.sol\";\nimport \"../token/ERC777/IERC777.sol\";\nimport \"../token/ERC777/IERC777Sender.sol\";\nimport \"../token/ERC777/IERC777Recipient.sol\";\nimport \"../introspection/IERC1820Registry.sol\";\nimport \"../introspection/ERC1820Implementer.sol\";\n\ncontract ERC777SenderRecipientMock is Context, IERC777Sender, IERC777Recipient, ERC1820Implementer {\n    event TokensToSendCalled(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData,\n        address token,\n        uint256 fromBalance,\n        uint256 toBalance\n    );\n\n    event TokensReceivedCalled(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes data,\n        bytes operatorData,\n        address token,\n        uint256 fromBalance,\n        uint256 toBalance\n    );\n\n    bool private _shouldRevertSend;\n    bool private _shouldRevertReceive;\n\n    IERC1820Registry private _erc1820 = IERC1820Registry(0x1820a4B7618BdE71Dce8cdc73aAB6C95905faD24);\n\n    bytes32 constant private _TOKENS_SENDER_INTERFACE_HASH = keccak256(\"ERC777TokensSender\");\n    bytes32 constant private _TOKENS_RECIPIENT_INTERFACE_HASH = keccak256(\"ERC777TokensRecipient\");\n\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external override {\n        if (_shouldRevertSend) {\n            revert();\n        }\n\n        IERC777 token = IERC777(_msgSender());\n\n        uint256 fromBalance = token.balanceOf(from);\n        // when called due to burn, to will be the zero address, which will have a balance of 0\n        uint256 toBalance = token.balanceOf(to);\n\n        emit TokensToSendCalled(\n            operator,\n            from,\n            to,\n            amount,\n            userData,\n            operatorData,\n            address(token),\n            fromBalance,\n            toBalance\n        );\n    }\n\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external override {\n        if (_shouldRevertReceive) {\n            revert();\n        }\n\n        IERC777 token = IERC777(_msgSender());\n\n        uint256 fromBalance = token.balanceOf(from);\n        // when called due to burn, to will be the zero address, which will have a balance of 0\n        uint256 toBalance = token.balanceOf(to);\n\n        emit TokensReceivedCalled(\n            operator,\n            from,\n            to,\n            amount,\n            userData,\n            operatorData,\n            address(token),\n            fromBalance,\n            toBalance\n        );\n    }\n\n    function senderFor(address account) public {\n        _registerInterfaceForAddress(_TOKENS_SENDER_INTERFACE_HASH, account);\n\n        address self = address(this);\n        if (account == self) {\n            registerSender(self);\n        }\n    }\n\n    function registerSender(address sender) public {\n        _erc1820.setInterfaceImplementer(address(this), _TOKENS_SENDER_INTERFACE_HASH, sender);\n    }\n\n    function recipientFor(address account) public {\n        _registerInterfaceForAddress(_TOKENS_RECIPIENT_INTERFACE_HASH, account);\n\n        address self = address(this);\n        if (account == self) {\n            registerRecipient(self);\n        }\n    }\n\n    function registerRecipient(address recipient) public {\n        _erc1820.setInterfaceImplementer(address(this), _TOKENS_RECIPIENT_INTERFACE_HASH, recipient);\n    }\n\n    function setShouldRevertSend(bool shouldRevert) public {\n        _shouldRevertSend = shouldRevert;\n    }\n\n    function setShouldRevertReceive(bool shouldRevert) public {\n        _shouldRevertReceive = shouldRevert;\n    }\n\n    function send(IERC777 token, address to, uint256 amount, bytes memory data) public {\n        // This is 777's send function, not the Solidity send function\n        token.send(to, amount, data); // solhint-disable-line check-send-result\n    }\n\n    function burn(IERC777 token, uint256 amount, bytes memory data) public {\n        token.burn(amount, data);\n    }\n}\n\n",
  "sourceMap": "282:3970:55:-:0;;;977:96;;;-1:-1:-1;;;;;;977:96:55;;;;;282:3970;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/ERC777SenderRecipientMock.sol",
  "type": "contract"
}