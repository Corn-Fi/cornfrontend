{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/openzeppelin/contracts/GSN/Context.sol",
    "101": "contracts/openzeppelin/contracts/utils/Address.sol",
    "105": "contracts/openzeppelin/contracts/utils/EnumerableMap.sol",
    "106": "contracts/openzeppelin/contracts/utils/EnumerableSet.sol",
    "110": "contracts/openzeppelin/contracts/utils/Strings.sol",
    "21": "contracts/openzeppelin/contracts/introspection/ERC165.sol",
    "24": "contracts/openzeppelin/contracts/introspection/IERC165.sol",
    "28": "contracts/openzeppelin/contracts/math/SafeMath.sol",
    "89": "contracts/openzeppelin/contracts/token/ERC721/ERC721.sol",
    "93": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
    "94": "contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
    "95": "contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
    "96": "contracts/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "ERC721": [
        17396
      ]
    },
    "id": 17397,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16450,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:89"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/GSN/Context.sol",
        "file": "../../GSN/Context.sol",
        "id": 16451,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 8186,
        "src": "25:31:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 16452,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 17597,
        "src": "57:23:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Metadata.sol",
        "file": "./IERC721Metadata.sol",
        "id": 16453,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 17649,
        "src": "81:31:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol",
        "file": "./IERC721Enumerable.sol",
        "id": 16454,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 17625,
        "src": "113:33:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 16455,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 17667,
        "src": "147:31:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/introspection/ERC165.sol",
        "file": "../../introspection/ERC165.sol",
        "id": 16456,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 10350,
        "src": "179:40:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/math/SafeMath.sol",
        "file": "../../math/SafeMath.sol",
        "id": 16457,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 10969,
        "src": "220:33:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 16458,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 19019,
        "src": "254:33:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/EnumerableSet.sol",
        "file": "../../utils/EnumerableSet.sol",
        "id": 16459,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 20114,
        "src": "288:39:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/EnumerableMap.sol",
        "file": "../../utils/EnumerableMap.sol",
        "id": 16460,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 19719,
        "src": "328:39:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 16461,
        "nodeType": "ImportDirective",
        "scope": 17397,
        "sourceUnit": 20486,
        "src": "368:33:89",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16463,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8185,
              "src": "547:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$8185",
                "typeString": "contract Context"
              }
            },
            "id": 16464,
            "nodeType": "InheritanceSpecifier",
            "src": "547:7:89"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16465,
              "name": "ERC165",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10349,
              "src": "556:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC165_$10349",
                "typeString": "contract ERC165"
              }
            },
            "id": 16466,
            "nodeType": "InheritanceSpecifier",
            "src": "556:6:89"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16467,
              "name": "IERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17596,
              "src": "564:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$17596",
                "typeString": "contract IERC721"
              }
            },
            "id": 16468,
            "nodeType": "InheritanceSpecifier",
            "src": "564:7:89"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16469,
              "name": "IERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17648,
              "src": "573:15:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Metadata_$17648",
                "typeString": "contract IERC721Metadata"
              }
            },
            "id": 16470,
            "nodeType": "InheritanceSpecifier",
            "src": "573:15:89"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 16471,
              "name": "IERC721Enumerable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 17624,
              "src": "590:17:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721Enumerable_$17624",
                "typeString": "contract IERC721Enumerable"
              }
            },
            "id": 16472,
            "nodeType": "InheritanceSpecifier",
            "src": "590:17:89"
          }
        ],
        "contractDependencies": [
          8185,
          10349,
          10595,
          17596,
          17624,
          17648
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 16462,
          "nodeType": "StructuredDocumentation",
          "src": "403:124:89",
          "text": " @title ERC721 Non-Fungible Token Standard basic implementation\n @dev see https://eips.ethereum.org/EIPS/eip-721"
        },
        "fullyImplemented": true,
        "id": 17396,
        "linearizedBaseContracts": [
          17396,
          17624,
          17648,
          17596,
          10349,
          10595,
          8185
        ],
        "name": "ERC721",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 16475,
            "libraryName": {
              "contractScope": null,
              "id": 16473,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10968,
              "src": "620:8:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$10968",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "614:27:89",
            "typeName": {
              "id": 16474,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "633:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 16478,
            "libraryName": {
              "contractScope": null,
              "id": 16476,
              "name": "Address",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19018,
              "src": "652:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Address_$19018",
                "typeString": "library Address"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "646:26:89",
            "typeName": {
              "id": 16477,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "664:7:89",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "id": 16481,
            "libraryName": {
              "contractScope": null,
              "id": 16479,
              "name": "EnumerableSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20113,
              "src": "683:13:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableSet_$20113",
                "typeString": "library EnumerableSet"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "677:46:89",
            "typeName": {
              "contractScope": null,
              "id": 16480,
              "name": "EnumerableSet.UintSet",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20018,
              "src": "701:21:89",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintSet_$20018_storage_ptr",
                "typeString": "struct EnumerableSet.UintSet"
              }
            }
          },
          {
            "id": 16484,
            "libraryName": {
              "contractScope": null,
              "id": 16482,
              "name": "EnumerableMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19718,
              "src": "734:13:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EnumerableMap_$19718",
                "typeString": "library EnumerableMap"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "728:55:89",
            "typeName": {
              "contractScope": null,
              "id": 16483,
              "name": "EnumerableMap.UintToAddressMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19543,
              "src": "752:30:89",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage_ptr",
                "typeString": "struct EnumerableMap.UintToAddressMap"
              }
            }
          },
          {
            "id": 16487,
            "libraryName": {
              "contractScope": null,
              "id": 16485,
              "name": "Strings",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 20485,
              "src": "794:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Strings_$20485",
                "typeString": "library Strings"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "788:26:89",
            "typeName": {
              "id": 16486,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "806:7:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": true,
            "id": 16490,
            "mutability": "constant",
            "name": "_ERC721_RECEIVED",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "992:53:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 16488,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "992:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783135306237613032",
              "id": 16489,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1035:10:89",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_353073666_by_1",
                "typeString": "int_const 353073666"
              },
              "value": "0x150b7a02"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16494,
            "mutability": "mutable",
            "name": "_holderTokens",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "1129:64:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$20018_storage_$",
              "typeString": "mapping(address => struct EnumerableSet.UintSet)"
            },
            "typeName": {
              "id": 16493,
              "keyType": {
                "id": 16491,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1138:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1129:42:89",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$20018_storage_$",
                "typeString": "mapping(address => struct EnumerableSet.UintSet)"
              },
              "valueType": {
                "contractScope": null,
                "id": 16492,
                "name": "EnumerableSet.UintSet",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 20018,
                "src": "1149:21:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_UintSet_$20018_storage_ptr",
                  "typeString": "struct EnumerableSet.UintSet"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16496,
            "mutability": "mutable",
            "name": "_tokenOwners",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "1257:51:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage",
              "typeString": "struct EnumerableMap.UintToAddressMap"
            },
            "typeName": {
              "contractScope": null,
              "id": 16495,
              "name": "EnumerableMap.UintToAddressMap",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19543,
              "src": "1257:30:89",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage_ptr",
                "typeString": "struct EnumerableMap.UintToAddressMap"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16500,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "1364:52:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 16499,
              "keyType": {
                "id": 16497,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1373:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1364:28:89",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 16498,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1384:7:89",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16506,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "1471:73:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 16505,
              "keyType": {
                "id": 16501,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1480:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1471:46:89",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 16504,
                "keyType": {
                  "id": 16502,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1500:7:89",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1491:25:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 16503,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1511:4:89",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16508,
            "mutability": "mutable",
            "name": "_name",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "1569:20:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16507,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1569:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16510,
            "mutability": "mutable",
            "name": "_symbol",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "1616:22:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16509,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1616:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16514,
            "mutability": "mutable",
            "name": "_tokenURIs",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "1684:45:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 16513,
              "keyType": {
                "id": 16511,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1692:7:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1684:26:89",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 16512,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1703:6:89",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 16516,
            "mutability": "mutable",
            "name": "_baseURI",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "1752:23:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 16515,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1752:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 16519,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "2650:57:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 16517,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2650:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783830616335386364",
              "id": 16518,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2697:10:89",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2158778573_by_1",
                "typeString": "int_const 2158778573"
              },
              "value": "0x80ac58cd"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 16522,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721_METADATA",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "2973:66:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 16520,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "2973:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783562356531333966",
              "id": 16521,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3029:10:89",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1532892063_by_1",
                "typeString": "int_const 1532892063"
              },
              "value": "0x5b5e139f"
            },
            "visibility": "private"
          },
          {
            "constant": true,
            "id": 16525,
            "mutability": "constant",
            "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 17396,
            "src": "3344:68:89",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 16523,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "3344:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30783738306539643633",
              "id": 16524,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3402:10:89",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2014223715_by_1",
                "typeString": "int_const 2014223715"
              },
              "value": "0x780e9d63"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 16552,
              "nodeType": "Block",
              "src": "3481:303:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 16532,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16508,
                      "src": "3491:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 16533,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16527,
                      "src": "3499:4:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3491:12:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 16535,
                  "nodeType": "ExpressionStatement",
                  "src": "3491:12:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 16536,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16510,
                      "src": "3513:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 16537,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16529,
                      "src": "3523:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3513:16:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 16539,
                  "nodeType": "ExpressionStatement",
                  "src": "3513:16:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16541,
                        "name": "_INTERFACE_ID_ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16519,
                        "src": "3636:20:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 16540,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10348,
                      "src": "3617:18:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 16542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3617:40:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16543,
                  "nodeType": "ExpressionStatement",
                  "src": "3617:40:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16545,
                        "name": "_INTERFACE_ID_ERC721_METADATA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16522,
                        "src": "3686:29:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 16544,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10348,
                      "src": "3667:18:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 16546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:49:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16547,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:49:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16549,
                        "name": "_INTERFACE_ID_ERC721_ENUMERABLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16525,
                        "src": "3745:31:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 16548,
                      "name": "_registerInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10348,
                      "src": "3726:18:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
                        "typeString": "function (bytes4)"
                      }
                    },
                    "id": 16550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3726:51:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16551,
                  "nodeType": "ExpressionStatement",
                  "src": "3726:51:89"
                }
              ]
            },
            "documentation": null,
            "id": 16553,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16527,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16553,
                  "src": "3432:18:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16526,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3432:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16529,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16553,
                  "src": "3452:20:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16528,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3452:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3431:42:89"
            },
            "returnParameters": {
              "id": 16531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3481:0:89"
            },
            "scope": 17396,
            "src": "3419:365:89",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17526
            ],
            "body": {
              "id": 16578,
              "nodeType": "Block",
              "src": "4061:138:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16563,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16556,
                          "src": "4079:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 16566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4096:1:89",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 16565,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4088:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 16564,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4088:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 16567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4088:10:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "4079:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a2062616c616e636520717565727920666f7220746865207a65726f2061646472657373",
                        "id": 16569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4100:44:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        },
                        "value": "ERC721: balance query for the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba",
                          "typeString": "literal_string \"ERC721: balance query for the zero address\""
                        }
                      ],
                      "id": 16562,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4071:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4071:74:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16571,
                  "nodeType": "ExpressionStatement",
                  "src": "4071:74:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 16572,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16494,
                          "src": "4163:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$20018_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 16574,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 16573,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16556,
                          "src": "4177:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4163:20:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$20018_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 16575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20092,
                      "src": "4163:27:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$20018_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$20018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 16576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4163:29:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16561,
                  "id": 16577,
                  "nodeType": "Return",
                  "src": "4156:36:89"
                }
              ]
            },
            "documentation": {
              "id": 16554,
              "nodeType": "StructuredDocumentation",
              "src": "3790:193:89",
              "text": " @dev Gets the balance of the specified address.\n @param owner address to query the balance of\n @return uint256 representing the amount owned by the passed address"
            },
            "functionSelector": "70a08231",
            "id": 16579,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16558,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4034:8:89"
            },
            "parameters": {
              "id": 16557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16556,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16579,
                  "src": "4007:13:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4007:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4006:15:89"
            },
            "returnParameters": {
              "id": 16561,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16560,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16579,
                  "src": "4052:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16559,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4052:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4051:9:89"
            },
            "scope": 17396,
            "src": "3988:211:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17534
            ],
            "body": {
              "id": 16594,
              "nodeType": "Block",
              "src": "4491:94:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16590,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16582,
                        "src": "4525:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 16591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4534:43:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        },
                        "value": "ERC721: owner query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397",
                          "typeString": "literal_string \"ERC721: owner query for nonexistent token\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16588,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16496,
                        "src": "4508:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 16589,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "get",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19717,
                      "src": "4508:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$19543_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$bound_to$_t_struct$_UintToAddressMap_$19543_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory) view returns (address)"
                      }
                    },
                    "id": 16592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4508:70:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 16587,
                  "id": 16593,
                  "nodeType": "Return",
                  "src": "4501:77:89"
                }
              ]
            },
            "documentation": {
              "id": 16580,
              "nodeType": "StructuredDocumentation",
              "src": "4205:208:89",
              "text": " @dev Gets the owner of the specified token ID.\n @param tokenId uint256 ID of the token to query the owner of\n @return address currently marked as the owner of the given token ID"
            },
            "functionSelector": "6352211e",
            "id": 16595,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16584,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4464:8:89"
            },
            "parameters": {
              "id": 16583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16582,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16595,
                  "src": "4435:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16581,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4435:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4434:17:89"
            },
            "returnParameters": {
              "id": 16587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16586,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16595,
                  "src": "4482:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16585,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4482:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4481:9:89"
            },
            "scope": 17396,
            "src": "4418:167:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17635
            ],
            "body": {
              "id": 16604,
              "nodeType": "Block",
              "src": "4751:29:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16602,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16508,
                    "src": "4768:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 16601,
                  "id": 16603,
                  "nodeType": "Return",
                  "src": "4761:12:89"
                }
              ]
            },
            "documentation": {
              "id": 16596,
              "nodeType": "StructuredDocumentation",
              "src": "4591:94:89",
              "text": " @dev Gets the token name.\n @return string representing the token name"
            },
            "functionSelector": "06fdde03",
            "id": 16605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16598,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4718:8:89"
            },
            "parameters": {
              "id": 16597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4703:2:89"
            },
            "returnParameters": {
              "id": 16601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16600,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16605,
                  "src": "4736:13:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16599,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4736:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4735:15:89"
            },
            "scope": 17396,
            "src": "4690:90:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17640
            ],
            "body": {
              "id": 16614,
              "nodeType": "Block",
              "src": "4952:31:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16612,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16510,
                    "src": "4969:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 16611,
                  "id": 16613,
                  "nodeType": "Return",
                  "src": "4962:14:89"
                }
              ]
            },
            "documentation": {
              "id": 16606,
              "nodeType": "StructuredDocumentation",
              "src": "4786:98:89",
              "text": " @dev Gets the token symbol.\n @return string representing the token symbol"
            },
            "functionSelector": "95d89b41",
            "id": 16615,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16608,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4919:8:89"
            },
            "parameters": {
              "id": 16607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4904:2:89"
            },
            "returnParameters": {
              "id": 16611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16610,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16615,
                  "src": "4937:13:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16609,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4937:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4936:15:89"
            },
            "scope": 17396,
            "src": "4889:94:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17647
            ],
            "body": {
              "id": 16677,
              "nodeType": "Block",
              "src": "5906:660:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 16626,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16618,
                            "src": "5932:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16625,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16971,
                          "src": "5924:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 16627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5924:16:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 16628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5942:49:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb",
                          "typeString": "literal_string \"ERC721Metadata: URI query for nonexistent token\""
                        }
                      ],
                      "id": 16624,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5916:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5916:76:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16630,
                  "nodeType": "ExpressionStatement",
                  "src": "5916:76:89"
                },
                {
                  "assignments": [
                    16632
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16632,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 16677,
                      "src": "6003:23:89",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 16631,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6003:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 16636,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 16633,
                      "name": "_tokenURIs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16514,
                      "src": "6029:10:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 16635,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 16634,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16618,
                      "src": "6040:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6029:19:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6003:45:89"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 16639,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16516,
                            "src": "6127:8:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 16638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6121:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 16637,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6121:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 16640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6121:15:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 16641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6121:22:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 16642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6147:1:89",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6121:27:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 16647,
                  "nodeType": "IfStatement",
                  "src": "6117:74:89",
                  "trueBody": {
                    "id": 16646,
                    "nodeType": "Block",
                    "src": "6150:41:89",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 16644,
                          "name": "_tokenURI",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16632,
                          "src": "6171:9:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 16623,
                        "id": 16645,
                        "nodeType": "Return",
                        "src": "6164:16:89"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 16650,
                            "name": "_tokenURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16632,
                            "src": "6299:9:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 16649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6293:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 16648,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6293:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 16651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6293:16:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 16652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "6293:23:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 16653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6319:1:89",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6293:27:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 16665,
                  "nodeType": "IfStatement",
                  "src": "6289:110:89",
                  "trueBody": {
                    "id": 16664,
                    "nodeType": "Block",
                    "src": "6322:77:89",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 16659,
                                  "name": "_baseURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16516,
                                  "src": "6367:8:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 16660,
                                  "name": "_tokenURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16632,
                                  "src": "6377:9:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 16657,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6350:3:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 16658,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "6350:16:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 16661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6350:37:89",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 16656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6343:6:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 16655,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "6343:6:89",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 16662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6343:45:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 16623,
                        "id": 16663,
                        "nodeType": "Return",
                        "src": "6336:52:89"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 16670,
                            "name": "_baseURI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16516,
                            "src": "6529:8:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 16671,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16618,
                                "src": "6539:7:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 16672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "toString",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 20484,
                              "src": "6539:16:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256) pure returns (string memory)"
                              }
                            },
                            "id": 16673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6539:18:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 16668,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "6512:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 16669,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6512:16:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 16674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6512:46:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16667,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6505:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 16666,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6505:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": null,
                          "typeString": null
                        }
                      }
                    },
                    "id": 16675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6505:54:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 16623,
                  "id": 16676,
                  "nodeType": "Return",
                  "src": "6498:61:89"
                }
              ]
            },
            "documentation": {
              "id": 16616,
              "nodeType": "StructuredDocumentation",
              "src": "4989:832:89",
              "text": " @dev Returns the URI for a given token ID. May return an empty string.\n If a base URI is set (via {_setBaseURI}), it is added as a prefix to the\n token's own URI (via {_setTokenURI}).\n If there is a base URI but no token URI, the token's ID will be used as\n its URI when appending it to the base URI. This pattern for autogenerated\n token URIs can lead to large gas savings.\n .Examples\n |===\n |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()`\n | \"\"\n | \"\"\n | \"\"\n | \"\"\n | \"token.uri/123\"\n | \"token.uri/123\"\n | \"token.uri/\"\n | \"123\"\n | \"token.uri/123\"\n | \"token.uri/\"\n | \"\"\n | \"token.uri/<tokenId>\"\n |===\n Requirements:\n - `tokenId` must exist."
            },
            "functionSelector": "c87b56dd",
            "id": 16678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16620,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5873:8:89"
            },
            "parameters": {
              "id": 16619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16618,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16678,
                  "src": "5844:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16617,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5844:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5843:17:89"
            },
            "returnParameters": {
              "id": 16623,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16622,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16678,
                  "src": "5891:13:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16621,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5891:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5890:15:89"
            },
            "scope": 17396,
            "src": "5826:740:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16686,
              "nodeType": "Block",
              "src": "6853:32:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16684,
                    "name": "_baseURI",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16516,
                    "src": "6870:8:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 16683,
                  "id": 16685,
                  "nodeType": "Return",
                  "src": "6863:15:89"
                }
              ]
            },
            "documentation": {
              "id": 16679,
              "nodeType": "StructuredDocumentation",
              "src": "6572:221:89",
              "text": " @dev Returns the base URI set via {_setBaseURI}. This will be\n automatically added as a prefix in {tokenURI} to each token's URI, or\n to the token ID if no specific URI is set for that token ID."
            },
            "functionSelector": "6c0360eb",
            "id": 16687,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6814:2:89"
            },
            "returnParameters": {
              "id": 16683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16682,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16687,
                  "src": "6838:13:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 16681,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6838:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "6837:15:89"
            },
            "scope": 17396,
            "src": "6798:87:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17616
            ],
            "body": {
              "id": 16705,
              "nodeType": "Block",
              "src": "7357:54:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16702,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16692,
                        "src": "7398:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 16698,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16494,
                          "src": "7374:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$20018_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 16700,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 16699,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16690,
                          "src": "7388:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7374:20:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$20018_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 16701,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20112,
                      "src": "7374:23:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintSet_$20018_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$20018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"
                      }
                    },
                    "id": 16703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7374:30:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16697,
                  "id": 16704,
                  "nodeType": "Return",
                  "src": "7367:37:89"
                }
              ]
            },
            "documentation": {
              "id": 16688,
              "nodeType": "StructuredDocumentation",
              "src": "6891:363:89",
              "text": " @dev Gets the token ID at a given index of the tokens list of the requested owner.\n @param owner address owning the tokens list to be accessed\n @param index uint256 representing the index to be accessed of the requested tokens list\n @return uint256 token ID at the given index of the tokens list owned by the requested address"
            },
            "functionSelector": "2f745c59",
            "id": 16706,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenOfOwnerByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16694,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7330:8:89"
            },
            "parameters": {
              "id": 16693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16690,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16706,
                  "src": "7288:13:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16689,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7288:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16692,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16706,
                  "src": "7303:13:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7303:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7287:30:89"
            },
            "returnParameters": {
              "id": 16697,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16696,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16706,
                  "src": "7348:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16695,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7348:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7347:9:89"
            },
            "scope": 17396,
            "src": "7259:152:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17607
            ],
            "body": {
              "id": 16717,
              "nodeType": "Block",
              "src": "7626:138:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16713,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16496,
                        "src": "7736:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 16714,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19626,
                      "src": "7736:19:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$19543_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintToAddressMap_$19543_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 16715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7736:21:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16712,
                  "id": 16716,
                  "nodeType": "Return",
                  "src": "7729:28:89"
                }
              ]
            },
            "documentation": {
              "id": 16707,
              "nodeType": "StructuredDocumentation",
              "src": "7417:142:89",
              "text": " @dev Gets the total amount of tokens stored by the contract.\n @return uint256 representing the total amount of tokens"
            },
            "functionSelector": "18160ddd",
            "id": 16718,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16709,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7599:8:89"
            },
            "parameters": {
              "id": 16708,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7584:2:89"
            },
            "returnParameters": {
              "id": 16712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16711,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16718,
                  "src": "7617:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16710,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7617:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7616:9:89"
            },
            "scope": 17396,
            "src": "7564:200:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17623
            ],
            "body": {
              "id": 16736,
              "nodeType": "Block",
              "src": "8178:85:89",
              "statements": [
                {
                  "assignments": [
                    16728,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16728,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 16736,
                      "src": "8189:15:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16727,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8189:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 16733,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16731,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16721,
                        "src": "8226:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16729,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16496,
                        "src": "8210:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 16730,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "at",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19662,
                      "src": "8210:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$19543_storage_ptr_$_t_uint256_$returns$_t_uint256_$_t_address_$bound_to$_t_struct$_UintToAddressMap_$19543_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (uint256,address)"
                      }
                    },
                    "id": 16732,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8210:22:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
                      "typeString": "tuple(uint256,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8188:44:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16734,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16728,
                    "src": "8249:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16726,
                  "id": 16735,
                  "nodeType": "Return",
                  "src": "8242:14:89"
                }
              ]
            },
            "documentation": {
              "id": 16719,
              "nodeType": "StructuredDocumentation",
              "src": "7770:327:89",
              "text": " @dev Gets the token ID at a given index of all the tokens in this contract\n Reverts if the index is greater or equal to the total number of tokens.\n @param index uint256 representing the index to be accessed of the tokens list\n @return uint256 token ID at the given index of the tokens list"
            },
            "functionSelector": "4f6ccce7",
            "id": 16737,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenByIndex",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16723,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8151:8:89"
            },
            "parameters": {
              "id": 16722,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16721,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16737,
                  "src": "8124:13:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16720,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8124:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8123:15:89"
            },
            "returnParameters": {
              "id": 16726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16725,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16737,
                  "src": "8169:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8169:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8168:9:89"
            },
            "scope": 17396,
            "src": "8102:161:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17561
            ],
            "body": {
              "id": 16778,
              "nodeType": "Block",
              "src": "8754:311:89",
              "statements": [
                {
                  "assignments": [
                    16747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16747,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 16778,
                      "src": "8764:13:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16746,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8764:7:89",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 16751,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16749,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16742,
                        "src": "8788:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16748,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16595,
                      "src": "8780:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 16750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8780:16:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8764:32:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16753,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16740,
                          "src": "8814:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 16754,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16747,
                          "src": "8820:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8814:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 16756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8827:35:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 16752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8806:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8806:57:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16758,
                  "nodeType": "ExpressionStatement",
                  "src": "8806:57:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 16769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 16763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 16760,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8173,
                              "src": "8882:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 16761,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8882:12:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 16762,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16747,
                            "src": "8898:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8882:21:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 16765,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16747,
                              "src": "8924:5:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 16766,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8173,
                                "src": "8931:10:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                  "typeString": "function () view returns (address payable)"
                                }
                              },
                              "id": 16767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8931:12:89",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 16764,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16852,
                            "src": "8907:16:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 16768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8907:37:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8882:62:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c",
                        "id": 16770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8958:58:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        },
                        "value": "ERC721: approve caller is not owner nor approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d",
                          "typeString": "literal_string \"ERC721: approve caller is not owner nor approved for all\""
                        }
                      ],
                      "id": 16759,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8874:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8874:152:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16772,
                  "nodeType": "ExpressionStatement",
                  "src": "8874:152:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16774,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16740,
                        "src": "9046:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16775,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16742,
                        "src": "9050:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16773,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17384,
                      "src": "9037:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 16776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9037:21:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16777,
                  "nodeType": "ExpressionStatement",
                  "src": "9037:21:89"
                }
              ]
            },
            "documentation": {
              "id": 16738,
              "nodeType": "StructuredDocumentation",
              "src": "8269:410:89",
              "text": " @dev Approves another address to transfer the given token ID\n The zero address indicates there is no approved address.\n There can only be one approved address per token at a given time.\n Can only be called by the token owner or an approved operator.\n @param to address to be approved for the given token ID\n @param tokenId uint256 ID of the token to be approved"
            },
            "functionSelector": "095ea7b3",
            "id": 16779,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16744,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8745:8:89"
            },
            "parameters": {
              "id": 16743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16740,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16779,
                  "src": "8701:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8701:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16742,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16779,
                  "src": "8713:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16741,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8713:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8700:29:89"
            },
            "returnParameters": {
              "id": 16745,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8754:0:89"
            },
            "scope": 17396,
            "src": "8684:381:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17568
            ],
            "body": {
              "id": 16799,
              "nodeType": "Block",
              "src": "9427:132:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 16790,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16782,
                            "src": "9453:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16789,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16971,
                          "src": "9445:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 16791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9445:16:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 16792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9463:46:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        },
                        "value": "ERC721: approved query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d",
                          "typeString": "literal_string \"ERC721: approved query for nonexistent token\""
                        }
                      ],
                      "id": 16788,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9437:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9437:73:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16794,
                  "nodeType": "ExpressionStatement",
                  "src": "9437:73:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 16795,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16500,
                      "src": "9528:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 16797,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 16796,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16782,
                      "src": "9544:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9528:24:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 16787,
                  "id": 16798,
                  "nodeType": "Return",
                  "src": "9521:31:89"
                }
              ]
            },
            "documentation": {
              "id": 16780,
              "nodeType": "StructuredDocumentation",
              "src": "9071:274:89",
              "text": " @dev Gets the approved address for a token ID, or zero if no address set\n Reverts if the token ID does not exist.\n @param tokenId uint256 ID of the token to query the approval of\n @return address currently approved for the given token ID"
            },
            "functionSelector": "081812fc",
            "id": 16800,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16784,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9400:8:89"
            },
            "parameters": {
              "id": 16783,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16782,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16800,
                  "src": "9371:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16781,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9371:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9370:17:89"
            },
            "returnParameters": {
              "id": 16787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16786,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16800,
                  "src": "9418:7:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9418:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9417:9:89"
            },
            "scope": 17396,
            "src": "9350:209:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17575
            ],
            "body": {
              "id": 16833,
              "nodeType": "Block",
              "src": "9942:206:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 16813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 16810,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16803,
                          "src": "9960:8:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 16811,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8173,
                            "src": "9972:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 16812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9972:12:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "9960:24:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 16814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9986:27:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 16809,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9952:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9952:62:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16816,
                  "nodeType": "ExpressionStatement",
                  "src": "9952:62:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 16817,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16506,
                          "src": "10025:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 16821,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 16818,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8173,
                            "src": "10044:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                              "typeString": "function () view returns (address payable)"
                            }
                          },
                          "id": 16819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10044:12:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "10025:32:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 16822,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 16820,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16803,
                        "src": "10058:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10025:42:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 16823,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16805,
                      "src": "10070:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10025:53:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16825,
                  "nodeType": "ExpressionStatement",
                  "src": "10025:53:89"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 16827,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8173,
                          "src": "10108:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 16828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10108:12:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16829,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16803,
                        "src": "10122:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16830,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16805,
                        "src": "10132:8:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 16826,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17518,
                      "src": "10093:14:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 16831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10093:48:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16832,
                  "nodeType": "EmitStatement",
                  "src": "10088:53:89"
                }
              ]
            },
            "documentation": {
              "id": 16801,
              "nodeType": "StructuredDocumentation",
              "src": "9565:288:89",
              "text": " @dev Sets or unsets the approval of a given operator\n An operator is allowed to transfer all tokens of the sender on their behalf.\n @param operator operator address to set the approval\n @param approved representing the status of the approval to be set"
            },
            "functionSelector": "a22cb465",
            "id": 16834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16807,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9933:8:89"
            },
            "parameters": {
              "id": 16806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16803,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16834,
                  "src": "9885:16:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16802,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9885:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16805,
                  "mutability": "mutable",
                  "name": "approved",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16834,
                  "src": "9903:13:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16804,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9903:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "9884:33:89"
            },
            "returnParameters": {
              "id": 16808,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9942:0:89"
            },
            "scope": 17396,
            "src": "9858:290:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17584
            ],
            "body": {
              "id": 16851,
              "nodeType": "Block",
              "src": "10565:59:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 16845,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16506,
                        "src": "10582:18:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 16847,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 16846,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16837,
                        "src": "10601:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "10582:25:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 16849,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 16848,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16839,
                      "src": "10608:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10582:35:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16844,
                  "id": 16850,
                  "nodeType": "Return",
                  "src": "10575:42:89"
                }
              ]
            },
            "documentation": {
              "id": 16835,
              "nodeType": "StructuredDocumentation",
              "src": "10154:311:89",
              "text": " @dev Tells whether an operator is approved by a given owner.\n @param owner owner address which you want to query the approval of\n @param operator operator address which you want to query the approval of\n @return bool whether the given operator is approved by the given owner"
            },
            "functionSelector": "e985e9c5",
            "id": 16852,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16841,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10541:8:89"
            },
            "parameters": {
              "id": 16840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16837,
                  "mutability": "mutable",
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16852,
                  "src": "10496:13:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10496:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16839,
                  "mutability": "mutable",
                  "name": "operator",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16852,
                  "src": "10511:16:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10511:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10495:33:89"
            },
            "returnParameters": {
              "id": 16844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16843,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16852,
                  "src": "10559:4:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16842,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "10559:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "10558:6:89"
            },
            "scope": 17396,
            "src": "10470:154:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17554
            ],
            "body": {
              "id": 16878,
              "nodeType": "Block",
              "src": "11150:211:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 16865,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8173,
                              "src": "11239:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 16866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11239:12:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 16867,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16859,
                            "src": "11253:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16864,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17011,
                          "src": "11220:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 16868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11220:41:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 16869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11263:51:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 16863,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11212:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11212:103:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16871,
                  "nodeType": "ExpressionStatement",
                  "src": "11212:103:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16873,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16855,
                        "src": "11336:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16874,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16857,
                        "src": "11342:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16875,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16859,
                        "src": "11346:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16872,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17253,
                      "src": "11326:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11326:28:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16877,
                  "nodeType": "ExpressionStatement",
                  "src": "11326:28:89"
                }
              ]
            },
            "documentation": {
              "id": 16853,
              "nodeType": "StructuredDocumentation",
              "src": "10630:426:89",
              "text": " @dev Transfers the ownership of a given token ID to another address.\n Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requires the msg.sender to be the owner, approved, or operator.\n @param from current owner of the token\n @param to address to receive the ownership of the given token ID\n @param tokenId uint256 ID of the token to be transferred"
            },
            "functionSelector": "23b872dd",
            "id": 16879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16861,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11141:8:89"
            },
            "parameters": {
              "id": 16860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16855,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16879,
                  "src": "11083:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11083:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16857,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16879,
                  "src": "11097:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11097:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16859,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16879,
                  "src": "11109:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11109:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "11082:43:89"
            },
            "returnParameters": {
              "id": 16862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11150:0:89"
            },
            "scope": 17396,
            "src": "11061:300:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17544
            ],
            "body": {
              "id": 16897,
              "nodeType": "Block",
              "src": "12103:56:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16891,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16882,
                        "src": "12130:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16892,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16884,
                        "src": "12136:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16893,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16886,
                        "src": "12140:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 16894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12149:2:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 16890,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16898,
                        16928
                      ],
                      "referencedDeclaration": 16928,
                      "src": "12113:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 16895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12113:39:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16896,
                  "nodeType": "ExpressionStatement",
                  "src": "12113:39:89"
                }
              ]
            },
            "documentation": {
              "id": 16880,
              "nodeType": "StructuredDocumentation",
              "src": "11367:638:89",
              "text": " @dev Safely transfers the ownership of a given token ID to another address\n If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\n which is called upon a safe transfer, and return the magic value\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n the transfer is reverted.\n Requires the msg.sender to be the owner, approved, or operator\n @param from current owner of the token\n @param to address to receive the ownership of the given token ID\n @param tokenId uint256 ID of the token to be transferred"
            },
            "functionSelector": "42842e0e",
            "id": 16898,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16888,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12094:8:89"
            },
            "parameters": {
              "id": 16887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16882,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16898,
                  "src": "12036:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12036:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16884,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16898,
                  "src": "12050:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12050:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16886,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16898,
                  "src": "12062:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16885,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12062:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12035:43:89"
            },
            "returnParameters": {
              "id": 16889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12103:0:89"
            },
            "scope": 17396,
            "src": "12010:149:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              17595
            ],
            "body": {
              "id": 16927,
              "nodeType": "Block",
              "src": "12995:169:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 16913,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8173,
                              "src": "13032:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 16914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13032:12:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 16915,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16905,
                            "src": "13046:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16912,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17011,
                          "src": "13013:18:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 16916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13013:41:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564",
                        "id": 16917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13056:51:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        },
                        "value": "ERC721: transfer caller is not owner nor approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2",
                          "typeString": "literal_string \"ERC721: transfer caller is not owner nor approved\""
                        }
                      ],
                      "id": 16911,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13005:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13005:103:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16919,
                  "nodeType": "ExpressionStatement",
                  "src": "13005:103:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16921,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16901,
                        "src": "13132:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16922,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16903,
                        "src": "13138:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16923,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16905,
                        "src": "13142:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16924,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16907,
                        "src": "13151:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 16920,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16957,
                      "src": "13118:13:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 16925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13118:39:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16926,
                  "nodeType": "ExpressionStatement",
                  "src": "13118:39:89"
                }
              ]
            },
            "documentation": {
              "id": 16899,
              "nodeType": "StructuredDocumentation",
              "src": "12165:712:89",
              "text": " @dev Safely transfers the ownership of a given token ID to another address\n If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\n which is called upon a safe transfer, and return the magic value\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n the transfer is reverted.\n Requires the _msgSender() to be the owner, approved, or operator\n @param from current owner of the token\n @param to address to receive the ownership of the given token ID\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes data to send along with a safe transfer check"
            },
            "functionSelector": "b88d4fde",
            "id": 16928,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 16909,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "12986:8:89"
            },
            "parameters": {
              "id": 16908,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16901,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16928,
                  "src": "12908:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12908:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16903,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16928,
                  "src": "12922:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16902,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12922:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16905,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16928,
                  "src": "12934:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12934:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16907,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16928,
                  "src": "12951:18:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16906,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12951:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12907:63:89"
            },
            "returnParameters": {
              "id": 16910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12995:0:89"
            },
            "scope": 17396,
            "src": "12882:282:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16956,
              "nodeType": "Block",
              "src": "13972:166:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16941,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16931,
                        "src": "13992:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16942,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16933,
                        "src": "13998:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 16943,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16935,
                        "src": "14002:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16940,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17253,
                      "src": "13982:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 16944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13982:28:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16945,
                  "nodeType": "ExpressionStatement",
                  "src": "13982:28:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 16948,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16931,
                            "src": "14051:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 16949,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16933,
                            "src": "14057:2:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 16950,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16935,
                            "src": "14061:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 16951,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16937,
                            "src": "14070:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 16947,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17362,
                          "src": "14028:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 16952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14028:48:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 16953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14078:52:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 16946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14020:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16954,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14020:111:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16955,
                  "nodeType": "ExpressionStatement",
                  "src": "14020:111:89"
                }
              ]
            },
            "documentation": {
              "id": 16929,
              "nodeType": "StructuredDocumentation",
              "src": "13170:694:89",
              "text": " @dev Safely transfers the ownership of a given token ID to another address\n If the target address is a contract, it must implement `onERC721Received`,\n which is called upon a safe transfer, and return the magic value\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n the transfer is reverted.\n Requires the msg.sender to be the owner, approved, or operator\n @param from current owner of the token\n @param to address to receive the ownership of the given token ID\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes data to send along with a safe transfer check"
            },
            "id": 16957,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16931,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16957,
                  "src": "13892:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13892:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16933,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16957,
                  "src": "13906:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16932,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13906:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16935,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16957,
                  "src": "13918:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13918:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16937,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16957,
                  "src": "13935:18:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16936,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13935:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13891:63:89"
            },
            "returnParameters": {
              "id": 16939,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13972:0:89"
            },
            "scope": 17396,
            "src": "13869:269:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16970,
              "nodeType": "Block",
              "src": "14396:54:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16967,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16960,
                        "src": "14435:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 16965,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16496,
                        "src": "14413:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 16966,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "contains",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19612,
                      "src": "14413:21:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_UintToAddressMap_$19543_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$19543_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) view returns (bool)"
                      }
                    },
                    "id": 16968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14413:30:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16964,
                  "id": 16969,
                  "nodeType": "Return",
                  "src": "14406:37:89"
                }
              ]
            },
            "documentation": {
              "id": 16958,
              "nodeType": "StructuredDocumentation",
              "src": "14144:184:89",
              "text": " @dev Returns whether the specified token exists.\n @param tokenId uint256 ID of the token to query the existence of\n @return bool whether the token exists"
            },
            "id": 16971,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16961,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16960,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16971,
                  "src": "14350:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16959,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14350:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14349:17:89"
            },
            "returnParameters": {
              "id": 16964,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16963,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 16971,
                  "src": "14390:4:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16962,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14390:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14389:6:89"
            },
            "scope": 17396,
            "src": "14333:117:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17010,
              "nodeType": "Block",
              "src": "14902:238:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 16983,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16976,
                            "src": "14928:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 16982,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16971,
                          "src": "14920:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 16984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14920:16:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e",
                        "id": 16985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14938:46:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        },
                        "value": "ERC721: operator query for nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c",
                          "typeString": "literal_string \"ERC721: operator query for nonexistent token\""
                        }
                      ],
                      "id": 16981,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14912:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14912:73:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16987,
                  "nodeType": "ExpressionStatement",
                  "src": "14912:73:89"
                },
                {
                  "assignments": [
                    16989
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16989,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 17010,
                      "src": "14995:13:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 16988,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "14995:7:89",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 16993,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 16991,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16976,
                        "src": "15019:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16990,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16595,
                      "src": "15011:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 16992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15011:16:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14995:32:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 17007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 17002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 16996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "id": 16994,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16974,
                              "src": "15045:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 16995,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16989,
                              "src": "15056:5:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15045:16:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 17001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 16998,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16976,
                                  "src": "15077:7:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 16997,
                                "name": "getApproved",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16800,
                                "src": "15065:11:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view returns (address)"
                                }
                              },
                              "id": 16999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15065:20:89",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "id": 17000,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16974,
                              "src": "15089:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "15065:31:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "15045:51:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 17004,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16989,
                              "src": "15117:5:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 17005,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16974,
                              "src": "15124:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 17003,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16852,
                            "src": "15100:16:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 17006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15100:32:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15045:87:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 17008,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "15044:89:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 16980,
                  "id": 17009,
                  "nodeType": "Return",
                  "src": "15037:96:89"
                }
              ]
            },
            "documentation": {
              "id": 16972,
              "nodeType": "StructuredDocumentation",
              "src": "14456:350:89",
              "text": " @dev Returns whether the given spender can transfer a given token ID.\n @param spender address of the spender to query\n @param tokenId uint256 ID of the token to be transferred\n @return bool whether the msg.sender is approved for the given token ID,\n is an operator of the owner, or is the owner of the token"
            },
            "id": 17011,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 16977,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16974,
                  "mutability": "mutable",
                  "name": "spender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17011,
                  "src": "14839:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14839:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16976,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17011,
                  "src": "14856:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16975,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14856:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14838:34:89"
            },
            "returnParameters": {
              "id": 16980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16979,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17011,
                  "src": "14896:4:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16978,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14896:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "14895:6:89"
            },
            "scope": 17396,
            "src": "14811:329:89",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17025,
              "nodeType": "Block",
              "src": "15734:43:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17020,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17014,
                        "src": "15754:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17021,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17016,
                        "src": "15758:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 17022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15767:2:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 17019,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        17026,
                        17055
                      ],
                      "referencedDeclaration": 17055,
                      "src": "15744:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 17023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15744:26:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17024,
                  "nodeType": "ExpressionStatement",
                  "src": "15744:26:89"
                }
              ]
            },
            "documentation": {
              "id": 17012,
              "nodeType": "StructuredDocumentation",
              "src": "15146:518:89",
              "text": " @dev Internal function to safely mint a new token.\n Reverts if the given token ID already exists.\n If the target address is a contract, it must implement `onERC721Received`,\n which is called upon a safe transfer, and return the magic value\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n the transfer is reverted.\n @param to The address that will own the minted token\n @param tokenId uint256 ID of the token to be minted"
            },
            "id": 17026,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17017,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17014,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17026,
                  "src": "15688:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15688:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17016,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17026,
                  "src": "15700:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17015,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15700:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15687:29:89"
            },
            "returnParameters": {
              "id": 17018,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15734:0:89"
            },
            "scope": 17396,
            "src": "15669:108:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17054,
              "nodeType": "Block",
              "src": "16463:162:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17037,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17029,
                        "src": "16479:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17038,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17031,
                        "src": "16483:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17036,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17114,
                      "src": "16473:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16473:18:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17040,
                  "nodeType": "ExpressionStatement",
                  "src": "16473:18:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "30",
                                "id": 17045,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16540:1:89",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 17044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16532:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 17043,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16532:7:89",
                                "typeDescriptions": {
                                  "typeIdentifier": null,
                                  "typeString": null
                                }
                              }
                            },
                            "id": 17046,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16532:10:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 17047,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17029,
                            "src": "16544:2:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 17048,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17031,
                            "src": "16548:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 17049,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17033,
                            "src": "16557:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 17042,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17362,
                          "src": "16509:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 17050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16509:54:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 17051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16565:52:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 17041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16501:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16501:117:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17053,
                  "nodeType": "ExpressionStatement",
                  "src": "16501:117:89"
                }
              ]
            },
            "documentation": {
              "id": 17027,
              "nodeType": "StructuredDocumentation",
              "src": "15783:590:89",
              "text": " @dev Internal function to safely mint a new token.\n Reverts if the given token ID already exists.\n If the target address is a contract, it must implement `onERC721Received`,\n which is called upon a safe transfer, and return the magic value\n `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n the transfer is reverted.\n @param to The address that will own the minted token\n @param tokenId uint256 ID of the token to be minted\n @param _data bytes data to send along with a safe transfer check"
            },
            "id": 17055,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17029,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17055,
                  "src": "16397:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17028,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16397:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17031,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17055,
                  "src": "16409:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16409:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17033,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17055,
                  "src": "16426:18:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17032,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16426:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16396:49:89"
            },
            "returnParameters": {
              "id": 17035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16463:0:89"
            },
            "scope": 17396,
            "src": "16378:247:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17113,
              "nodeType": "Block",
              "src": "16931:332:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 17064,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17058,
                          "src": "16949:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 17067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16963:1:89",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17066,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16955:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17065,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16955:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 17068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16955:10:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "16949:16:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 17070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16967:34:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 17063,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16941:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16941:61:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17072,
                  "nodeType": "ExpressionStatement",
                  "src": "16941:61:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "17020:17:89",
                        "subExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 17075,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17060,
                              "src": "17029:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 17074,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16971,
                            "src": "17021:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 17076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17021:16:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 17078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17039:30:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 17073,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17012:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17012:58:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17080,
                  "nodeType": "ExpressionStatement",
                  "src": "17012:58:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 17084,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17110:1:89",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 17083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17102:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 17082,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17102:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 17085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17102:10:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17086,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17058,
                        "src": "17114:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17087,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17060,
                        "src": "17118:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17081,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17395,
                      "src": "17081:20:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17081:45:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17089,
                  "nodeType": "ExpressionStatement",
                  "src": "17081:45:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17094,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17060,
                        "src": "17159:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 17090,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16494,
                          "src": "17137:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$20018_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 17092,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 17091,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17058,
                          "src": "17151:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17137:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$20018_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 17093,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20038,
                      "src": "17137:21:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$20018_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$20018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 17095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17137:30:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17096,
                  "nodeType": "ExpressionStatement",
                  "src": "17137:30:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17100,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17060,
                        "src": "17195:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17101,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17058,
                        "src": "17204:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17097,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16496,
                        "src": "17178:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 17099,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19572,
                      "src": "17178:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$19543_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$19543_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
                      }
                    },
                    "id": 17102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17178:29:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17103,
                  "nodeType": "ExpressionStatement",
                  "src": "17178:29:89"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 17107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17240:1:89",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 17106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17232:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 17105,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17232:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 17108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17232:10:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17109,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17058,
                        "src": "17244:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17110,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17060,
                        "src": "17248:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17104,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17502,
                      "src": "17223:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17223:33:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17112,
                  "nodeType": "EmitStatement",
                  "src": "17218:38:89"
                }
              ]
            },
            "documentation": {
              "id": 17056,
              "nodeType": "StructuredDocumentation",
              "src": "16631:234:89",
              "text": " @dev Internal function to mint a new token.\n Reverts if the given token ID already exists.\n @param to The address that will own the minted token\n @param tokenId uint256 ID of the token to be minted"
            },
            "id": 17114,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17058,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17114,
                  "src": "16885:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17057,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16885:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17060,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17114,
                  "src": "16897:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17059,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16897:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "16884:29:89"
            },
            "returnParameters": {
              "id": 17062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16931:0:89"
            },
            "scope": 17396,
            "src": "16870:393:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17181,
              "nodeType": "Block",
              "src": "17493:453:89",
              "statements": [
                {
                  "assignments": [
                    17121
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17121,
                      "mutability": "mutable",
                      "name": "owner",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 17181,
                      "src": "17503:13:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 17120,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "17503:7:89",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 17125,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17123,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17117,
                        "src": "17527:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17122,
                      "name": "ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16595,
                      "src": "17519:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 17124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17519:16:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17503:32:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17127,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17121,
                        "src": "17567:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 17130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17582:1:89",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 17129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17574:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 17128,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17574:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 17131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17574:10:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17132,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17117,
                        "src": "17586:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17126,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17395,
                      "src": "17546:20:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17546:48:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17134,
                  "nodeType": "ExpressionStatement",
                  "src": "17546:48:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 17138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17649:1:89",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 17137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17641:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 17136,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17641:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 17139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17641:10:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17140,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17117,
                        "src": "17653:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17135,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17384,
                      "src": "17632:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17632:29:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17142,
                  "nodeType": "ExpressionStatement",
                  "src": "17632:29:89"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 17151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 17145,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16514,
                              "src": "17717:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 17147,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 17146,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17117,
                              "src": "17728:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "17717:19:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 17144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17711:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 17143,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "17711:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 17148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17711:26:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 17149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "17711:33:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 17150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "17748:1:89",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "17711:38:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 17158,
                  "nodeType": "IfStatement",
                  "src": "17707:95:89",
                  "trueBody": {
                    "id": 17157,
                    "nodeType": "Block",
                    "src": "17751:51:89",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 17155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "17765:26:89",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 17152,
                              "name": "_tokenURIs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16514,
                              "src": "17772:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 17154,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 17153,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17117,
                              "src": "17783:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17772:19:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 17156,
                        "nodeType": "ExpressionStatement",
                        "src": "17765:26:89"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17163,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17117,
                        "src": "17840:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 17159,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16494,
                          "src": "17812:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$20018_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 17161,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 17160,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17121,
                          "src": "17826:5:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17812:20:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$20018_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 17162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20058,
                      "src": "17812:27:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$20018_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$20018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 17164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17812:36:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17165,
                  "nodeType": "ExpressionStatement",
                  "src": "17812:36:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17169,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17117,
                        "src": "17879:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17166,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16496,
                        "src": "17859:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 17168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19592,
                      "src": "17859:19:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$19543_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$19543_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 17170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17859:28:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17171,
                  "nodeType": "ExpressionStatement",
                  "src": "17859:28:89"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17173,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17121,
                        "src": "17912:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 17176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "17927:1:89",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 17175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17919:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 17174,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17919:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 17177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17919:10:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17178,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17117,
                        "src": "17931:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17172,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17502,
                      "src": "17903:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17903:36:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17180,
                  "nodeType": "EmitStatement",
                  "src": "17898:41:89"
                }
              ]
            },
            "documentation": {
              "id": 17115,
              "nodeType": "StructuredDocumentation",
              "src": "17269:170:89",
              "text": " @dev Internal function to burn a specific token.\n Reverts if the token does not exist.\n @param tokenId uint256 ID of the token being burned"
            },
            "id": 17182,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17118,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17117,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17182,
                  "src": "17459:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17459:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17458:17:89"
            },
            "returnParameters": {
              "id": 17119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17493:0:89"
            },
            "scope": 17396,
            "src": "17444:502:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17252,
              "nodeType": "Block",
              "src": "18402:480:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 17194,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17189,
                              "src": "18428:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 17193,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16595,
                            "src": "18420:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 17195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18420:16:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 17196,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17185,
                          "src": "18440:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "18420:24:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e",
                        "id": 17198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18446:43:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        },
                        "value": "ERC721: transfer of token that is not own"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950",
                          "typeString": "literal_string \"ERC721: transfer of token that is not own\""
                        }
                      ],
                      "id": 17192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18412:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18412:78:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17200,
                  "nodeType": "ExpressionStatement",
                  "src": "18412:78:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 17207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 17202,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17187,
                          "src": "18508:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 17205,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18522:1:89",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 17204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "18514:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 17203,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18514:7:89",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 17206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18514:10:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "18508:16:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 17208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18526:38:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 17201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "18500:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18500:65:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17210,
                  "nodeType": "ExpressionStatement",
                  "src": "18500:65:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17212,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17185,
                        "src": "18597:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17213,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17187,
                        "src": "18603:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17214,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17189,
                        "src": "18607:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17211,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17395,
                      "src": "18576:20:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18576:39:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17216,
                  "nodeType": "ExpressionStatement",
                  "src": "18576:39:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 17220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "18694:1:89",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 17219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18686:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 17218,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "18686:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 17221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18686:10:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17222,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17189,
                        "src": "18698:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17217,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17384,
                      "src": "18677:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 17223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18677:29:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17224,
                  "nodeType": "ExpressionStatement",
                  "src": "18677:29:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17229,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17189,
                        "src": "18744:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 17225,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16494,
                          "src": "18717:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$20018_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 17227,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 17226,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17185,
                          "src": "18731:4:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18717:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$20018_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 17228,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "remove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20058,
                      "src": "18717:26:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$20018_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$20018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 17230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18717:35:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17231,
                  "nodeType": "ExpressionStatement",
                  "src": "18717:35:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17236,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17189,
                        "src": "18784:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 17232,
                          "name": "_holderTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16494,
                          "src": "18762:13:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UintSet_$20018_storage_$",
                            "typeString": "mapping(address => struct EnumerableSet.UintSet storage ref)"
                          }
                        },
                        "id": 17234,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 17233,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17187,
                          "src": "18776:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "18762:17:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintSet_$20018_storage",
                          "typeString": "struct EnumerableSet.UintSet storage ref"
                        }
                      },
                      "id": 17235,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20038,
                      "src": "18762:21:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintSet_$20018_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$20018_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"
                      }
                    },
                    "id": 17237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18762:30:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17238,
                  "nodeType": "ExpressionStatement",
                  "src": "18762:30:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17242,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17189,
                        "src": "18820:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17243,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17187,
                        "src": "18829:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17239,
                        "name": "_tokenOwners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16496,
                        "src": "18803:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UintToAddressMap_$19543_storage",
                          "typeString": "struct EnumerableMap.UintToAddressMap storage ref"
                        }
                      },
                      "id": 17241,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "set",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19572,
                      "src": "18803:16:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_UintToAddressMap_$19543_storage_ptr_$_t_uint256_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_UintToAddressMap_$19543_storage_ptr_$",
                        "typeString": "function (struct EnumerableMap.UintToAddressMap storage pointer,uint256,address) returns (bool)"
                      }
                    },
                    "id": 17244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18803:29:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 17245,
                  "nodeType": "ExpressionStatement",
                  "src": "18803:29:89"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 17247,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17185,
                        "src": "18857:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17248,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17187,
                        "src": "18863:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17249,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17189,
                        "src": "18867:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17246,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17502,
                      "src": "18848:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18848:27:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17251,
                  "nodeType": "EmitStatement",
                  "src": "18843:32:89"
                }
              ]
            },
            "documentation": {
              "id": 17183,
              "nodeType": "StructuredDocumentation",
              "src": "17952:366:89",
              "text": " @dev Internal function to transfer ownership of a given token ID to another address.\n As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n @param from current owner of the token\n @param to address to receive the ownership of the given token ID\n @param tokenId uint256 ID of the token to be transferred"
            },
            "id": 17253,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17185,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17253,
                  "src": "18342:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18342:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17187,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17253,
                  "src": "18356:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18356:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17189,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17253,
                  "src": "18368:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18368:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "18341:43:89"
            },
            "returnParameters": {
              "id": 17191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18402:0:89"
            },
            "scope": 17396,
            "src": "18323:559:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17274,
              "nodeType": "Block",
              "src": "19296:131:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 17263,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17256,
                            "src": "19322:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 17262,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16971,
                          "src": "19314:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 17264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19314:16:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732314d657461646174613a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e",
                        "id": 17265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19332:46:89",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978",
                          "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""
                        },
                        "value": "ERC721Metadata: URI set of nonexistent token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94be4a260caaeac1b145f03ffa2e70bc612b64982d04f24073aaf3a5f9009978",
                          "typeString": "literal_string \"ERC721Metadata: URI set of nonexistent token\""
                        }
                      ],
                      "id": 17261,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19306:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 17266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19306:73:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17267,
                  "nodeType": "ExpressionStatement",
                  "src": "19306:73:89"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 17268,
                        "name": "_tokenURIs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16514,
                        "src": "19389:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 17270,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 17269,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17256,
                        "src": "19400:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19389:19:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17271,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17258,
                      "src": "19411:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "19389:31:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 17273,
                  "nodeType": "ExpressionStatement",
                  "src": "19389:31:89"
                }
              ]
            },
            "documentation": {
              "id": 17254,
              "nodeType": "StructuredDocumentation",
              "src": "18888:322:89",
              "text": " @dev Internal function to set the token URI for a given token.\n Reverts if the token ID does not exist.\n TIP: If all token IDs share a prefix (for example, if your URIs look like\n `https://api.myproject.com/token/<id>`), use {_setBaseURI} to store\n it and save gas."
            },
            "id": 17275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setTokenURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17259,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17256,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17275,
                  "src": "19237:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17255,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19237:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17258,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17275,
                  "src": "19254:23:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17257,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19254:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19236:42:89"
            },
            "returnParameters": {
              "id": 17260,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19296:0:89"
            },
            "scope": 17396,
            "src": "19215:212:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17285,
              "nodeType": "Block",
              "src": "19712:36:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 17281,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16516,
                      "src": "19722:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17282,
                      "name": "baseURI_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17278,
                      "src": "19733:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "19722:19:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 17284,
                  "nodeType": "ExpressionStatement",
                  "src": "19722:19:89"
                }
              ]
            },
            "documentation": {
              "id": 17276,
              "nodeType": "StructuredDocumentation",
              "src": "19433:212:89",
              "text": " @dev Internal function to set the base URI for all token IDs. It is\n automatically added as a prefix to the value returned in {tokenURI},\n or to the token ID if {tokenURI} is empty."
            },
            "id": 17286,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBaseURI",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17278,
                  "mutability": "mutable",
                  "name": "baseURI_",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17286,
                  "src": "19671:22:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 17277,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "19671:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19670:24:89"
            },
            "returnParameters": {
              "id": 17280,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19712:0:89"
            },
            "scope": 17396,
            "src": "19650:98:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 17361,
              "nodeType": "Block",
              "src": "20431:920:89",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 17303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "20445:16:89",
                    "subExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "id": 17300,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17291,
                          "src": "20446:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 17301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isContract",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 18983,
                        "src": "20446:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 17302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "20446:15:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 17307,
                  "nodeType": "IfStatement",
                  "src": "20441:58:89",
                  "trueBody": {
                    "id": 17306,
                    "nodeType": "Block",
                    "src": "20463:36:89",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 17304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "20484:4:89",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 17299,
                        "id": 17305,
                        "nodeType": "Return",
                        "src": "20477:11:89"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    17309,
                    17311
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 17309,
                      "mutability": "mutable",
                      "name": "success",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 17361,
                      "src": "20568:12:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 17308,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "20568:4:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 17311,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 17361,
                      "src": "20582:23:89",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 17310,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "20582:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 17328,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 17317,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 17291,
                                    "src": "20669:2:89",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 17316,
                                  "name": "IERC721Receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 17666,
                                  "src": "20653:15:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$17666_$",
                                    "typeString": "type(contract IERC721Receiver)"
                                  }
                                },
                                "id": 17318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "20653:19:89",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC721Receiver_$17666",
                                  "typeString": "contract IERC721Receiver"
                                }
                              },
                              "id": 17319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "onERC721Received",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17665,
                              "src": "20653:36:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                              }
                            },
                            "id": 17320,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20653:45:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 17321,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8173,
                              "src": "20712:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 17322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20712:12:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 17323,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17289,
                            "src": "20738:4:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 17324,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17293,
                            "src": "20756:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 17325,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17295,
                            "src": "20777:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 17314,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "20617:3:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 17315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "20617:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 17326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20617:175:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 17312,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17291,
                        "src": "20609:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 17313,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "20609:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 17327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20609:184:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20567:226:89"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 17330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "20807:8:89",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 17329,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17309,
                      "src": "20808:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 17359,
                    "nodeType": "Block",
                    "src": "21223:122:89",
                    "statements": [
                      {
                        "assignments": [
                          17345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 17345,
                            "mutability": "mutable",
                            "name": "retval",
                            "nodeType": "VariableDeclaration",
                            "overrides": null,
                            "scope": 17359,
                            "src": "21237:13:89",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "typeName": {
                              "id": 17344,
                              "name": "bytes4",
                              "nodeType": "ElementaryTypeName",
                              "src": "21237:6:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 17353,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 17348,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17311,
                              "src": "21264:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "components": [
                                {
                                  "argumentTypes": null,
                                  "id": 17350,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21277:6:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes4_$",
                                    "typeString": "type(bytes4)"
                                  },
                                  "typeName": {
                                    "id": 17349,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21277:6:89",
                                    "typeDescriptions": {
                                      "typeIdentifier": null,
                                      "typeString": null
                                    }
                                  }
                                }
                              ],
                              "id": 17351,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "21276:8:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_bytes4_$",
                                "typeString": "type(bytes4)"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "id": 17346,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "21253:3:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 17347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "21253:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 17352,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21253:32:89",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "21237:48:89"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "components": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 17356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 17354,
                                "name": "retval",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17345,
                                "src": "21307:6:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 17355,
                                "name": "_ERC721_RECEIVED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16490,
                                "src": "21317:16:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "21307:26:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "id": 17357,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "21306:28:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 17299,
                        "id": 17358,
                        "nodeType": "Return",
                        "src": "21299:35:89"
                      }
                    ]
                  },
                  "id": 17360,
                  "nodeType": "IfStatement",
                  "src": "20803:542:89",
                  "trueBody": {
                    "id": 17343,
                    "nodeType": "Block",
                    "src": "20817:400:89",
                    "statements": [
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 17334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 17331,
                              "name": "returndata",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 17311,
                              "src": "20835:10:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 17332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20835:17:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "argumentTypes": null,
                            "hexValue": "30",
                            "id": 17333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "20855:1:89",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "20835:21:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 17341,
                          "nodeType": "Block",
                          "src": "21114:93:89",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                    "id": 17338,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21139:52:89",
                                    "subdenomination": null,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                      "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                    },
                                    "value": "ERC721: transfer to non ERC721Receiver implementer"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                      "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                    }
                                  ],
                                  "id": 17337,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "21132:6:89",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 17339,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21132:60:89",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 17340,
                              "nodeType": "ExpressionStatement",
                              "src": "21132:60:89"
                            }
                          ]
                        },
                        "id": 17342,
                        "nodeType": "IfStatement",
                        "src": "20831:376:89",
                        "trueBody": {
                          "id": 17336,
                          "nodeType": "Block",
                          "src": "20858:250:89",
                          "statements": [
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "20949:145:89",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "20971:40:89",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "returndata",
                                          "nodeType": "YulIdentifier",
                                          "src": "21000:10:89"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "20994:5:89"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20994:17:89"
                                    },
                                    "variables": [
                                      {
                                        "name": "returndata_size",
                                        "nodeType": "YulTypedName",
                                        "src": "20975:15:89",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "21043:2:89",
                                              "type": "",
                                              "value": "32"
                                            },
                                            {
                                              "name": "returndata",
                                              "nodeType": "YulIdentifier",
                                              "src": "21047:10:89"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "21039:3:89"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "21039:19:89"
                                        },
                                        {
                                          "name": "returndata_size",
                                          "nodeType": "YulIdentifier",
                                          "src": "21060:15:89"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "21032:6:89"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "21032:44:89"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "21032:44:89"
                                  }
                                ]
                              },
                              "evmVersion": "istanbul",
                              "externalReferences": [
                                {
                                  "declaration": 17311,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "21000:10:89",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 17311,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "21047:10:89",
                                  "valueSize": 1
                                }
                              ],
                              "id": 17335,
                              "nodeType": "InlineAssembly",
                              "src": "20940:154:89"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 17287,
              "nodeType": "StructuredDocumentation",
              "src": "19754:542:89",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 17362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17296,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17289,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17362,
                  "src": "20333:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20333:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17291,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17362,
                  "src": "20347:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20347:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17293,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17362,
                  "src": "20359:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20359:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17295,
                  "mutability": "mutable",
                  "name": "_data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17362,
                  "src": "20376:18:89",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 17294,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20376:5:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20332:63:89"
            },
            "returnParameters": {
              "id": 17299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17298,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17362,
                  "src": "20421:4:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 17297,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20421:4:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20420:6:89"
            },
            "scope": 17396,
            "src": "20301:1050:89",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 17383,
              "nodeType": "Block",
              "src": "21412:100:89",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 17373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 17369,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16500,
                        "src": "21422:15:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 17371,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 17370,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17366,
                        "src": "21438:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "21422:24:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 17372,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17364,
                      "src": "21449:2:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "21422:29:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17374,
                  "nodeType": "ExpressionStatement",
                  "src": "21422:29:89"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 17377,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 17366,
                            "src": "21483:7:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 17376,
                          "name": "ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16595,
                          "src": "21475:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 17378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "21475:16:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17379,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17364,
                        "src": "21493:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 17380,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17366,
                        "src": "21497:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 17375,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17510,
                      "src": "21466:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 17381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21466:39:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 17382,
                  "nodeType": "EmitStatement",
                  "src": "21461:44:89"
                }
              ]
            },
            "documentation": null,
            "id": 17384,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17367,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17364,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17384,
                  "src": "21375:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17363,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21375:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17366,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17384,
                  "src": "21387:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17365,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21387:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21374:29:89"
            },
            "returnParameters": {
              "id": 17368,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21412:0:89"
            },
            "scope": 17396,
            "src": "21357:155:89",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 17394,
              "nodeType": "Block",
              "src": "22158:3:89",
              "statements": []
            },
            "documentation": {
              "id": 17385,
              "nodeType": "StructuredDocumentation",
              "src": "21518:545:89",
              "text": " @dev Hook that is called before any token transfer. This includes minting\n and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n transferred to `to`.\n - when `from` is zero, `tokenId` will be minted for `to`.\n - when `to` is zero, ``from``'s `tokenId` will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 17395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 17392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 17387,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17395,
                  "src": "22098:12:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22098:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17389,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17395,
                  "src": "22112:10:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17388,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22112:7:89",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 17391,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 17395,
                  "src": "22124:15:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 17390,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22124:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22097:43:89"
            },
            "returnParameters": {
              "id": 17393,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22158:0:89"
            },
            "scope": 17396,
            "src": "22068:93:89",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 17397,
        "src": "528:21635:89"
      }
    ],
    "src": "0:22164:89"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001c6d38038062001c6d833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250620001b391506301ffc9a760e01b90506200021d565b8151620001c8906006906020850190620002a2565b508051620001de906007906020840190620002a2565b50620001f16380ac58cd60e01b6200021d565b62000203635b5e139f60e01b6200021d565b6200021563780e9d6360e01b6200021d565b50506200033e565b6001600160e01b031980821614156200027d576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620002e557805160ff191683800117855562000315565b8280016001018555821562000315579182015b8281111562000315578251825591602001919060010190620002f8565b506200032392915062000327565b5090565b5b8082111562000323576000815560010162000328565b61191f806200034e6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610349578063a22cb46514610351578063b88d4fde1461037f578063c87b56dd14610445578063e985e9c5146104625761010b565b80634f6ccce7146102e15780636352211e146102fe5780636c0360eb1461031b57806370a08231146103235761010b565b806318160ddd116100de57806318160ddd1461022f57806323b872dd146102495780632f745c591461027f57806342842e0e146102ab5761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b031916610490565b604080519115158252519081900360200190f35b6101536104b3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b5035610549565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b0381351690602001356105ab565b005b610237610686565b60408051918252519081900360200190f35b61022d6004803603606081101561025f57600080fd5b506001600160a01b03813581169160208101359091169060400135610697565b6102376004803603604081101561029557600080fd5b506001600160a01b0381351690602001356106ee565b61022d600480360360608110156102c157600080fd5b506001600160a01b03813581169160208101359091169060400135610719565b610237600480360360208110156102f757600080fd5b5035610734565b6101e56004803603602081101561031457600080fd5b503561074a565b610153610772565b6102376004803603602081101561033957600080fd5b50356001600160a01b03166107d3565b61015361083b565b61022d6004803603604081101561036757600080fd5b506001600160a01b038135169060200135151561089c565b61022d6004803603608081101561039557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109a1945050505050565b6101536004803603602081101561045b57600080fd5b50356109ff565b6101376004803603604081101561047857600080fd5b506001600160a01b0381358116916020013516610ca6565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b5050505050905090565b600061055482610cd4565b61058f5760405162461bcd60e51b815260040180806020018281038252602c815260200180611814602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105b68261074a565b9050806001600160a01b0316836001600160a01b031614156106095760405162461bcd60e51b81526004018080602001828103825260218152602001806118986021913960400191505060405180910390fd5b806001600160a01b031661061b610ce1565b6001600160a01b0316148061063c575061063c81610637610ce1565b610ca6565b6106775760405162461bcd60e51b81526004018080602001828103825260388152602001806117676038913960400191505060405180910390fd5b6106818383610ce5565b505050565b60006106926002610d53565b905090565b6106a86106a2610ce1565b82610d5e565b6106e35760405162461bcd60e51b81526004018080602001828103825260318152602001806118b96031913960400191505060405180910390fd5b610681838383610e02565b6001600160a01b03821660009081526001602052604081206107109083610f4e565b90505b92915050565b610681838383604051806020016040528060008152506109a1565b600080610742600284610f5a565b509392505050565b6000610713826040518060600160405280602981526020016117c96029913960029190610f76565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b60006001600160a01b03821661081a5760405162461bcd60e51b815260040180806020018281038252602a81526020018061179f602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061071390610d53565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b6108a4610ce1565b6001600160a01b0316826001600160a01b0316141561090a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610917610ce1565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561095b610ce1565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6109b26109ac610ce1565b83610d5e565b6109ed5760405162461bcd60e51b81526004018080602001828103825260318152602001806118b96031913960400191505060405180910390fd5b6109f984848484610f8d565b50505050565b6060610a0a82610cd4565b610a455760405162461bcd60e51b815260040180806020018281038252602f815260200180611869602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610ada5780601f10610aaf57610100808354040283529160200191610ada565b820191906000526020600020905b815481529060010190602001808311610abd57829003601f168201915b505060095493945050505060026000196101006001841615020190911604610b035790506104ae565b805115610bd4576009816040516020018083805460018160011615610100020316600290048015610b6b5780601f10610b49576101008083540402835291820191610b6b565b820191906000526020600020905b815481529060010190602001808311610b57575b5050825160208401908083835b60208310610b975780518252601f199092019160209182019101610b78565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104ae565b6009610bdf84610fdf565b6040516020018083805460018160011615610100020316600290048015610c3d5780601f10610c1b576101008083540402835291820191610c3d565b820191906000526020600020905b815481529060010190602001808311610c29575b5050825160208401908083835b60208310610c695780518252601f199092019160209182019101610c4a565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006107136002836110ba565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d1a8261074a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610713826110c6565b6000610d6982610cd4565b610da45760405162461bcd60e51b815260040180806020018281038252602c81526020018061173b602c913960400191505060405180910390fd5b6000610daf8361074a565b9050806001600160a01b0316846001600160a01b03161480610dea5750836001600160a01b0316610ddf84610549565b6001600160a01b0316145b80610dfa5750610dfa8185610ca6565b949350505050565b826001600160a01b0316610e158261074a565b6001600160a01b031614610e5a5760405162461bcd60e51b81526004018080602001828103825260298152602001806118406029913960400191505060405180910390fd5b6001600160a01b038216610e9f5760405162461bcd60e51b81526004018080602001828103825260248152602001806117176024913960400191505060405180910390fd5b610eaa838383610681565b610eb5600082610ce5565b6001600160a01b0383166000908152600160205260409020610ed790826110ca565b506001600160a01b0382166000908152600160205260409020610efa90826110d6565b50610f07600282846110e2565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061071083836110f8565b6000808080610f69868661115c565b9097909650945050505050565b6000610f838484846111d7565b90505b9392505050565b610f98848484610e02565b610fa4848484846112a1565b6109f95760405162461bcd60e51b81526004018080602001828103825260328152602001806116e56032913960400191505060405180910390fd5b60608161100457506040805180820190915260018152600360fc1b60208201526104ae565b8160005b811561101c57600101600a82049150611008565b60608167ffffffffffffffff8111801561103557600080fd5b506040519080825280601f01601f191660200182016040528015611060576020820181803683370190505b50859350905060001982015b83156110b157600a840660300160f81b8282806001900393508151811061108f57fe5b60200101906001600160f81b031916908160001a905350600a8404935061106c565b50949350505050565b600061071083836114ca565b5490565b600061071083836114e2565b600061071083836115a8565b6000610f8384846001600160a01b0385166115f2565b8154600090821061113a5760405162461bcd60e51b81526004018080602001828103825260228152602001806116c36022913960400191505060405180910390fd5b82600001828154811061114957fe5b9060005260206000200154905092915050565b8154600090819083106111a05760405162461bcd60e51b81526004018080602001828103825260228152602001806117f26022913960400191505060405180910390fd5b60008460000184815481106111b157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816112725760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561123757818101518382015260200161121f565b50505050905090810190601f1680156112645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061128557fe5b9060005260206000209060020201600101549150509392505050565b60006112b5846001600160a01b0316611689565b6112c157506001610dfa565b600060606001600160a01b038616630a85bd0160e11b6112df610ce1565b89888860405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561134657818101518382015260200161132e565b50505050905090810190601f1680156113735780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106113db5780518252601f1990920191602091820191016113bc565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461143d576040519150601f19603f3d011682016040523d82523d6000602084013e611442565b606091505b5091509150816114935780511561145c5780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806116e56032913960400191505060405180910390fd5b60008180602001905160208110156114aa57600080fd5b50516001600160e01b031916630a85bd0160e11b149350610dfa92505050565b60009081526001919091016020526040902054151590565b6000818152600183016020526040812054801561159e578354600019808301919081019060009087908390811061151557fe5b906000526020600020015490508087600001848154811061153257fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061156257fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610713565b6000915050610713565b60006115b483836114ca565b6115ea57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610713565b506000610713565b600082815260018401602052604081205480611657575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610f86565b8285600001600183038154811061166a57fe5b9060005260206000209060020201600101819055506000915050610f86565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610dfa57505015159291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220ba5033c735dd68b16f42b28d6a0d74f5343511fcef5aa4c0b771732a4ac7816e64736f6c634300060c0033",
  "bytecodeSha1": "f348206495a63f255c43506806dae44f159576fe",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "10": {},
      "101": {},
      "105": {
        "EnumerableMap._at": {
          "101": [
            5004,
            5031,
            true
          ]
        },
        "EnumerableMap._get": {
          "102": [
            5749,
            5762,
            true
          ]
        },
        "EnumerableMap._set": {
          "103": [
            2036,
            2049,
            false
          ]
        }
      },
      "106": {
        "EnumerableSet._add": {
          "106": [
            1662,
            1683,
            false
          ]
        },
        "EnumerableSet._at": {
          "104": [
            4484,
            4510,
            true
          ]
        },
        "EnumerableSet._remove": {
          "105": [
            2387,
            2402,
            false
          ]
        }
      },
      "110": {
        "Strings.toString": {
          "107": [
            442,
            452,
            false
          ]
        }
      },
      "21": {},
      "24": {},
      "28": {},
      "89": {
        "ERC721._checkOnERC721Received": {
          "98": [
            20446,
            20461,
            false
          ],
          "99": [
            20808,
            20815,
            false
          ],
          "100": [
            20835,
            20856,
            false
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "94": [
            14920,
            14936,
            true
          ]
        },
        "ERC721._safeTransfer": {
          "97": [
            14028,
            14076,
            true
          ]
        },
        "ERC721._transfer": {
          "95": [
            18420,
            18444,
            true
          ],
          "96": [
            18508,
            18524,
            true
          ]
        },
        "ERC721.approve": {
          "85": [
            8814,
            8825,
            true
          ],
          "86": [
            8882,
            8903,
            true
          ],
          "87": [
            8907,
            8944,
            true
          ]
        },
        "ERC721.balanceOf": {
          "89": [
            4079,
            4098,
            true
          ]
        },
        "ERC721.getApproved": {
          "84": [
            9445,
            9461,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "91": [
            13013,
            13054,
            true
          ]
        },
        "ERC721.setApprovalForAll": {
          "90": [
            9960,
            9984,
            true
          ]
        },
        "ERC721.tokenURI": {
          "92": [
            5924,
            5940,
            true
          ],
          "93": [
            6293,
            6320,
            false
          ]
        },
        "ERC721.transferFrom": {
          "88": [
            11220,
            11261,
            true
          ]
        }
      },
      "93": {},
      "94": {},
      "95": {},
      "96": {}
    },
    "statements": {
      "10": {
        "Context._msgSender": {
          "28": [
            815,
            832
          ]
        }
      },
      "101": {
        "Address.isContract": {
          "83": [
            1237,
            1288
          ]
        }
      },
      "105": {
        "EnumerableMap._at": {
          "60": [
            4996,
            5070
          ],
          "61": [
            5135,
            5168
          ]
        },
        "EnumerableMap._contains": {
          "67": [
            4324,
            4353
          ]
        },
        "EnumerableMap._get": {
          "62": [
            5741,
            5777
          ],
          "63": [
            5823,
            5863
          ]
        },
        "EnumerableMap._length": {
          "54": [
            4525,
            4551
          ]
        },
        "EnumerableMap._set": {
          "78": [
            2102,
            2159
          ],
          "79": [
            2294,
            2333
          ],
          "80": [
            2347,
            2358
          ],
          "81": [
            2389,
            2430
          ],
          "82": [
            2444,
            2456
          ]
        },
        "EnumerableMap.contains": {
          "53": [
            6858,
            6900
          ]
        },
        "EnumerableMap.get": {
          "43": [
            8208,
            8277
          ]
        },
        "EnumerableMap.length": {
          "31": [
            7078,
            7104
          ]
        },
        "EnumerableMap.set": {
          "57": [
            6311,
            6373
          ]
        }
      },
      "106": {
        "EnumerableSet._add": {
          "74": [
            1699,
            1722
          ],
          "75": [
            1857,
            1897
          ],
          "76": [
            1911,
            1922
          ],
          "77": [
            1953,
            1965
          ]
        },
        "EnumerableSet._at": {
          "58": [
            4476,
            4549
          ],
          "59": [
            4559,
            4584
          ]
        },
        "EnumerableSet._remove": {
          "68": [
            3212,
            3250
          ],
          "69": [
            3316,
            3359
          ],
          "70": [
            3465,
            3482
          ],
          "71": [
            3550,
            3576
          ],
          "72": [
            3591,
            3602
          ],
          "73": [
            3633,
            3645
          ]
        },
        "EnumerableSet.add": {
          "56": [
            6517,
            6556
          ]
        },
        "EnumerableSet.at": {
          "42": [
            7706,
            7744
          ]
        },
        "EnumerableSet.remove": {
          "55": [
            6817,
            6859
          ]
        }
      },
      "110": {
        "Strings.toString": {
          "46": [
            468,
            478
          ],
          "47": [
            584,
            592
          ],
          "48": [
            606,
            616
          ],
          "49": [
            721,
            733
          ],
          "50": [
            775,
            820
          ],
          "51": [
            834,
            844
          ],
          "52": [
            864,
            885
          ]
        }
      },
      "21": {
        "ERC165.supportsInterface": {
          "0": [
            1008,
            1048
          ]
        }
      },
      "24": {},
      "28": {},
      "89": {
        "ERC721._approve": {
          "29": [
            21422,
            21451
          ],
          "30": [
            21461,
            21505
          ]
        },
        "ERC721._checkOnERC721Received": {
          "64": [
            20477,
            20488
          ],
          "65": [
            21132,
            21192
          ],
          "66": [
            21299,
            21334
          ]
        },
        "ERC721._exists": {
          "27": [
            14406,
            14443
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "32": [
            14912,
            14985
          ],
          "33": [
            15037,
            15133
          ]
        },
        "ERC721._safeTransfer": {
          "44": [
            13982,
            14010
          ],
          "45": [
            14020,
            14131
          ]
        },
        "ERC721._transfer": {
          "34": [
            18412,
            18490
          ],
          "35": [
            18500,
            18565
          ],
          "36": [
            18576,
            18615
          ],
          "37": [
            18677,
            18706
          ],
          "38": [
            18717,
            18752
          ],
          "39": [
            18762,
            18792
          ],
          "40": [
            18803,
            18832
          ],
          "41": [
            18843,
            18875
          ]
        },
        "ERC721.approve": {
          "4": [
            8806,
            8863
          ],
          "5": [
            8874,
            9026
          ],
          "6": [
            9037,
            9058
          ]
        },
        "ERC721.balanceOf": {
          "14": [
            4071,
            4145
          ],
          "15": [
            4156,
            4192
          ]
        },
        "ERC721.baseURI": {
          "13": [
            6863,
            6878
          ]
        },
        "ERC721.getApproved": {
          "2": [
            9437,
            9510
          ],
          "3": [
            9521,
            9552
          ]
        },
        "ERC721.isApprovedForAll": {
          "26": [
            10575,
            10617
          ]
        },
        "ERC721.name": {
          "1": [
            4761,
            4773
          ]
        },
        "ERC721.ownerOf": {
          "12": [
            4501,
            4578
          ]
        },
        "ERC721.safeTransferFrom": {
          "11": [
            12113,
            12152
          ],
          "20": [
            13005,
            13108
          ],
          "21": [
            13118,
            13157
          ]
        },
        "ERC721.setApprovalForAll": {
          "17": [
            9952,
            10014
          ],
          "18": [
            10025,
            10078
          ],
          "19": [
            10088,
            10141
          ]
        },
        "ERC721.symbol": {
          "16": [
            4962,
            4976
          ]
        },
        "ERC721.tokenOfOwnerByIndex": {
          "10": [
            7367,
            7404
          ]
        },
        "ERC721.tokenURI": {
          "22": [
            5916,
            5992
          ],
          "23": [
            6164,
            6180
          ],
          "24": [
            6336,
            6388
          ],
          "25": [
            6498,
            6559
          ]
        },
        "ERC721.totalSupply": {
          "7": [
            7729,
            7757
          ]
        },
        "ERC721.transferFrom": {
          "8": [
            11212,
            11315
          ],
          "9": [
            11326,
            11354
          ]
        }
      },
      "93": {},
      "94": {},
      "95": {},
      "96": {}
    }
  },
  "dependencies": [
    "Address",
    "Context",
    "ERC165",
    "EnumerableMap",
    "EnumerableSet",
    "IERC165",
    "IERC721",
    "IERC721Enumerable",
    "IERC721Metadata",
    "IERC721Receiver",
    "SafeMath",
    "Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061010b5760003560e01c80634f6ccce7116100a257806395d89b411161007157806395d89b4114610349578063a22cb46514610351578063b88d4fde1461037f578063c87b56dd14610445578063e985e9c5146104625761010b565b80634f6ccce7146102e15780636352211e146102fe5780636c0360eb1461031b57806370a08231146103235761010b565b806318160ddd116100de57806318160ddd1461022f57806323b872dd146102495780632f745c591461027f57806342842e0e146102ab5761010b565b806301ffc9a71461011057806306fdde031461014b578063081812fc146101c8578063095ea7b314610201575b600080fd5b6101376004803603602081101561012657600080fd5b50356001600160e01b031916610490565b604080519115158252519081900360200190f35b6101536104b3565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561018d578181015183820152602001610175565b50505050905090810190601f1680156101ba5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101e5600480360360208110156101de57600080fd5b5035610549565b604080516001600160a01b039092168252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b0381351690602001356105ab565b005b610237610686565b60408051918252519081900360200190f35b61022d6004803603606081101561025f57600080fd5b506001600160a01b03813581169160208101359091169060400135610697565b6102376004803603604081101561029557600080fd5b506001600160a01b0381351690602001356106ee565b61022d600480360360608110156102c157600080fd5b506001600160a01b03813581169160208101359091169060400135610719565b610237600480360360208110156102f757600080fd5b5035610734565b6101e56004803603602081101561031457600080fd5b503561074a565b610153610772565b6102376004803603602081101561033957600080fd5b50356001600160a01b03166107d3565b61015361083b565b61022d6004803603604081101561036757600080fd5b506001600160a01b038135169060200135151561089c565b61022d6004803603608081101561039557600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103d057600080fd5b8201836020820111156103e257600080fd5b8035906020019184600183028401116401000000008311171561040457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506109a1945050505050565b6101536004803603602081101561045b57600080fd5b50356109ff565b6101376004803603604081101561047857600080fd5b506001600160a01b0381358116916020013516610ca6565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b5050505050905090565b600061055482610cd4565b61058f5760405162461bcd60e51b815260040180806020018281038252602c815260200180611814602c913960400191505060405180910390fd5b506000908152600460205260409020546001600160a01b031690565b60006105b68261074a565b9050806001600160a01b0316836001600160a01b031614156106095760405162461bcd60e51b81526004018080602001828103825260218152602001806118986021913960400191505060405180910390fd5b806001600160a01b031661061b610ce1565b6001600160a01b0316148061063c575061063c81610637610ce1565b610ca6565b6106775760405162461bcd60e51b81526004018080602001828103825260388152602001806117676038913960400191505060405180910390fd5b6106818383610ce5565b505050565b60006106926002610d53565b905090565b6106a86106a2610ce1565b82610d5e565b6106e35760405162461bcd60e51b81526004018080602001828103825260318152602001806118b96031913960400191505060405180910390fd5b610681838383610e02565b6001600160a01b03821660009081526001602052604081206107109083610f4e565b90505b92915050565b610681838383604051806020016040528060008152506109a1565b600080610742600284610f5a565b509392505050565b6000610713826040518060600160405280602981526020016117c96029913960029190610f76565b60098054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b60006001600160a01b03821661081a5760405162461bcd60e51b815260040180806020018281038252602a81526020018061179f602a913960400191505060405180910390fd5b6001600160a01b038216600090815260016020526040902061071390610d53565b60078054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561053f5780601f106105145761010080835404028352916020019161053f565b6108a4610ce1565b6001600160a01b0316826001600160a01b0316141561090a576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060056000610917610ce1565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff19169215159290921790915561095b610ce1565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b6109b26109ac610ce1565b83610d5e565b6109ed5760405162461bcd60e51b81526004018080602001828103825260318152602001806118b96031913960400191505060405180910390fd5b6109f984848484610f8d565b50505050565b6060610a0a82610cd4565b610a455760405162461bcd60e51b815260040180806020018281038252602f815260200180611869602f913960400191505060405180910390fd5b60008281526008602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610ada5780601f10610aaf57610100808354040283529160200191610ada565b820191906000526020600020905b815481529060010190602001808311610abd57829003601f168201915b505060095493945050505060026000196101006001841615020190911604610b035790506104ae565b805115610bd4576009816040516020018083805460018160011615610100020316600290048015610b6b5780601f10610b49576101008083540402835291820191610b6b565b820191906000526020600020905b815481529060010190602001808311610b57575b5050825160208401908083835b60208310610b975780518252601f199092019160209182019101610b78565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104ae565b6009610bdf84610fdf565b6040516020018083805460018160011615610100020316600290048015610c3d5780601f10610c1b576101008083540402835291820191610c3d565b820191906000526020600020905b815481529060010190602001808311610c29575b5050825160208401908083835b60208310610c695780518252601f199092019160209182019101610c4a565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006107136002836110ba565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d1a8261074a565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610713826110c6565b6000610d6982610cd4565b610da45760405162461bcd60e51b815260040180806020018281038252602c81526020018061173b602c913960400191505060405180910390fd5b6000610daf8361074a565b9050806001600160a01b0316846001600160a01b03161480610dea5750836001600160a01b0316610ddf84610549565b6001600160a01b0316145b80610dfa5750610dfa8185610ca6565b949350505050565b826001600160a01b0316610e158261074a565b6001600160a01b031614610e5a5760405162461bcd60e51b81526004018080602001828103825260298152602001806118406029913960400191505060405180910390fd5b6001600160a01b038216610e9f5760405162461bcd60e51b81526004018080602001828103825260248152602001806117176024913960400191505060405180910390fd5b610eaa838383610681565b610eb5600082610ce5565b6001600160a01b0383166000908152600160205260409020610ed790826110ca565b506001600160a01b0382166000908152600160205260409020610efa90826110d6565b50610f07600282846110e2565b5080826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b600061071083836110f8565b6000808080610f69868661115c565b9097909650945050505050565b6000610f838484846111d7565b90505b9392505050565b610f98848484610e02565b610fa4848484846112a1565b6109f95760405162461bcd60e51b81526004018080602001828103825260328152602001806116e56032913960400191505060405180910390fd5b60608161100457506040805180820190915260018152600360fc1b60208201526104ae565b8160005b811561101c57600101600a82049150611008565b60608167ffffffffffffffff8111801561103557600080fd5b506040519080825280601f01601f191660200182016040528015611060576020820181803683370190505b50859350905060001982015b83156110b157600a840660300160f81b8282806001900393508151811061108f57fe5b60200101906001600160f81b031916908160001a905350600a8404935061106c565b50949350505050565b600061071083836114ca565b5490565b600061071083836114e2565b600061071083836115a8565b6000610f8384846001600160a01b0385166115f2565b8154600090821061113a5760405162461bcd60e51b81526004018080602001828103825260228152602001806116c36022913960400191505060405180910390fd5b82600001828154811061114957fe5b9060005260206000200154905092915050565b8154600090819083106111a05760405162461bcd60e51b81526004018080602001828103825260228152602001806117f26022913960400191505060405180910390fd5b60008460000184815481106111b157fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b600082815260018401602052604081205482816112725760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561123757818101518382015260200161121f565b50505050905090810190601f1680156112645780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5084600001600182038154811061128557fe5b9060005260206000209060020201600101549150509392505050565b60006112b5846001600160a01b0316611689565b6112c157506001610dfa565b600060606001600160a01b038616630a85bd0160e11b6112df610ce1565b89888860405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b8381101561134657818101518382015260200161132e565b50505050905090810190601f1680156113735780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106113db5780518252601f1990920191602091820191016113bc565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461143d576040519150601f19603f3d011682016040523d82523d6000602084013e611442565b606091505b5091509150816114935780511561145c5780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806116e56032913960400191505060405180910390fd5b60008180602001905160208110156114aa57600080fd5b50516001600160e01b031916630a85bd0160e11b149350610dfa92505050565b60009081526001919091016020526040902054151590565b6000818152600183016020526040812054801561159e578354600019808301919081019060009087908390811061151557fe5b906000526020600020015490508087600001848154811061153257fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061156257fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610713565b6000915050610713565b60006115b483836114ca565b6115ea57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610713565b506000610713565b600082815260018401602052604081205480611657575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055610f86565b8285600001600183038154811061166a57fe5b9060005260206000209060020201600101819055506000915050610f86565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610dfa57505015159291505056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220ba5033c735dd68b16f42b28d6a0d74f5343511fcef5aa4c0b771732a4ac7816e64736f6c634300060c0033",
  "deployedSourceMap": "528:21635:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:140:21;;;;;;;;;;;;;;;;-1:-1:-1;915:140:21;-1:-1:-1;;;;;;915:140:21;;:::i;:::-;;;;;;;;;;;;;;;;;;4690:90:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9350:209;;;;;;;;;;;;;;;;-1:-1:-1;9350:209:89;;:::i;:::-;;;;-1:-1:-1;;;;;9350:209:89;;;;;;;;;;;;;;8684:381;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8684:381:89;;;;;;;;:::i;:::-;;7564:200;;;:::i;:::-;;;;;;;;;;;;;;;;11061:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11061:300:89;;;;;;;;;;;;;;;;;:::i;7259:152::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7259:152:89;;;;;;;;:::i;12010:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;12010:149:89;;;;;;;;;;;;;;;;;:::i;8102:161::-;;;;;;;;;;;;;;;;-1:-1:-1;8102:161:89;;:::i;4418:167::-;;;;;;;;;;;;;;;;-1:-1:-1;4418:167:89;;:::i;6798:87::-;;;:::i;3988:211::-;;;;;;;;;;;;;;;;-1:-1:-1;3988:211:89;-1:-1:-1;;;;;3988:211:89;;:::i;4889:94::-;;;:::i;9858:290::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;9858:290:89;;;;;;;;;;:::i;12882:282::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;12882:282:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12882:282:89;;-1:-1:-1;12882:282:89;;-1:-1:-1;;;;;12882:282:89:i;5826:740::-;;;;;;;;;;;;;;;;-1:-1:-1;5826:740:89;;:::i;10470:154::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10470:154:89;;;;;;;;;;:::i;915:140:21:-;-1:-1:-1;;;;;;1015:33:21;;992:4;1015:33;;;;;;;;;;;;;915:140;;;;:::o;4690:90:89:-;4768:5;4761:12;;;;;;;;-1:-1:-1;;4761:12:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4736:13;;4761:12;;4768:5;;4761:12;;4768:5;4761:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4690:90;:::o;9350:209::-;9418:7;9445:16;9453:7;9445;:16::i;:::-;9437:73;;;;-1:-1:-1;;;9437:73:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9528:24:89;;;;:15;:24;;;;;;-1:-1:-1;;;;;9528:24:89;;9350:209::o;8684:381::-;8764:13;8780:16;8788:7;8780;:16::i;:::-;8764:32;;8820:5;-1:-1:-1;;;;;8814:11:89;:2;-1:-1:-1;;;;;8814:11:89;;;8806:57;;;;-1:-1:-1;;;8806:57:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8898:5;-1:-1:-1;;;;;8882:21:89;:12;:10;:12::i;:::-;-1:-1:-1;;;;;8882:21:89;;:62;;;;8907:37;8924:5;8931:12;:10;:12::i;:::-;8907:16;:37::i;:::-;8874:152;;;;-1:-1:-1;;;8874:152:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9037:21;9046:2;9050:7;9037:8;:21::i;:::-;8684:381;;;:::o;7564:200::-;7617:7;7736:21;:12;:19;:21::i;:::-;7729:28;;7564:200;:::o;11061:300::-;11220:41;11239:12;:10;:12::i;:::-;11253:7;11220:18;:41::i;:::-;11212:103;;;;-1:-1:-1;;;11212:103:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11326:28;11336:4;11342:2;11346:7;11326:9;:28::i;7259:152::-;-1:-1:-1;;;;;7374:20:89;;7348:7;7374:20;;;:13;:20;;;;;:30;;7398:5;7374:23;:30::i;:::-;7367:37;;7259:152;;;;;:::o;12010:149::-;12113:39;12130:4;12136:2;12140:7;12113:39;;;;;;;;;;;;:16;:39::i;8102:161::-;8169:7;;8210:22;:12;8226:5;8210:15;:22::i;:::-;-1:-1:-1;8188:44:89;8102:161;-1:-1:-1;;;8102:161:89:o;4418:167::-;4482:7;4508:70;4525:7;4508:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;6798:87::-;6870:8;6863:15;;;;;;;;-1:-1:-1;;6863:15:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6838:13;;6863:15;;6870:8;;6863:15;;6870:8;6863:15;;;;;;;;;;;;;;;;;;;;;;;;3988:211;4052:7;-1:-1:-1;;;;;4079:19:89;;4071:74;;;;-1:-1:-1;;;4071:74:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4163:20:89;;;;;;:13;:20;;;;;:29;;:27;:29::i;4889:94::-;4969:7;4962:14;;;;;;;;-1:-1:-1;;4962:14:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4937:13;;4962:14;;4969:7;;4962:14;;4969:7;4962:14;;;;;;;;;;;;;;;;;;;;;;;;9858:290;9972:12;:10;:12::i;:::-;-1:-1:-1;;;;;9960:24:89;:8;-1:-1:-1;;;;;9960:24:89;;;9952:62;;;;;-1:-1:-1;;;9952:62:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;10070:8;10025:18;:32;10044:12;:10;:12::i;:::-;-1:-1:-1;;;;;10025:32:89;;;;;;;;;;;;;;;;;-1:-1:-1;10025:32:89;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;10025:53:89;;;;;;;;;;;10108:12;:10;:12::i;:::-;-1:-1:-1;;;;;10093:48:89;;10132:8;10093:48;;;;;;;;;;;;;;;;;;;;9858:290;;:::o;12882:282::-;13013:41;13032:12;:10;:12::i;:::-;13046:7;13013:18;:41::i;:::-;13005:103;;;;-1:-1:-1;;;13005:103:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13118:39;13132:4;13138:2;13142:7;13151:5;13118:13;:39::i;:::-;12882:282;;;;:::o;5826:740::-;5891:13;5924:16;5932:7;5924;:16::i;:::-;5916:76;;;;-1:-1:-1;;;5916:76:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6029:19;;;;:10;:19;;;;;;;;;6003:45;;;;;;-1:-1:-1;;6003:45:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;6029:19;6003:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6127:8:89;6121:22;6003:45;;-1:-1:-1;;;;6121:22:89;-1:-1:-1;;6121:22:89;;;;;;;;;;;6117:74;;6171:9;-1:-1:-1;6164:16:89;;6117:74;6293:23;;:27;6289:110;;6367:8;6377:9;6350:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6350:37:89;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6350:37:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6336:52;;;;;6289:110;6529:8;6539:18;:7;:16;:18::i;:::-;6512:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6512:46:89;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6512:46:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6498:61;;;5826:740;;;:::o;10470:154::-;-1:-1:-1;;;;;10582:25:89;;;10559:4;10582:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;10470:154::o;14333:117::-;14390:4;14413:30;:12;14435:7;14413:21;:30::i;735:104:10:-;822:10;735:104;:::o;21357:155:89:-;21422:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;21422:29:89;-1:-1:-1;;;;;21422:29:89;;;;;;;;:24;;21475:16;21422:24;21475:7;:16::i;:::-;-1:-1:-1;;;;;21466:39:89;;;;;;;;;;;21357:155;;:::o;6990:121:105:-;7059:7;7085:19;7093:3;7085:7;:19::i;14811:329:89:-;14896:4;14920:16;14928:7;14920;:16::i;:::-;14912:73;;;;-1:-1:-1;;;14912:73:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14995:13;15011:16;15019:7;15011;:16::i;:::-;14995:32;;15056:5;-1:-1:-1;;;;;15045:16:89;:7;-1:-1:-1;;;;;15045:16:89;;:51;;;;15089:7;-1:-1:-1;;;;;15065:31:89;:20;15077:7;15065:11;:20::i;:::-;-1:-1:-1;;;;;15065:31:89;;15045:51;:87;;;;15100:32;15117:5;15124:7;15100:16;:32::i;:::-;15037:96;14811:329;-1:-1:-1;;;;14811:329:89:o;18323:559::-;18440:4;-1:-1:-1;;;;;18420:24:89;:16;18428:7;18420;:16::i;:::-;-1:-1:-1;;;;;18420:24:89;;18412:78;;;;-1:-1:-1;;;18412:78:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18508:16:89;;18500:65;;;;-1:-1:-1;;;18500:65:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18576:39;18597:4;18603:2;18607:7;18576:20;:39::i;:::-;18677:29;18694:1;18698:7;18677:8;:29::i;:::-;-1:-1:-1;;;;;18717:19:89;;;;;;:13;:19;;;;;:35;;18744:7;18717:26;:35::i;:::-;-1:-1:-1;;;;;;18762:17:89;;;;;;:13;:17;;;;;:30;;18784:7;18762:21;:30::i;:::-;-1:-1:-1;18803:29:89;:12;18820:7;18829:2;18803:16;:29::i;:::-;;18867:7;18863:2;-1:-1:-1;;;;;18848:27:89;18857:4;-1:-1:-1;;;;;18848:27:89;;;;;;;;;;;18323:559;;;:::o;7616:135:106:-;7687:7;7721:22;7725:3;7737:5;7721:3;:22::i;7439:224:105:-;7519:7;;;;7578:22;7582:3;7594:5;7578:3;:22::i;:::-;7547:53;;;;-1:-1:-1;7439:224:105;-1:-1:-1;;;;;7439:224:105:o;8082:202::-;8189:7;8231:44;8236:3;8256;8262:12;8231:4;:44::i;:::-;8223:53;-1:-1:-1;8082:202:105;;;;;;:::o;13869:269:89:-;13982:28;13992:4;13998:2;14002:7;13982:9;:28::i;:::-;14028:48;14051:4;14057:2;14061:7;14070:5;14028:22;:48::i;:::-;14020:111;;;;-1:-1:-1;;;14020:111:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;169:723:110;225:13;442:10;438:51;;-1:-1:-1;468:10:110;;;;;;;;;;;;-1:-1:-1;;;468:10:110;;;;;;438:51;513:5;498:12;552:75;559:9;;552:75;;584:8;;614:2;606:10;;;;552:75;;;636:19;668:6;658:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;658:17:110;-1:-1:-1;728:5:110;;-1:-1:-1;636:39:110;-1:-1:-1;;;701:10:110;;743:112;750:9;;743:112;;816:2;809:4;:9;804:2;:14;793:27;;775:6;782:7;;;;;;;775:15;;;;;;;;;;;:45;-1:-1:-1;;;;;775:45:110;;;;;;;;-1:-1:-1;842:2:110;834:10;;;;743:112;;;-1:-1:-1;878:6:110;169:723;-1:-1:-1;;;;169:723:110:o;6758:149:105:-;6842:4;6865:35;6875:3;6895;6865:9;:35::i;4450:108::-;4532:19;;4450:108::o;6731:135:106:-;6801:4;6824:35;6832:3;6852:5;6824:7;:35::i;6434:129::-;6501:4;6524:32;6529:3;6549:5;6524:4;:32::i;6206:174:105:-;6295:4;6318:55;6323:3;6343;-1:-1:-1;;;;;6357:14:105;;6318:4;:55::i;4390:201:106:-;4484:18;;4457:7;;4484:26;-1:-1:-1;4476:73:106;;;;-1:-1:-1;;;4476:73:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4566:3;:11;;4578:5;4566:18;;;;;;;;;;;;;;;;4559:25;;4390:201;;;;:::o;4901:274:105:-;5004:19;;4968:7;;;;5004:27;-1:-1:-1;4996:74:105;;;;-1:-1:-1;;;4996:74:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5081:22;5106:3;:12;;5119:5;5106:19;;;;;;;;;;;;;;;;;;5081:44;;5143:5;:10;;;5155:5;:12;;;5135:33;;;;;4901:274;;;;;:::o;5582:315::-;5676:7;5714:17;;;:12;;;:17;;;;;;5764:12;5749:13;5741:36;;;;-1:-1:-1;;;5741:36:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5830:3;:12;;5854:1;5843:8;:12;5830:26;;;;;;;;;;;;;;;;;;:33;;;5823:40;;;5582:315;;;;;:::o;20301:1050:89:-;20421:4;20446:15;:2;-1:-1:-1;;;;;20446:13:89;;:15::i;:::-;20441:58;;-1:-1:-1;20484:4:89;20477:11;;20441:58;20568:12;20582:23;-1:-1:-1;;;;;20609:7:89;;-1:-1:-1;;;20712:12:89;:10;:12::i;:::-;20738:4;20756:7;20777:5;20617:175;;;;;;-1:-1:-1;;;;;20617:175:89;;;;;;-1:-1:-1;;;;;20617:175:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20617:175:89;;;-1:-1:-1;;20617:175:89;;;;;;;;;;;;;;-1:-1:-1;;;;;20617:175:89;-1:-1:-1;;;;;;20617:175:89;;;;;;;;;20609:184;;;20617:175;;20609:184;;-1:-1:-1;20609:184:89;;-1:-1:-1;20617:175:89;-1:-1:-1;20609:184:89;-1:-1:-1;20609:184:89;;-1:-1:-1;20609:184:89;;-1:-1:-1;20617:175:89;20609:184;;;;;;;;;;-1:-1:-1;;20609:184:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20567:226;;;;20808:7;20803:542;;20835:17;;:21;20831:376;;21000:10;20994:17;21060:15;21047:10;21043:2;21039:19;21032:44;20949:145;21132:60;;-1:-1:-1;;;21132:60:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20803:542;21237:13;21264:10;21253:32;;;;;;;;;;;;;;;-1:-1:-1;21253:32:89;-1:-1:-1;;;;;;21307:26:89;-1:-1:-1;;;21307:26:89;;-1:-1:-1;21299:35:89;;-1:-1:-1;;;21299:35:89;4237:123:105;4308:4;4331:17;;;:12;;;;;:17;;;;;;:22;;;4237:123::o;2150:1512:106:-;2216:4;2353:19;;;:12;;;:19;;;;;;2387:15;;2383:1273;;2816:18;;-1:-1:-1;;2768:14:106;;;;2816:22;;;;2744:21;;2816:3;;:22;;3098;;;;;;;;;;;;;;3078:42;;3241:9;3212:3;:11;;3224:13;3212:26;;;;;;;;;;;;;;;;;;;:38;;;;3316:23;;;3358:1;3316:12;;;:23;;;;;;3342:17;;;3316:43;;3465:17;;3316:3;;3465:17;;;;;;;;;;;;;;;;;;;;;;3557:3;:12;;:19;3570:5;3557:19;;;;;;;;;;;3550:26;;;3598:4;3591:11;;;;;;;;2383:1273;3640:5;3633:12;;;;;1578:404;1641:4;1662:21;1672:3;1677:5;1662:9;:21::i;:::-;1657:319;;-1:-1:-1;1699:23:106;;;;;;;;:11;:23;;;;;;;;;;;;;1879:18;;1857:19;;;:12;;;:19;;;;;;:40;;;;1911:11;;1657:319;-1:-1:-1;1960:5:106;1953:12;;1795:678:105;1871:4;2004:17;;;:12;;;:17;;;;;;2036:13;2032:435;;-1:-1:-1;;2120:38:105;;;;;;;;;;;;;;;;;;2102:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2314:19;;2294:17;;;:12;;;:17;;;;;;;:39;2347:11;;2032:435;2425:5;2389:3;:12;;2413:1;2402:8;:12;2389:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2451:5;2444:12;;;;;685:610:101;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;;1272:15:101;;;1237:51;-1:-1:-1;;685:610:101:o",
  "language": "Solidity",
  "natspec": {
    "details": "see https://eips.ethereum.org/EIPS/eip-721",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string. If a base URI is set (via {_setBaseURI}), it is added as a prefix to the token's own URI (via {_setTokenURI}). If there is a base URI but no token URI, the token's ID will be used as its URI when appending it to the base URI. This pattern for autogenerated token URIs can lead to large gas savings. .Examples |=== |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()` | \"\" | \"\" | \"\" | \"\" | \"token.uri/123\" | \"token.uri/123\" | \"token.uri/\" | \"123\" | \"token.uri/123\" | \"token.uri/\" | \"\" | \"token.uri/<tokenId>\" |=== Requirements: - `tokenId` must exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    },
    "title": "ERC721 Non-Fungible Token Standard basic implementation",
    "version": 1
  },
  "offset": [
    528,
    22163
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4F6CCCE7 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x351 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37F JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x445 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x462 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x4F6CCCE7 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x323 JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x2F745C59 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2AB JUMPI PUSH2 0x10B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x201 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH2 0x490 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x18D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x175 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1BA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x5AB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x237 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x2C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x719 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x734 JUMP JUMPDEST PUSH2 0x1E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x74A JUMP JUMPDEST PUSH2 0x153 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x237 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7D3 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x83B JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD ISZERO ISZERO PUSH2 0x89C JUMP JUMPDEST PUSH2 0x22D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x9A1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x153 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9FF JUMP JUMPDEST PUSH2 0x137 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x522 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x554 DUP3 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0x58F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1814 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B6 DUP3 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1898 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x61B PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x63C JUMPI POP PUSH2 0x63C DUP2 PUSH2 0x637 PUSH2 0xCE1 JUMP JUMPDEST PUSH2 0xCA6 JUMP JUMPDEST PUSH2 0x677 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x38 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1767 PUSH1 0x38 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x681 DUP4 DUP4 PUSH2 0xCE5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x692 PUSH1 0x2 PUSH2 0xD53 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6A8 PUSH2 0x6A2 PUSH2 0xCE1 JUMP JUMPDEST DUP3 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x6E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18B9 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x681 DUP4 DUP4 DUP4 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x710 SWAP1 DUP4 PUSH2 0xF4E JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x681 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9A1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x742 PUSH1 0x2 DUP5 PUSH2 0xF5A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x17C9 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x2 SWAP2 SWAP1 PUSH2 0xF76 JUMP JUMPDEST PUSH1 0x9 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x81A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x179F PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x713 SWAP1 PUSH2 0xD53 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x53F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x514 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x8A4 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x917 PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 SWAP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH2 0x95B PUSH2 0xCE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x9B2 PUSH2 0x9AC PUSH2 0xCE1 JUMP JUMPDEST DUP4 PUSH2 0xD5E JUMP JUMPDEST PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x31 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x18B9 PUSH1 0x31 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F9 DUP5 DUP5 DUP5 DUP5 PUSH2 0xF8D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA0A DUP3 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0xA45 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1869 PUSH1 0x2F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP7 AND ISZERO MUL ADD SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 DIV SWAP2 DUP3 ADD DUP5 SWAP1 DIV DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xADA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xAAF JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xADA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xABD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP PUSH1 0x9 SLOAD SWAP4 SWAP5 POP POP POP POP PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP5 AND ISZERO MUL ADD SWAP1 SWAP2 AND DIV PUSH2 0xB03 JUMPI SWAP1 POP PUSH2 0x4AE JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0xBD4 JUMPI PUSH1 0x9 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xB6B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB49 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0xB6B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB57 JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xB97 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xB78 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x9 PUSH2 0xBDF DUP5 PUSH2 0xFDF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP4 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0xC3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 DUP3 ADD SWAP2 PUSH2 0xC3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC29 JUMPI JUMPDEST POP POP DUP3 MLOAD PUSH1 0x20 DUP5 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0xC69 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 PUSH1 0x2 DUP4 PUSH2 0x10BA JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xD1A DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x713 DUP3 PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD69 DUP3 PUSH2 0xCD4 JUMP JUMPDEST PUSH2 0xDA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x173B PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xDAF DUP4 PUSH2 0x74A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xDEA JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xDDF DUP5 PUSH2 0x549 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xDFA JUMPI POP PUSH2 0xDFA DUP2 DUP6 PUSH2 0xCA6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE15 DUP3 PUSH2 0x74A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x29 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1840 PUSH1 0x29 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1717 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAA DUP4 DUP4 DUP4 PUSH2 0x681 JUMP JUMPDEST PUSH2 0xEB5 PUSH1 0x0 DUP3 PUSH2 0xCE5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xED7 SWAP1 DUP3 PUSH2 0x10CA JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xEFA SWAP1 DUP3 PUSH2 0x10D6 JUMP JUMPDEST POP PUSH2 0xF07 PUSH1 0x2 DUP3 DUP5 PUSH2 0x10E2 JUMP JUMPDEST POP DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xF69 DUP7 DUP7 PUSH2 0x115C JUMP JUMPDEST SWAP1 SWAP8 SWAP1 SWAP7 POP SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF83 DUP5 DUP5 DUP5 PUSH2 0x11D7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xF98 DUP5 DUP5 DUP5 PUSH2 0xE02 JUMP JUMPDEST PUSH2 0xFA4 DUP5 DUP5 DUP5 DUP5 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16E5 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x1004 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x4AE JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x101C JUMPI PUSH1 0x1 ADD PUSH1 0xA DUP3 DIV SWAP2 POP PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x1035 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1060 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP6 SWAP4 POP SWAP1 POP PUSH1 0x0 NOT DUP3 ADD JUMPDEST DUP4 ISZERO PUSH2 0x10B1 JUMPI PUSH1 0xA DUP5 MOD PUSH1 0x30 ADD PUSH1 0xF8 SHL DUP3 DUP3 DUP1 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP2 MLOAD DUP2 LT PUSH2 0x108F JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xA DUP5 DIV SWAP4 POP PUSH2 0x106C JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x14CA JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x14E2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x710 DUP4 DUP4 PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF83 DUP5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x15F2 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16C3 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1149 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP4 LT PUSH2 0x11A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17F2 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x11B1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD DUP2 PUSH1 0x1 ADD SLOAD SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 PUSH2 0x1272 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1237 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x121F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1264 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP5 PUSH1 0x0 ADD PUSH1 0x1 DUP3 SUB DUP2 SLOAD DUP2 LT PUSH2 0x1285 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12B5 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1689 JUMP JUMPDEST PUSH2 0x12C1 JUMPI POP PUSH1 0x1 PUSH2 0xDFA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL PUSH2 0x12DF PUSH2 0xCE1 JUMP JUMPDEST DUP10 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1346 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x132E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1373 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP11 AND SWAP10 SWAP1 SWAP10 OR DUP10 MSTORE MLOAD DUP2 MLOAD SWAP2 SWAP9 SWAP1 SWAP8 POP DUP8 SWAP7 POP SWAP5 POP SWAP3 POP DUP3 SWAP2 POP DUP5 SWAP1 POP DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x13DB JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x13BC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x143D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1442 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1493 JUMPI DUP1 MLOAD ISZERO PUSH2 0x145C JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x16E5 PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x14AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP4 POP PUSH2 0xDFA SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x159E JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1515 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1532 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0x1562 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B4 DUP4 DUP4 PUSH2 0x14CA JUMP JUMPDEST PUSH2 0x15EA JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x713 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x713 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 PUSH2 0x1657 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP5 DUP2 MSTORE DUP7 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP10 SSTORE PUSH1 0x0 DUP10 DUP2 MSTORE DUP5 DUP2 KECCAK256 SWAP6 MLOAD PUSH1 0x2 SWAP1 SWAP4 MUL SWAP1 SWAP6 ADD SWAP2 DUP3 SSTORE SWAP2 MLOAD SWAP1 DUP3 ADD SSTORE DUP7 SLOAD DUP7 DUP5 MSTORE DUP2 DUP9 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP1 SWAP2 KECCAK256 SSTORE PUSH2 0xF86 JUMP JUMPDEST DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x1 DUP4 SUB DUP2 SLOAD DUP2 LT PUSH2 0x166A JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 SWAP2 POP POP PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x0 DUP2 EXTCODEHASH PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 DUP2 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xDFA JUMPI POP POP ISZERO ISZERO SWAP3 SWAP2 POP POP JUMP INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E64734552433732313A20747261 PUSH15 0x7366657220746F206E6F6E20455243 CALLDATACOPY ORIGIN BALANCE MSTORE PUSH6 0x636569766572 KECCAK256 PUSH10 0x6D706C656D656E746572 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH16 0x70657261746F7220717565727920666F PUSH19 0x206E6F6E6578697374656E7420746F6B656E45 MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76652063616C6C6572206973206E6F74206F PUSH24 0x6E6572206E6F7220617070726F76656420666F7220616C6C GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH3 0x616C61 PUSH15 0x636520717565727920666F72207468 PUSH6 0x207A65726F20 PUSH2 0x6464 PUSH19 0x6573734552433732313A206F776E6572207175 PUSH6 0x727920666F72 KECCAK256 PUSH15 0x6F6E6578697374656E7420746F6B65 PUSH15 0x456E756D657261626C654D61703A20 PUSH10 0x6E646578206F7574206F PUSH7 0x20626F756E6473 GASLIMIT MSTORE NUMBER CALLDATACOPY ORIGIN BALANCE GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F76656420717565727920666F72206E6F6E65 PUSH25 0x697374656E7420746F6B656E4552433732313A207472616E73 PUSH7 0x6572206F662074 PUSH16 0x6B656E2074686174206973206E6F7420 PUSH16 0x776E4552433732314D65746164617461 GASPRICE KECCAK256 SSTORE MSTORE 0x49 KECCAK256 PUSH18 0x7565727920666F72206E6F6E657869737465 PUSH15 0x7420746F6B656E4552433732313A20 PUSH2 0x7070 PUSH19 0x6F76616C20746F2063757272656E74206F776E PUSH6 0x724552433732 BALANCE GASPRICE KECCAK256 PUSH21 0x72616E736665722063616C6C6572206973206E6F74 KECCAK256 PUSH16 0x776E6572206E6F7220617070726F7665 PUSH5 0xA264697066 PUSH20 0x58221220BA5033C735DD68B16F42B28D6A0D74F5 CALLVALUE CALLDATALOAD GT 0xFC 0xEF GAS LOG4 0xC0 0xB7 PUSH18 0x732A4AC7816E64736F6C634300060C003300 ",
  "pcMap": {
    "0": {
      "offset": [
        528,
        22163
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "CALLVALUE",
      "path": "89"
    },
    "6": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "7": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "8": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "12": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "REVERT",
      "path": "89"
    },
    "16": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "17": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "POP",
      "path": "89"
    },
    "18": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "21": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "LT",
      "path": "89"
    },
    "22": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10B"
    },
    "25": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "26": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "29": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "SHR",
      "path": "89"
    },
    "32": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "33": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x4F6CCCE7"
    },
    "38": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "GT",
      "path": "89"
    },
    "39": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xA2"
    },
    "42": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "43": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "44": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x95D89B41"
    },
    "49": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "GT",
      "path": "89"
    },
    "50": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "54": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "55": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x95D89B41"
    },
    "60": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "61": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x349"
    },
    "64": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "65": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "66": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0xA22CB465"
    },
    "71": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "72": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x351"
    },
    "75": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "76": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "77": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0xB88D4FDE"
    },
    "82": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "83": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x37F"
    },
    "86": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "87": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "88": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0xC87B56DD"
    },
    "93": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "94": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x445"
    },
    "97": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "98": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "99": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0xE985E9C5"
    },
    "104": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "105": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x462"
    },
    "108": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "109": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10B"
    },
    "112": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMP",
      "path": "89"
    },
    "113": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "114": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "115": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x4F6CCCE7"
    },
    "120": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "121": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x2E1"
    },
    "124": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "125": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "126": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x6352211E"
    },
    "131": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "132": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x2FE"
    },
    "135": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "136": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "137": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x6C0360EB"
    },
    "142": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "143": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x31B"
    },
    "146": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "147": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "148": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x70A08231"
    },
    "153": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "154": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x323"
    },
    "157": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "158": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10B"
    },
    "161": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMP",
      "path": "89"
    },
    "162": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "163": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "164": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x18160DDD"
    },
    "169": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "GT",
      "path": "89"
    },
    "170": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDE"
    },
    "173": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "174": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "175": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x18160DDD"
    },
    "180": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "181": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x22F"
    },
    "184": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "185": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "186": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "192": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x249"
    },
    "195": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "196": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "197": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x2F745C59"
    },
    "202": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "203": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x27F"
    },
    "206": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "207": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "208": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x42842E0E"
    },
    "213": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "214": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x2AB"
    },
    "217": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "218": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10B"
    },
    "221": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMP",
      "path": "89"
    },
    "222": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "223": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "224": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x1FFC9A7"
    },
    "229": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "230": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x110"
    },
    "233": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "234": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "235": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x6FDDE03"
    },
    "240": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "241": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x14B"
    },
    "244": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "245": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "246": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x81812FC"
    },
    "251": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "252": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1C8"
    },
    "255": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "256": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "257": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH4",
      "path": "89",
      "value": "0x95EA7B3"
    },
    "262": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "EQ",
      "path": "89"
    },
    "263": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x201"
    },
    "266": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "267": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "268": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "270": {
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "DUP1",
      "path": "89"
    },
    "271": {
      "first_revert": true,
      "fn": null,
      "offset": [
        528,
        22163
      ],
      "op": "REVERT",
      "path": "89"
    },
    "272": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "273": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x137"
    },
    "276": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x4"
    },
    "278": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "DUP1",
      "path": "21"
    },
    "279": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "CALLDATASIZE",
      "path": "21"
    },
    "280": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "SUB",
      "path": "21"
    },
    "281": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "283": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "DUP2",
      "path": "21"
    },
    "284": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "LT",
      "path": "21"
    },
    "285": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "286": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x126"
    },
    "289": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "JUMPI",
      "path": "21"
    },
    "290": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "292": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "DUP1",
      "path": "21"
    },
    "293": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "REVERT",
      "path": "21"
    },
    "294": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "295": {
      "op": "POP"
    },
    "296": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "CALLDATALOAD",
      "path": "21"
    },
    "297": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "299": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "303": {
      "op": "SHL"
    },
    "304": {
      "op": "SUB"
    },
    "305": {
      "op": "NOT"
    },
    "306": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "AND",
      "path": "21"
    },
    "307": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "PUSH2",
      "path": "21",
      "value": "0x490"
    },
    "310": {
      "fn": "ERC165.supportsInterface",
      "jump": "i",
      "offset": [
        915,
        1055
      ],
      "op": "JUMP",
      "path": "21"
    },
    "311": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "312": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "314": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "DUP1",
      "path": "21"
    },
    "315": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "316": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "317": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "318": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "ISZERO",
      "path": "21"
    },
    "319": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "DUP3",
      "path": "21"
    },
    "320": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "321": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "MLOAD",
      "path": "21"
    },
    "322": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "323": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "DUP2",
      "path": "21"
    },
    "324": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "325": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "SUB",
      "path": "21"
    },
    "326": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "328": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "ADD",
      "path": "21"
    },
    "329": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "330": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "RETURN",
      "path": "21"
    },
    "331": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "332": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x153"
    },
    "335": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x4B3"
    },
    "338": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMP",
      "path": "89"
    },
    "339": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "340": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "342": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP1",
      "path": "89"
    },
    "343": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "344": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "346": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP1",
      "path": "89"
    },
    "347": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP3",
      "path": "89"
    },
    "348": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "349": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "350": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "351": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP2",
      "path": "89"
    },
    "352": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "353": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ADD",
      "path": "89"
    },
    "354": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "355": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "356": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "357": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "358": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "359": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "360": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "361": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "362": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "363": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ADD",
      "path": "89"
    },
    "364": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "365": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP6",
      "path": "89"
    },
    "366": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ADD",
      "path": "89"
    },
    "367": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "368": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP1",
      "path": "89"
    },
    "369": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "370": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "371": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "373": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "374": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "375": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP2",
      "path": "89"
    },
    "376": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "LT",
      "path": "89"
    },
    "377": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "378": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x18D"
    },
    "381": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "382": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP2",
      "path": "89"
    },
    "383": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP2",
      "path": "89"
    },
    "384": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ADD",
      "path": "89"
    },
    "385": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "386": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "387": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP3",
      "path": "89"
    },
    "388": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ADD",
      "path": "89"
    },
    "389": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "390": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "392": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ADD",
      "path": "89"
    },
    "393": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x175"
    },
    "396": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMP",
      "path": "89"
    },
    "397": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "398": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "399": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "400": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "401": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "402": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "403": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "404": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "405": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP2",
      "path": "89"
    },
    "406": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ADD",
      "path": "89"
    },
    "407": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "408": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "410": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "AND",
      "path": "89"
    },
    "411": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP1",
      "path": "89"
    },
    "412": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "413": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1BA"
    },
    "416": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "417": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP1",
      "path": "89"
    },
    "418": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP3",
      "path": "89"
    },
    "419": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SUB",
      "path": "89"
    },
    "420": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP1",
      "path": "89"
    },
    "421": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "422": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "424": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP4",
      "path": "89"
    },
    "425": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "427": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SUB",
      "path": "89"
    },
    "428": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "431": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "EXP",
      "path": "89"
    },
    "432": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SUB",
      "path": "89"
    },
    "433": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "NOT",
      "path": "89"
    },
    "434": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "AND",
      "path": "89"
    },
    "435": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP2",
      "path": "89"
    },
    "436": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "437": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "439": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "ADD",
      "path": "89"
    },
    "440": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "441": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "442": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "443": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "444": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "445": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "446": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "447": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "POP",
      "path": "89"
    },
    "448": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "450": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "451": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "DUP1",
      "path": "89"
    },
    "452": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "453": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SUB",
      "path": "89"
    },
    "454": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "455": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "RETURN",
      "path": "89"
    },
    "456": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "457": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1E5"
    },
    "460": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "462": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "DUP1",
      "path": "89"
    },
    "463": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "464": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "SUB",
      "path": "89"
    },
    "465": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "467": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "DUP2",
      "path": "89"
    },
    "468": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "LT",
      "path": "89"
    },
    "469": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "470": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1DE"
    },
    "473": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "474": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "476": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "DUP1",
      "path": "89"
    },
    "477": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "REVERT",
      "path": "89"
    },
    "478": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "479": {
      "op": "POP"
    },
    "480": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "481": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x549"
    },
    "484": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        9350,
        9559
      ],
      "op": "JUMP",
      "path": "89"
    },
    "485": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "486": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "488": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "DUP1",
      "path": "89"
    },
    "489": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "494": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "496": {
      "op": "SHL"
    },
    "497": {
      "op": "SUB"
    },
    "498": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "499": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "500": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "AND",
      "path": "89"
    },
    "501": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "DUP3",
      "path": "89"
    },
    "502": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "503": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "504": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "505": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "DUP2",
      "path": "89"
    },
    "506": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "507": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "SUB",
      "path": "89"
    },
    "508": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "510": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "ADD",
      "path": "89"
    },
    "511": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "512": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "RETURN",
      "path": "89"
    },
    "513": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "514": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x22D"
    },
    "517": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "519": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "DUP1",
      "path": "89"
    },
    "520": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "521": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "SUB",
      "path": "89"
    },
    "522": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "524": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "DUP2",
      "path": "89"
    },
    "525": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "LT",
      "path": "89"
    },
    "526": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "527": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x217"
    },
    "530": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "531": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "533": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "DUP1",
      "path": "89"
    },
    "534": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "REVERT",
      "path": "89"
    },
    "535": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "536": {
      "op": "POP"
    },
    "537": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "541": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "543": {
      "op": "SHL"
    },
    "544": {
      "op": "SUB"
    },
    "545": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "DUP2",
      "path": "89"
    },
    "546": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "547": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "AND",
      "path": "89"
    },
    "548": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "549": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "551": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "ADD",
      "path": "89"
    },
    "552": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "553": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x5AB"
    },
    "556": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        8684,
        9065
      ],
      "op": "JUMP",
      "path": "89"
    },
    "557": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "558": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "STOP",
      "path": "89"
    },
    "559": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "560": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x237"
    },
    "563": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x686"
    },
    "566": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        7564,
        7764
      ],
      "op": "JUMP",
      "path": "89"
    },
    "567": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "568": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "570": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "DUP1",
      "path": "89"
    },
    "571": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "572": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "573": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "DUP3",
      "path": "89"
    },
    "574": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "575": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "576": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "577": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "DUP2",
      "path": "89"
    },
    "578": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "579": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "SUB",
      "path": "89"
    },
    "580": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "582": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "ADD",
      "path": "89"
    },
    "583": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "584": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "RETURN",
      "path": "89"
    },
    "585": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "586": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x22D"
    },
    "589": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "591": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "DUP1",
      "path": "89"
    },
    "592": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "593": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "SUB",
      "path": "89"
    },
    "594": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "596": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "DUP2",
      "path": "89"
    },
    "597": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "LT",
      "path": "89"
    },
    "598": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "599": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x25F"
    },
    "602": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "603": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "605": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "DUP1",
      "path": "89"
    },
    "606": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "REVERT",
      "path": "89"
    },
    "607": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "608": {
      "op": "POP"
    },
    "609": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "611": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "SUB"
    },
    "617": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "DUP2",
      "path": "89"
    },
    "618": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "619": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "DUP2",
      "path": "89"
    },
    "620": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "AND",
      "path": "89"
    },
    "621": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "622": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "624": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "DUP2",
      "path": "89"
    },
    "625": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "ADD",
      "path": "89"
    },
    "626": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "627": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "628": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "629": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "AND",
      "path": "89"
    },
    "630": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "631": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "633": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "ADD",
      "path": "89"
    },
    "634": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "635": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x697"
    },
    "638": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        11061,
        11361
      ],
      "op": "JUMP",
      "path": "89"
    },
    "639": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "640": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x237"
    },
    "643": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "645": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "DUP1",
      "path": "89"
    },
    "646": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "647": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "SUB",
      "path": "89"
    },
    "648": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "650": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "DUP2",
      "path": "89"
    },
    "651": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "LT",
      "path": "89"
    },
    "652": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "653": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x295"
    },
    "656": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "657": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "659": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "DUP1",
      "path": "89"
    },
    "660": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "REVERT",
      "path": "89"
    },
    "661": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "662": {
      "op": "POP"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "DUP2",
      "path": "89"
    },
    "672": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "673": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "AND",
      "path": "89"
    },
    "674": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "675": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "677": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "ADD",
      "path": "89"
    },
    "678": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "679": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x6EE"
    },
    "682": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        7259,
        7411
      ],
      "op": "JUMP",
      "path": "89"
    },
    "683": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "684": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x22D"
    },
    "687": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "689": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "DUP1",
      "path": "89"
    },
    "690": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "691": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "SUB",
      "path": "89"
    },
    "692": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "694": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "DUP2",
      "path": "89"
    },
    "695": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "LT",
      "path": "89"
    },
    "696": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "697": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x2C1"
    },
    "700": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "701": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "703": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "DUP1",
      "path": "89"
    },
    "704": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "REVERT",
      "path": "89"
    },
    "705": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "706": {
      "op": "POP"
    },
    "707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "713": {
      "op": "SHL"
    },
    "714": {
      "op": "SUB"
    },
    "715": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "DUP2",
      "path": "89"
    },
    "716": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "717": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "DUP2",
      "path": "89"
    },
    "718": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "AND",
      "path": "89"
    },
    "719": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "720": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "722": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "DUP2",
      "path": "89"
    },
    "723": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "ADD",
      "path": "89"
    },
    "724": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "725": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "726": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "727": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "AND",
      "path": "89"
    },
    "728": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "729": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "731": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "ADD",
      "path": "89"
    },
    "732": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "733": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x719"
    },
    "736": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        12010,
        12159
      ],
      "op": "JUMP",
      "path": "89"
    },
    "737": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "738": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x237"
    },
    "741": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "743": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "DUP1",
      "path": "89"
    },
    "744": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "745": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "SUB",
      "path": "89"
    },
    "746": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "748": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "DUP2",
      "path": "89"
    },
    "749": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "LT",
      "path": "89"
    },
    "750": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "751": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x2F7"
    },
    "754": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "755": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "757": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "DUP1",
      "path": "89"
    },
    "758": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "REVERT",
      "path": "89"
    },
    "759": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "760": {
      "op": "POP"
    },
    "761": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "762": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x734"
    },
    "765": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        8102,
        8263
      ],
      "op": "JUMP",
      "path": "89"
    },
    "766": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "767": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1E5"
    },
    "770": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "772": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "DUP1",
      "path": "89"
    },
    "773": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "774": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "SUB",
      "path": "89"
    },
    "775": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "777": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "DUP2",
      "path": "89"
    },
    "778": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "LT",
      "path": "89"
    },
    "779": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "780": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x314"
    },
    "783": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "784": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "786": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "DUP1",
      "path": "89"
    },
    "787": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "REVERT",
      "path": "89"
    },
    "788": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "791": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x74A"
    },
    "794": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4418,
        4585
      ],
      "op": "JUMP",
      "path": "89"
    },
    "795": {
      "fn": "ERC721.baseURI",
      "offset": [
        6798,
        6885
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "796": {
      "fn": "ERC721.baseURI",
      "offset": [
        6798,
        6885
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x153"
    },
    "799": {
      "fn": "ERC721.baseURI",
      "offset": [
        6798,
        6885
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x772"
    },
    "802": {
      "fn": "ERC721.baseURI",
      "jump": "i",
      "offset": [
        6798,
        6885
      ],
      "op": "JUMP",
      "path": "89"
    },
    "803": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "804": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x237"
    },
    "807": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "DUP1",
      "path": "89"
    },
    "810": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "811": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "SUB",
      "path": "89"
    },
    "812": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "814": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "DUP2",
      "path": "89"
    },
    "815": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "LT",
      "path": "89"
    },
    "816": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "817": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x339"
    },
    "820": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "821": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "823": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "DUP1",
      "path": "89"
    },
    "824": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "REVERT",
      "path": "89"
    },
    "825": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "826": {
      "op": "POP"
    },
    "827": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "830": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "832": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "834": {
      "op": "SHL"
    },
    "835": {
      "op": "SUB"
    },
    "836": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "AND",
      "path": "89"
    },
    "837": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x7D3"
    },
    "840": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        3988,
        4199
      ],
      "op": "JUMP",
      "path": "89"
    },
    "841": {
      "fn": "ERC721.symbol",
      "offset": [
        4889,
        4983
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "842": {
      "fn": "ERC721.symbol",
      "offset": [
        4889,
        4983
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x153"
    },
    "845": {
      "fn": "ERC721.symbol",
      "offset": [
        4889,
        4983
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x83B"
    },
    "848": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        4889,
        4983
      ],
      "op": "JUMP",
      "path": "89"
    },
    "849": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "850": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x22D"
    },
    "853": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "855": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "DUP1",
      "path": "89"
    },
    "856": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "857": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "SUB",
      "path": "89"
    },
    "858": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "DUP2",
      "path": "89"
    },
    "861": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "LT",
      "path": "89"
    },
    "862": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "863": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x367"
    },
    "866": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "867": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "869": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "DUP1",
      "path": "89"
    },
    "870": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "REVERT",
      "path": "89"
    },
    "871": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "872": {
      "op": "POP"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "879": {
      "op": "SHL"
    },
    "880": {
      "op": "SUB"
    },
    "881": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "DUP2",
      "path": "89"
    },
    "882": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "883": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "AND",
      "path": "89"
    },
    "884": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "885": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "887": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "ADD",
      "path": "89"
    },
    "888": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "889": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "890": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "891": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x89C"
    },
    "894": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        9858,
        10148
      ],
      "op": "JUMP",
      "path": "89"
    },
    "895": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "896": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x22D"
    },
    "899": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "901": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "902": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "903": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SUB",
      "path": "89"
    },
    "904": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x80"
    },
    "906": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "907": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "LT",
      "path": "89"
    },
    "908": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "909": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x395"
    },
    "912": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "913": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "915": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "916": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "REVERT",
      "path": "89"
    },
    "917": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "922": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "924": {
      "op": "SHL"
    },
    "925": {
      "op": "SUB"
    },
    "926": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP3",
      "path": "89"
    },
    "927": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "928": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "929": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "AND",
      "path": "89"
    },
    "930": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "931": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "933": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "934": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "935": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "936": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "937": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "938": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "AND",
      "path": "89"
    },
    "939": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "940": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "942": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP3",
      "path": "89"
    },
    "943": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "944": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "945": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "946": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "947": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "948": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "949": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "950": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x80"
    },
    "952": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "953": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "954": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "956": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP3",
      "path": "89"
    },
    "957": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "958": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "959": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH5",
      "path": "89",
      "value": "0x100000000"
    },
    "965": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "966": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "GT",
      "path": "89"
    },
    "967": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "968": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x3D0"
    },
    "971": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "972": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "974": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "975": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "REVERT",
      "path": "89"
    },
    "976": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "977": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP3",
      "path": "89"
    },
    "978": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "979": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP4",
      "path": "89"
    },
    "980": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "982": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP3",
      "path": "89"
    },
    "983": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "984": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "GT",
      "path": "89"
    },
    "985": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "986": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x3E2"
    },
    "989": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "990": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "992": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "993": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "REVERT",
      "path": "89"
    },
    "994": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "995": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "996": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "997": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "998": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1000": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "1001": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1002": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP5",
      "path": "89"
    },
    "1003": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "1005": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1006": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "MUL",
      "path": "89"
    },
    "1007": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP5",
      "path": "89"
    },
    "1008": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "1009": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "GT",
      "path": "89"
    },
    "1010": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH5",
      "path": "89",
      "value": "0x100000000"
    },
    "1016": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1017": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "GT",
      "path": "89"
    },
    "1018": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "OR",
      "path": "89"
    },
    "1019": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "1020": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x404"
    },
    "1023": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1024": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1026": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1027": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "REVERT",
      "path": "89"
    },
    "1028": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1029": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1030": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1031": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1032": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1033": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "1035": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "1036": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1038": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1039": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1040": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DIV",
      "path": "89"
    },
    "1041": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "MUL",
      "path": "89"
    },
    "1042": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1044": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "1045": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1047": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1048": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1049": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1050": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "1051": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1053": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1054": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1055": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "1056": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1057": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1058": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1059": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1060": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1061": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1062": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1064": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "1065": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1066": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1067": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1068": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1069": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "DUP5",
      "path": "89"
    },
    "1070": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "CALLDATACOPY",
      "path": "89"
    },
    "1071": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1073": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1074": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "ADD",
      "path": "89"
    },
    "1075": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1076": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1077": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1078": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1079": {
      "op": "POP"
    },
    "1080": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1081": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP6",
      "path": "89"
    },
    "1082": {
      "op": "POP"
    },
    "1083": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x9A1"
    },
    "1086": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "1087": {
      "op": "POP"
    },
    "1088": {
      "op": "POP"
    },
    "1089": {
      "op": "POP"
    },
    "1090": {
      "op": "POP"
    },
    "1091": {
      "op": "POP"
    },
    "1092": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1093": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1094": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x153"
    },
    "1097": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "1099": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1100": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "1101": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "SUB",
      "path": "89"
    },
    "1102": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1104": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1105": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "LT",
      "path": "89"
    },
    "1106": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "1107": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x45B"
    },
    "1110": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1111": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1114": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "REVERT",
      "path": "89"
    },
    "1115": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1116": {
      "op": "POP"
    },
    "1117": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "1118": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x9FF"
    },
    "1121": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        5826,
        6566
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1122": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1123": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x137"
    },
    "1126": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "1128": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1129": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "CALLDATASIZE",
      "path": "89"
    },
    "1130": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "SUB",
      "path": "89"
    },
    "1131": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1133": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1134": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "LT",
      "path": "89"
    },
    "1135": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "1136": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x478"
    },
    "1139": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1140": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1142": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1143": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "REVERT",
      "path": "89"
    },
    "1144": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1148": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1150": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1152": {
      "op": "SHL"
    },
    "1153": {
      "op": "SUB"
    },
    "1154": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1155": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "1156": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1157": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "AND",
      "path": "89"
    },
    "1158": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1159": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1161": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "ADD",
      "path": "89"
    },
    "1162": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "CALLDATALOAD",
      "path": "89"
    },
    "1163": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "AND",
      "path": "89"
    },
    "1164": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCA6"
    },
    "1167": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        10470,
        10624
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1168": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1173": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1175": {
      "op": "SHL"
    },
    "1176": {
      "op": "SUB"
    },
    "1177": {
      "op": "NOT"
    },
    "1178": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "DUP2",
      "path": "21",
      "statement": 0
    },
    "1179": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "AND",
      "path": "21"
    },
    "1180": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        992,
        996
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x0"
    },
    "1182": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1183": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1184": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1185": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x20"
    },
    "1187": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "DUP2",
      "path": "21"
    },
    "1188": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1189": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "MSTORE",
      "path": "21"
    },
    "1190": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0x40"
    },
    "1192": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1193": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "KECCAK256",
      "path": "21"
    },
    "1194": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "SLOAD",
      "path": "21"
    },
    "1195": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "PUSH1",
      "path": "21",
      "value": "0xFF"
    },
    "1197": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1015,
        1048
      ],
      "op": "AND",
      "path": "21"
    },
    "1198": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "JUMPDEST",
      "path": "21"
    },
    "1199": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "SWAP2",
      "path": "21"
    },
    "1200": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "SWAP1",
      "path": "21"
    },
    "1201": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        915,
        1055
      ],
      "op": "POP",
      "path": "21"
    },
    "1202": {
      "fn": "ERC165.supportsInterface",
      "jump": "o",
      "offset": [
        915,
        1055
      ],
      "op": "JUMP",
      "path": "21"
    },
    "1203": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1204": {
      "fn": "ERC721.name",
      "offset": [
        4768,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 1,
      "value": "0x6"
    },
    "1206": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1207": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "1208": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1210": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1211": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1212": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1214": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "1216": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1220": {
      "op": "NOT"
    },
    "1221": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "1224": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "1226": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP9",
      "path": "89"
    },
    "1227": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "AND",
      "path": "89"
    },
    "1228": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "1229": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MUL",
      "path": "89"
    },
    "1230": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1231": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1232": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP6",
      "path": "89"
    },
    "1233": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "AND",
      "path": "89"
    },
    "1234": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "1235": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1236": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "1237": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DIV",
      "path": "89"
    },
    "1238": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "1239": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP5",
      "path": "89"
    },
    "1240": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1241": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1242": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1243": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DIV",
      "path": "89"
    },
    "1244": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1245": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MUL",
      "path": "89"
    },
    "1246": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1247": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1248": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1249": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1250": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1251": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1252": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1253": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1254": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1255": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1256": {
      "fn": "ERC721.name",
      "offset": [
        4736,
        4749
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "1258": {
      "fn": "ERC721.name",
      "offset": [
        4736,
        4749
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "1259": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1260": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1261": {
      "fn": "ERC721.name",
      "offset": [
        4768,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1262": {
      "fn": "ERC721.name",
      "offset": [
        4768,
        4773
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1263": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1264": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1265": {
      "fn": "ERC721.name",
      "offset": [
        4768,
        4773
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1266": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1267": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1268": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "1269": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x53F"
    },
    "1272": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1273": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1274": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "1276": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "LT",
      "path": "89"
    },
    "1277": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x514"
    },
    "1280": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1281": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "1284": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1285": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1286": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "1287": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DIV",
      "path": "89"
    },
    "1288": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MUL",
      "path": "89"
    },
    "1289": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1290": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1291": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1292": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1294": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1295": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1296": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x53F"
    },
    "1299": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1300": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1301": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1302": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1303": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1304": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1305": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1307": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1308": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1310": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1312": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "1313": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1314": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1315": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1316": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "1317": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1318": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1319": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1320": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "1322": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1323": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1324": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1326": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1327": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1328": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1329": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "GT",
      "path": "89"
    },
    "1330": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x522"
    },
    "1333": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1334": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1335": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1336": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SUB",
      "path": "89"
    },
    "1337": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "1339": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "AND",
      "path": "89"
    },
    "1340": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1341": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "ADD",
      "path": "89"
    },
    "1342": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1343": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1344": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "POP",
      "path": "89"
    },
    "1345": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "POP",
      "path": "89"
    },
    "1346": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "POP",
      "path": "89"
    },
    "1347": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "POP",
      "path": "89"
    },
    "1348": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "POP",
      "path": "89"
    },
    "1349": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1350": {
      "fn": "ERC721.name",
      "offset": [
        4761,
        4773
      ],
      "op": "POP",
      "path": "89"
    },
    "1351": {
      "fn": "ERC721.name",
      "offset": [
        4690,
        4780
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1352": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        4690,
        4780
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1353": {
      "fn": "ERC721.getApproved",
      "offset": [
        9350,
        9559
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1354": {
      "fn": "ERC721.getApproved",
      "offset": [
        9418,
        9425
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1356": {
      "fn": "ERC721.getApproved",
      "offset": [
        9445,
        9461
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 2,
      "value": "0x554"
    },
    "1359": {
      "fn": "ERC721.getApproved",
      "offset": [
        9453,
        9460
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1360": {
      "fn": "ERC721.getApproved",
      "offset": [
        9445,
        9452
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCD4"
    },
    "1363": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        9445,
        9461
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1364": {
      "branch": 84,
      "fn": "ERC721.getApproved",
      "offset": [
        9445,
        9461
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1365": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x58F"
    },
    "1368": {
      "branch": 84,
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1369": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1371": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1372": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1378": {
      "op": "SHL"
    },
    "1379": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1380": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1381": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "1383": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "ADD",
      "path": "89"
    },
    "1384": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1385": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1386": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1388": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "ADD",
      "path": "89"
    },
    "1389": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1390": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1391": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "SUB",
      "path": "89"
    },
    "1392": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1393": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1394": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2C"
    },
    "1396": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1397": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1398": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1400": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "ADD",
      "path": "89"
    },
    "1401": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1402": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1814"
    },
    "1405": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2C"
    },
    "1407": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1408": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "1409": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1411": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "ADD",
      "path": "89"
    },
    "1412": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1413": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "POP",
      "path": "89"
    },
    "1414": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "POP",
      "path": "89"
    },
    "1415": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1417": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1418": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1419": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1420": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "SUB",
      "path": "89"
    },
    "1421": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1422": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "REVERT",
      "path": "89"
    },
    "1423": {
      "fn": "ERC721.getApproved",
      "offset": [
        9437,
        9510
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1424": {
      "op": "POP"
    },
    "1425": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 3,
      "value": "0x0"
    },
    "1427": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1428": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1429": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1430": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9543
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "1432": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1434": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1435": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1437": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1438": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "1439": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "1440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "op": "SUB"
    },
    "1448": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "AND",
      "path": "89"
    },
    "1449": {
      "fn": "ERC721.getApproved",
      "offset": [
        9528,
        9552
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1450": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        9350,
        9559
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1451": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1452": {
      "fn": "ERC721.approve",
      "offset": [
        8764,
        8777
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1454": {
      "fn": "ERC721.approve",
      "offset": [
        8780,
        8796
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x5B6"
    },
    "1457": {
      "fn": "ERC721.approve",
      "offset": [
        8788,
        8795
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1458": {
      "fn": "ERC721.approve",
      "offset": [
        8780,
        8787
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x74A"
    },
    "1461": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        8780,
        8796
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1462": {
      "fn": "ERC721.approve",
      "offset": [
        8780,
        8796
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1463": {
      "fn": "ERC721.approve",
      "offset": [
        8764,
        8796
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1464": {
      "fn": "ERC721.approve",
      "offset": [
        8764,
        8796
      ],
      "op": "POP",
      "path": "89"
    },
    "1465": {
      "fn": "ERC721.approve",
      "offset": [
        8820,
        8825
      ],
      "op": "DUP1",
      "path": "89",
      "statement": 4
    },
    "1466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1470": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1472": {
      "op": "SHL"
    },
    "1473": {
      "op": "SUB"
    },
    "1474": {
      "fn": "ERC721.approve",
      "offset": [
        8814,
        8825
      ],
      "op": "AND",
      "path": "89"
    },
    "1475": {
      "fn": "ERC721.approve",
      "offset": [
        8814,
        8816
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1476": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1482": {
      "op": "SHL"
    },
    "1483": {
      "op": "SUB"
    },
    "1484": {
      "fn": "ERC721.approve",
      "offset": [
        8814,
        8825
      ],
      "op": "AND",
      "path": "89"
    },
    "1485": {
      "fn": "ERC721.approve",
      "offset": [
        8814,
        8825
      ],
      "op": "EQ",
      "path": "89"
    },
    "1486": {
      "branch": 85,
      "fn": "ERC721.approve",
      "offset": [
        8814,
        8825
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "1487": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x609"
    },
    "1490": {
      "branch": 85,
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1491": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1493": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1494": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1498": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1500": {
      "op": "SHL"
    },
    "1501": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1502": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1503": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "1505": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "ADD",
      "path": "89"
    },
    "1506": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1507": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1508": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1510": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "ADD",
      "path": "89"
    },
    "1511": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1512": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1513": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "SUB",
      "path": "89"
    },
    "1514": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1515": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1516": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x21"
    },
    "1518": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1519": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1520": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1522": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "ADD",
      "path": "89"
    },
    "1523": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1524": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1898"
    },
    "1527": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x21"
    },
    "1529": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1530": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "1531": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1533": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "ADD",
      "path": "89"
    },
    "1534": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1535": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "POP",
      "path": "89"
    },
    "1536": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "POP",
      "path": "89"
    },
    "1537": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1539": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1540": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1541": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1542": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "SUB",
      "path": "89"
    },
    "1543": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1544": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "REVERT",
      "path": "89"
    },
    "1545": {
      "fn": "ERC721.approve",
      "offset": [
        8806,
        8863
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1546": {
      "fn": "ERC721.approve",
      "offset": [
        8898,
        8903
      ],
      "op": "DUP1",
      "path": "89",
      "statement": 5
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "op": "SUB"
    },
    "1555": {
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8903
      ],
      "op": "AND",
      "path": "89"
    },
    "1556": {
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8894
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x61B"
    },
    "1559": {
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8892
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE1"
    },
    "1562": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        8882,
        8894
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1563": {
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8894
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1564": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1568": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1570": {
      "op": "SHL"
    },
    "1571": {
      "op": "SUB"
    },
    "1572": {
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8903
      ],
      "op": "AND",
      "path": "89"
    },
    "1573": {
      "branch": 86,
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8903
      ],
      "op": "EQ",
      "path": "89"
    },
    "1574": {
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8944
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1575": {
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8944
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x63C"
    },
    "1578": {
      "branch": 86,
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8944
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1579": {
      "fn": "ERC721.approve",
      "offset": [
        8882,
        8944
      ],
      "op": "POP",
      "path": "89"
    },
    "1580": {
      "fn": "ERC721.approve",
      "offset": [
        8907,
        8944
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x63C"
    },
    "1583": {
      "fn": "ERC721.approve",
      "offset": [
        8924,
        8929
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1584": {
      "fn": "ERC721.approve",
      "offset": [
        8931,
        8943
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x637"
    },
    "1587": {
      "fn": "ERC721.approve",
      "offset": [
        8931,
        8941
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE1"
    },
    "1590": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        8931,
        8943
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1591": {
      "fn": "ERC721.approve",
      "offset": [
        8931,
        8943
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1592": {
      "fn": "ERC721.approve",
      "offset": [
        8907,
        8923
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCA6"
    },
    "1595": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        8907,
        8944
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1596": {
      "branch": 87,
      "fn": "ERC721.approve",
      "offset": [
        8907,
        8944
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1597": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x677"
    },
    "1600": {
      "branch": 87,
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1601": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1603": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1604": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1610": {
      "op": "SHL"
    },
    "1611": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1612": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1613": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "1615": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "ADD",
      "path": "89"
    },
    "1616": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1617": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1618": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1620": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "ADD",
      "path": "89"
    },
    "1621": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1622": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1623": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "SUB",
      "path": "89"
    },
    "1624": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1625": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1626": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x38"
    },
    "1628": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1629": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1630": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1632": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "ADD",
      "path": "89"
    },
    "1633": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1634": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1767"
    },
    "1637": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x38"
    },
    "1639": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1640": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "1641": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1643": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "ADD",
      "path": "89"
    },
    "1644": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1645": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "POP",
      "path": "89"
    },
    "1646": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "POP",
      "path": "89"
    },
    "1647": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1649": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1650": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1651": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1652": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "SUB",
      "path": "89"
    },
    "1653": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1654": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "REVERT",
      "path": "89"
    },
    "1655": {
      "fn": "ERC721.approve",
      "offset": [
        8874,
        9026
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1656": {
      "fn": "ERC721.approve",
      "offset": [
        9037,
        9058
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 6,
      "value": "0x681"
    },
    "1659": {
      "fn": "ERC721.approve",
      "offset": [
        9046,
        9048
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1660": {
      "fn": "ERC721.approve",
      "offset": [
        9050,
        9057
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1661": {
      "fn": "ERC721.approve",
      "offset": [
        9037,
        9045
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE5"
    },
    "1664": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        9037,
        9058
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1665": {
      "fn": "ERC721.approve",
      "offset": [
        9037,
        9058
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1666": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "POP",
      "path": "89"
    },
    "1667": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "POP",
      "path": "89"
    },
    "1668": {
      "fn": "ERC721.approve",
      "offset": [
        8684,
        9065
      ],
      "op": "POP",
      "path": "89"
    },
    "1669": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        8684,
        9065
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1670": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1671": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7617,
        7624
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1673": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7736,
        7757
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 7,
      "value": "0x692"
    },
    "1676": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7736,
        7748
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "1678": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7736,
        7755
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xD53"
    },
    "1681": {
      "fn": "ERC721.totalSupply",
      "jump": "i",
      "offset": [
        7736,
        7757
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1682": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7736,
        7757
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1683": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7729,
        7757
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1684": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7729,
        7757
      ],
      "op": "POP",
      "path": "89"
    },
    "1685": {
      "fn": "ERC721.totalSupply",
      "offset": [
        7564,
        7764
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1686": {
      "fn": "ERC721.totalSupply",
      "jump": "o",
      "offset": [
        7564,
        7764
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1687": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11061,
        11361
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1688": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11220,
        11261
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 8,
      "value": "0x6A8"
    },
    "1691": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11239,
        11251
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x6A2"
    },
    "1694": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11239,
        11249
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE1"
    },
    "1697": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        11239,
        11251
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1698": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11239,
        11251
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1699": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11253,
        11260
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1700": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11220,
        11238
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xD5E"
    },
    "1703": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        11220,
        11261
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1704": {
      "branch": 88,
      "fn": "ERC721.transferFrom",
      "offset": [
        11220,
        11261
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1705": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x6E3"
    },
    "1708": {
      "branch": 88,
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1709": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1711": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1712": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1718": {
      "op": "SHL"
    },
    "1719": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1720": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1721": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "1723": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "ADD",
      "path": "89"
    },
    "1724": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1725": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1726": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1728": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "ADD",
      "path": "89"
    },
    "1729": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1730": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1731": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "SUB",
      "path": "89"
    },
    "1732": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1733": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1734": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x31"
    },
    "1736": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1737": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1738": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1740": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "ADD",
      "path": "89"
    },
    "1741": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1742": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x18B9"
    },
    "1745": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x31"
    },
    "1747": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1748": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "1749": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1751": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "ADD",
      "path": "89"
    },
    "1752": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1753": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "POP",
      "path": "89"
    },
    "1754": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "POP",
      "path": "89"
    },
    "1755": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1757": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1758": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1759": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1760": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "SUB",
      "path": "89"
    },
    "1761": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1762": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "REVERT",
      "path": "89"
    },
    "1763": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11212,
        11315
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1764": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11326,
        11354
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 9,
      "value": "0x681"
    },
    "1767": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11336,
        11340
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1768": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11342,
        11344
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1769": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11346,
        11353
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1770": {
      "fn": "ERC721.transferFrom",
      "offset": [
        11326,
        11335
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xE02"
    },
    "1773": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        11326,
        11354
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1774": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1781": {
      "op": "SHL"
    },
    "1782": {
      "op": "SUB"
    },
    "1783": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "DUP3",
      "path": "89",
      "statement": 10
    },
    "1784": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "AND",
      "path": "89"
    },
    "1785": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7348,
        7355
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1787": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1788": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1789": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1790": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "1792": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1794": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1795": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1797": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1798": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7394
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "1799": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7404
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x710"
    },
    "1802": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7404
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1803": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7398,
        7403
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1804": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7397
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xF4E"
    },
    "1807": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "i",
      "offset": [
        7374,
        7404
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1808": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7374,
        7404
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1809": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7367,
        7404
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1810": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7367,
        7404
      ],
      "op": "POP",
      "path": "89"
    },
    "1811": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1812": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1813": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1814": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "POP",
      "path": "89"
    },
    "1815": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "offset": [
        7259,
        7411
      ],
      "op": "POP",
      "path": "89"
    },
    "1816": {
      "fn": "ERC721.tokenOfOwnerByIndex",
      "jump": "o",
      "offset": [
        7259,
        7411
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1817": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12010,
        12159
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1818": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 11,
      "value": "0x681"
    },
    "1821": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12130,
        12134
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1822": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12136,
        12138
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1823": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12140,
        12147
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1824": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1826": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1827": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1828": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1830": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "ADD",
      "path": "89"
    },
    "1831": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1833": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1834": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1835": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1837": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1838": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1839": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12152
      ],
      "op": "POP",
      "path": "89"
    },
    "1840": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12113,
        12129
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x9A1"
    },
    "1843": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        12113,
        12152
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1844": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1845": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8169,
        8176
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1847": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8169,
        8176
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1848": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8210,
        8232
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x742"
    },
    "1851": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8210,
        8222
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "1853": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8226,
        8231
      ],
      "op": "DUP5",
      "path": "89"
    },
    "1854": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8210,
        8225
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xF5A"
    },
    "1857": {
      "fn": "ERC721.tokenByIndex",
      "jump": "i",
      "offset": [
        8210,
        8232
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1858": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8210,
        8232
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1859": {
      "op": "POP"
    },
    "1860": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8188,
        8232
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "1861": {
      "fn": "ERC721.tokenByIndex",
      "offset": [
        8102,
        8263
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1862": {
      "op": "POP"
    },
    "1863": {
      "op": "POP"
    },
    "1864": {
      "op": "POP"
    },
    "1865": {
      "fn": "ERC721.tokenByIndex",
      "jump": "o",
      "offset": [
        8102,
        8263
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1866": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4418,
        4585
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1867": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4482,
        4489
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "1869": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 12,
      "value": "0x713"
    },
    "1872": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4525,
        4532
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1873": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1875": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1876": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1877": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "1879": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "ADD",
      "path": "89"
    },
    "1880": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1882": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1883": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1884": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x29"
    },
    "1886": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1887": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1888": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1890": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "ADD",
      "path": "89"
    },
    "1891": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x17C9"
    },
    "1894": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x29"
    },
    "1896": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1897": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "1898": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4520
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "1900": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4520
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1901": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4578
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1902": {
      "fn": "ERC721.ownerOf",
      "offset": [
        4508,
        4524
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xF76"
    },
    "1905": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        4508,
        4578
      ],
      "op": "JUMP",
      "path": "89"
    },
    "1906": {
      "fn": "ERC721.baseURI",
      "offset": [
        6798,
        6885
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "1907": {
      "fn": "ERC721.baseURI",
      "offset": [
        6870,
        6878
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 13,
      "value": "0x9"
    },
    "1909": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1910": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "1911": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "1913": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1914": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "1915": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1917": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "1919": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "1921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1923": {
      "op": "NOT"
    },
    "1924": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "1927": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "1929": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP9",
      "path": "89"
    },
    "1930": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "AND",
      "path": "89"
    },
    "1931": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "1932": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "MUL",
      "path": "89"
    },
    "1933": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "ADD",
      "path": "89"
    },
    "1934": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1935": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP6",
      "path": "89"
    },
    "1936": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "AND",
      "path": "89"
    },
    "1937": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "1938": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1939": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "1940": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DIV",
      "path": "89"
    },
    "1941": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "1942": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP5",
      "path": "89"
    },
    "1943": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "ADD",
      "path": "89"
    },
    "1944": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1945": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1946": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DIV",
      "path": "89"
    },
    "1947": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1948": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "MUL",
      "path": "89"
    },
    "1949": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1950": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "ADD",
      "path": "89"
    },
    "1951": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1952": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "ADD",
      "path": "89"
    },
    "1953": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1954": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1955": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1956": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1957": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP2",
      "path": "89"
    },
    "1958": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1959": {
      "fn": "ERC721.baseURI",
      "offset": [
        6838,
        6851
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "1961": {
      "fn": "ERC721.baseURI",
      "offset": [
        6838,
        6851
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "1962": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1963": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "1964": {
      "fn": "ERC721.baseURI",
      "offset": [
        6870,
        6878
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "1965": {
      "fn": "ERC721.baseURI",
      "offset": [
        6870,
        6878
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1966": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1967": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "ADD",
      "path": "89"
    },
    "1968": {
      "fn": "ERC721.baseURI",
      "offset": [
        6870,
        6878
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1969": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP3",
      "path": "89"
    },
    "1970": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1971": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "1972": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x53F"
    },
    "1975": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1976": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1977": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "1979": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "LT",
      "path": "89"
    },
    "1980": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x514"
    },
    "1983": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "1984": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "1987": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP1",
      "path": "89"
    },
    "1988": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1989": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "1990": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DIV",
      "path": "89"
    },
    "1991": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "MUL",
      "path": "89"
    },
    "1992": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "DUP4",
      "path": "89"
    },
    "1993": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "1994": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1995": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "1997": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "ADD",
      "path": "89"
    },
    "1998": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "1999": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x53F"
    },
    "2002": {
      "fn": "ERC721.baseURI",
      "offset": [
        6863,
        6878
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2003": {
      "fn": "ERC721.balanceOf",
      "offset": [
        3988,
        4199
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2004": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4052,
        4059
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2012": {
      "op": "SHL"
    },
    "2013": {
      "op": "SUB"
    },
    "2014": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4079,
        4098
      ],
      "op": "DUP3",
      "path": "89",
      "statement": 14
    },
    "2015": {
      "branch": 89,
      "fn": "ERC721.balanceOf",
      "offset": [
        4079,
        4098
      ],
      "op": "AND",
      "path": "89"
    },
    "2016": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x81A"
    },
    "2019": {
      "branch": 89,
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2020": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2022": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2023": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2027": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2029": {
      "op": "SHL"
    },
    "2030": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2031": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2032": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "2034": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "ADD",
      "path": "89"
    },
    "2035": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2036": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2037": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2039": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "ADD",
      "path": "89"
    },
    "2040": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2041": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2042": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "SUB",
      "path": "89"
    },
    "2043": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2044": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2045": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2A"
    },
    "2047": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2048": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2049": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2051": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "ADD",
      "path": "89"
    },
    "2052": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2053": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x179F"
    },
    "2056": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2A"
    },
    "2058": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2059": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "2060": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2062": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "ADD",
      "path": "89"
    },
    "2063": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2064": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "POP",
      "path": "89"
    },
    "2065": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "POP",
      "path": "89"
    },
    "2066": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2068": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2069": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2070": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2071": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "SUB",
      "path": "89"
    },
    "2072": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2073": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "REVERT",
      "path": "89"
    },
    "2074": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4071,
        4145
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2077": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2081": {
      "op": "SHL"
    },
    "2082": {
      "op": "SUB"
    },
    "2083": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "DUP3",
      "path": "89",
      "statement": 15
    },
    "2084": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "AND",
      "path": "89"
    },
    "2085": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "2087": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2088": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2089": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2090": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4176
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2092": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2094": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2095": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2097": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2098": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4183
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "2099": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4192
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x713"
    },
    "2102": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4192
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2103": {
      "fn": "ERC721.balanceOf",
      "offset": [
        4163,
        4190
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xD53"
    },
    "2106": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        4163,
        4192
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2107": {
      "fn": "ERC721.symbol",
      "offset": [
        4889,
        4983
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2108": {
      "fn": "ERC721.symbol",
      "offset": [
        4969,
        4976
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 16,
      "value": "0x7"
    },
    "2110": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2111": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2112": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2114": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2115": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2116": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2118": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "2120": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "2122": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2124": {
      "op": "NOT"
    },
    "2125": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "2128": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2130": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP9",
      "path": "89"
    },
    "2131": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "AND",
      "path": "89"
    },
    "2132": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2133": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "MUL",
      "path": "89"
    },
    "2134": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "ADD",
      "path": "89"
    },
    "2135": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2136": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP6",
      "path": "89"
    },
    "2137": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "AND",
      "path": "89"
    },
    "2138": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "2139": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2140": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "2141": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DIV",
      "path": "89"
    },
    "2142": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "2143": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2144": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "ADD",
      "path": "89"
    },
    "2145": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2146": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2147": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DIV",
      "path": "89"
    },
    "2148": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2149": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "MUL",
      "path": "89"
    },
    "2150": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2151": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "ADD",
      "path": "89"
    },
    "2152": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2153": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "ADD",
      "path": "89"
    },
    "2154": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2155": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2156": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2157": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2158": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2159": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2160": {
      "fn": "ERC721.symbol",
      "offset": [
        4937,
        4950
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "2162": {
      "fn": "ERC721.symbol",
      "offset": [
        4937,
        4950
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "2163": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2164": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2165": {
      "fn": "ERC721.symbol",
      "offset": [
        4969,
        4976
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2166": {
      "fn": "ERC721.symbol",
      "offset": [
        4969,
        4976
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2167": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2168": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "ADD",
      "path": "89"
    },
    "2169": {
      "fn": "ERC721.symbol",
      "offset": [
        4969,
        4976
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2170": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2171": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2172": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2173": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x53F"
    },
    "2176": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2177": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2178": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "2180": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "LT",
      "path": "89"
    },
    "2181": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x514"
    },
    "2184": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2185": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "2188": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2189": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2190": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2191": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DIV",
      "path": "89"
    },
    "2192": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "MUL",
      "path": "89"
    },
    "2193": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2194": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2195": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2196": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2198": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "ADD",
      "path": "89"
    },
    "2199": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2200": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x53F"
    },
    "2203": {
      "fn": "ERC721.symbol",
      "offset": [
        4962,
        4976
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2204": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2205": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9972,
        9984
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 17,
      "value": "0x8A4"
    },
    "2208": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9972,
        9982
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE1"
    },
    "2211": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        9972,
        9984
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2212": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9972,
        9984
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "op": "SUB"
    },
    "2221": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9960,
        9984
      ],
      "op": "AND",
      "path": "89"
    },
    "2222": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9960,
        9968
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2229": {
      "op": "SHL"
    },
    "2230": {
      "op": "SUB"
    },
    "2231": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9960,
        9984
      ],
      "op": "AND",
      "path": "89"
    },
    "2232": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9960,
        9984
      ],
      "op": "EQ",
      "path": "89"
    },
    "2233": {
      "branch": 90,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9960,
        9984
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2234": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x90A"
    },
    "2237": {
      "branch": 90,
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2238": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2240": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2241": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2242": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2250": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2251": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2253": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "2255": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2256": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "ADD",
      "path": "89"
    },
    "2257": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2258": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x19"
    },
    "2260": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x24"
    },
    "2262": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2263": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "ADD",
      "path": "89"
    },
    "2264": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2265": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH32",
      "path": "89",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2298": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x44"
    },
    "2300": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2301": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "ADD",
      "path": "89"
    },
    "2302": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2303": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2304": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2305": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2306": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2307": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2308": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "SUB",
      "path": "89"
    },
    "2309": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x64"
    },
    "2311": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "ADD",
      "path": "89"
    },
    "2312": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2313": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "REVERT",
      "path": "89"
    },
    "2314": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9952,
        10014
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2315": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10070,
        10078
      ],
      "op": "DUP1",
      "path": "89",
      "statement": 18
    },
    "2316": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10043
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x5"
    },
    "2318": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "2320": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10044,
        10056
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x917"
    },
    "2323": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10044,
        10054
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE1"
    },
    "2326": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        10044,
        10056
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2327": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10044,
        10056
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2334": {
      "op": "SHL"
    },
    "2335": {
      "op": "SUB"
    },
    "2336": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2337": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2338": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "AND",
      "path": "89"
    },
    "2339": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2340": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2341": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2343": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2344": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2345": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "ADD",
      "path": "89"
    },
    "2346": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "2347": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2348": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "2349": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2350": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2352": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2353": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2354": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "ADD",
      "path": "89"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2357": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2358": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2359": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10057
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "2360": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2361": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "DUP8",
      "path": "89"
    },
    "2362": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "AND",
      "path": "89"
    },
    "2363": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2364": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2365": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2366": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2367": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2368": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "2369": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2370": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2371": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10067
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "2372": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2373": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2376": {
      "op": "NOT"
    },
    "2377": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "AND",
      "path": "89"
    },
    "2378": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2379": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2380": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2381": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2382": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2383": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2384": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "OR",
      "path": "89"
    },
    "2385": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2386": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2387": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10025,
        10078
      ],
      "op": "SSTORE",
      "path": "89"
    },
    "2388": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10108,
        10120
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 19,
      "value": "0x95B"
    },
    "2391": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10108,
        10118
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE1"
    },
    "2394": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        10108,
        10120
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2395": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10108,
        10120
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2396": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2402": {
      "op": "SHL"
    },
    "2403": {
      "op": "SUB"
    },
    "2404": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "AND",
      "path": "89"
    },
    "2405": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "PUSH32",
      "path": "89",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2438": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10132,
        10140
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2441": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2444": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2446": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2447": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2448": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "ADD",
      "path": "89"
    },
    "2451": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2452": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "POP",
      "path": "89"
    },
    "2453": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "POP",
      "path": "89"
    },
    "2454": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2456": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2457": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2458": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2459": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SUB",
      "path": "89"
    },
    "2460": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2461": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        10093,
        10141
      ],
      "op": "LOG3",
      "path": "89"
    },
    "2462": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "POP",
      "path": "89"
    },
    "2463": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        9858,
        10148
      ],
      "op": "POP",
      "path": "89"
    },
    "2464": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        9858,
        10148
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2465": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2466": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13013,
        13054
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 20,
      "value": "0x9B2"
    },
    "2469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13032,
        13044
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x9AC"
    },
    "2472": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13032,
        13042
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE1"
    },
    "2475": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        13032,
        13044
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13032,
        13044
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2477": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13046,
        13053
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2478": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13013,
        13031
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xD5E"
    },
    "2481": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        13013,
        13054
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2482": {
      "branch": 91,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13013,
        13054
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x9ED"
    },
    "2486": {
      "branch": 91,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2487": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2496": {
      "op": "SHL"
    },
    "2497": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2498": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2499": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "2501": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "ADD",
      "path": "89"
    },
    "2502": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2503": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2504": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2506": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "ADD",
      "path": "89"
    },
    "2507": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2508": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2509": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "SUB",
      "path": "89"
    },
    "2510": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2511": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2512": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x31"
    },
    "2514": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2515": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2516": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2518": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "ADD",
      "path": "89"
    },
    "2519": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2520": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x18B9"
    },
    "2523": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x31"
    },
    "2525": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2526": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "2527": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2529": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "ADD",
      "path": "89"
    },
    "2530": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2531": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "POP",
      "path": "89"
    },
    "2532": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "POP",
      "path": "89"
    },
    "2533": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2535": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2536": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2537": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2538": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "SUB",
      "path": "89"
    },
    "2539": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2540": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "REVERT",
      "path": "89"
    },
    "2541": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13005,
        13108
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2542": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13118,
        13157
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 21,
      "value": "0x9F9"
    },
    "2545": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13132,
        13136
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2546": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13138,
        13140
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2547": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13142,
        13149
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2548": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13151,
        13156
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2549": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13118,
        13131
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xF8D"
    },
    "2552": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        13118,
        13157
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2553": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        13118,
        13157
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2554": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "POP",
      "path": "89"
    },
    "2555": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "POP",
      "path": "89"
    },
    "2556": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "POP",
      "path": "89"
    },
    "2557": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        12882,
        13164
      ],
      "op": "POP",
      "path": "89"
    },
    "2558": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        12882,
        13164
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2559": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5891,
        5904
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "2562": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5924,
        5940
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 22,
      "value": "0xA0A"
    },
    "2565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5932,
        5939
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2566": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5924,
        5931
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCD4"
    },
    "2569": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        5924,
        5940
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2570": {
      "branch": 92,
      "fn": "ERC721.tokenURI",
      "offset": [
        5924,
        5940
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2571": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xA45"
    },
    "2574": {
      "branch": 92,
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2577": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2578": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2584": {
      "op": "SHL"
    },
    "2585": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2587": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "2589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "ADD",
      "path": "89"
    },
    "2590": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2591": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2594": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "ADD",
      "path": "89"
    },
    "2595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2596": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2597": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "SUB",
      "path": "89"
    },
    "2598": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2599": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2600": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2F"
    },
    "2602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2603": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2606": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "ADD",
      "path": "89"
    },
    "2607": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2608": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1869"
    },
    "2611": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2F"
    },
    "2613": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2614": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "2615": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2617": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "ADD",
      "path": "89"
    },
    "2618": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2619": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "POP",
      "path": "89"
    },
    "2620": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "POP",
      "path": "89"
    },
    "2621": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2623": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2624": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2625": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2626": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "SUB",
      "path": "89"
    },
    "2627": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2628": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "REVERT",
      "path": "89"
    },
    "2629": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5916,
        5992
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2630": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "2632": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2633": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2634": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2635": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6039
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x8"
    },
    "2637": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2639": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2640": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2641": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2642": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2644": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2645": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2646": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2647": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "2648": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2649": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2650": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2651": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2652": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "2654": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2658": {
      "op": "NOT"
    },
    "2659": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "2662": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2664": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP7",
      "path": "89"
    },
    "2665": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "AND",
      "path": "89"
    },
    "2666": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2667": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MUL",
      "path": "89"
    },
    "2668": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2669": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2670": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "2671": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "AND",
      "path": "89"
    },
    "2672": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2673": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2674": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2675": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DIV",
      "path": "89"
    },
    "2676": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2677": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2678": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2679": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2680": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2681": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DIV",
      "path": "89"
    },
    "2682": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2683": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MUL",
      "path": "89"
    },
    "2684": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2685": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2686": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2687": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2688": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2689": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "2690": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2691": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2692": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2693": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2694": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6026
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "2696": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6026
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "2697": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2698": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2699": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2700": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6029,
        6048
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2701": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2702": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2703": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2704": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xADA"
    },
    "2707": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2708": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2709": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "2711": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "LT",
      "path": "89"
    },
    "2712": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xAAF"
    },
    "2715": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2716": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "2719": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2720": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2721": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2722": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DIV",
      "path": "89"
    },
    "2723": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MUL",
      "path": "89"
    },
    "2724": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2725": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2726": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2727": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2729": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2730": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2731": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xADA"
    },
    "2734": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2735": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2736": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2737": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2738": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2739": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2740": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "2742": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2743": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2745": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "2747": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "2748": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2749": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2750": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2751": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2752": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2753": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2754": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2755": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2757": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2758": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2759": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2761": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2762": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2763": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2764": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "GT",
      "path": "89"
    },
    "2765": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xABD"
    },
    "2768": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2769": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2770": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2771": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SUB",
      "path": "89"
    },
    "2772": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "2774": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "AND",
      "path": "89"
    },
    "2775": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2776": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "ADD",
      "path": "89"
    },
    "2777": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2778": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2779": {
      "op": "POP"
    },
    "2780": {
      "op": "POP"
    },
    "2781": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6127,
        6135
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x9"
    },
    "2783": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2784": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "2785": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6003,
        6048
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "op": "POP"
    },
    "2788": {
      "op": "POP"
    },
    "2789": {
      "op": "POP"
    },
    "2790": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2794": {
      "op": "NOT"
    },
    "2795": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "2798": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2800": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2801": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "AND",
      "path": "89"
    },
    "2802": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2803": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "MUL",
      "path": "89"
    },
    "2804": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "ADD",
      "path": "89"
    },
    "2805": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2806": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2807": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "AND",
      "path": "89"
    },
    "2808": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6121,
        6143
      ],
      "op": "DIV",
      "path": "89"
    },
    "2809": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6117,
        6191
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xB03"
    },
    "2812": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6117,
        6191
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2813": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6171,
        6180
      ],
      "op": "SWAP1",
      "path": "89",
      "statement": 23
    },
    "2814": {
      "op": "POP"
    },
    "2815": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6164,
        6180
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x4AE"
    },
    "2818": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6164,
        6180
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2819": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6117,
        6191
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2820": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6293,
        6316
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2821": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6293,
        6316
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2822": {
      "branch": 93,
      "fn": "ERC721.tokenURI",
      "offset": [
        6293,
        6320
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2823": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6289,
        6399
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xBD4"
    },
    "2826": {
      "branch": 93,
      "fn": "ERC721.tokenURI",
      "offset": [
        6289,
        6399
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2827": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6367,
        6375
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 24,
      "value": "0x9"
    },
    "2829": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6377,
        6386
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2830": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "2832": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2833": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2835": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2836": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2837": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2838": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2839": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2840": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2842": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2843": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2845": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "AND",
      "path": "89"
    },
    "2846": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2847": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "2850": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MUL",
      "path": "89"
    },
    "2851": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SUB",
      "path": "89"
    },
    "2852": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "AND",
      "path": "89"
    },
    "2853": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "2855": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2856": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DIV",
      "path": "89"
    },
    "2857": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2858": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "2859": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xB6B"
    },
    "2862": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2863": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2864": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "2866": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "LT",
      "path": "89"
    },
    "2867": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xB49"
    },
    "2870": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2871": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "2874": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2875": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2876": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2877": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DIV",
      "path": "89"
    },
    "2878": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MUL",
      "path": "89"
    },
    "2879": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2880": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2881": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2882": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2883": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2884": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2885": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xB6B"
    },
    "2888": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2889": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2890": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2891": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2892": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2893": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2894": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "2896": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2897": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2899": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "2901": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "2902": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2903": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2904": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2905": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "2906": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2907": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2908": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2909": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2911": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2912": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2913": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2915": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2916": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2917": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2918": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "GT",
      "path": "89"
    },
    "2919": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xB57"
    },
    "2922": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2923": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "op": "POP"
    },
    "2926": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2927": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2928": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2930": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2931": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2932": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2933": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2934": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2935": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2936": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2937": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2939": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2940": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "LT",
      "path": "89"
    },
    "2941": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xB97"
    },
    "2944": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "2945": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2946": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2947": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2948": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2951": {
      "op": "NOT"
    },
    "2952": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "2953": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "2954": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2955": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2956": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2958": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2959": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2960": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2961": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "2962": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "2963": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xB78"
    },
    "2966": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMP",
      "path": "89"
    },
    "2967": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "2968": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "2970": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "2971": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "2973": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SUB",
      "path": "89"
    },
    "2974": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "2977": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "EXP",
      "path": "89"
    },
    "2978": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SUB",
      "path": "89"
    },
    "2979": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2980": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "NOT",
      "path": "89"
    },
    "2981": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2982": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2983": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "AND",
      "path": "89"
    },
    "2984": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP2",
      "path": "89"
    },
    "2985": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP5",
      "path": "89"
    },
    "2986": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "2987": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "AND",
      "path": "89"
    },
    "2988": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP1",
      "path": "89"
    },
    "2989": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP3",
      "path": "89"
    },
    "2990": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "OR",
      "path": "89"
    },
    "2991": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP6",
      "path": "89"
    },
    "2992": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "2993": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "2994": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "2995": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "2996": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "2997": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "2998": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "2999": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3000": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "3001": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "ADD",
      "path": "89"
    },
    "3002": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "3003": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "3004": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "3005": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "POP",
      "path": "89"
    },
    "3006": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3008": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3009": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3011": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3012": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3013": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SUB",
      "path": "89"
    },
    "3014": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SUB",
      "path": "89"
    },
    "3015": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3016": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3017": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3018": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3020": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6350,
        6387
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3021": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6336,
        6388
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3022": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6336,
        6388
      ],
      "op": "POP",
      "path": "89"
    },
    "3023": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6336,
        6388
      ],
      "op": "POP",
      "path": "89"
    },
    "3024": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6336,
        6388
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x4AE"
    },
    "3027": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6336,
        6388
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3028": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6289,
        6399
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3029": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6529,
        6537
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 25,
      "value": "0x9"
    },
    "3031": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6539,
        6557
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xBDF"
    },
    "3034": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6539,
        6546
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3035": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6539,
        6555
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xFDF"
    },
    "3038": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        6539,
        6557
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3039": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6539,
        6557
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3040": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3042": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3043": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3045": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3046": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3047": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3048": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3049": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "3050": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "3052": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3053": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "3055": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "AND",
      "path": "89"
    },
    "3056": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "3057": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "3060": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MUL",
      "path": "89"
    },
    "3061": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SUB",
      "path": "89"
    },
    "3062": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "AND",
      "path": "89"
    },
    "3063": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "3065": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3066": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DIV",
      "path": "89"
    },
    "3067": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3068": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "3069": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xC3D"
    },
    "3072": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3073": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3074": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "3076": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "LT",
      "path": "89"
    },
    "3077": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xC1B"
    },
    "3080": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3081": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "3084": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3085": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3086": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "3087": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DIV",
      "path": "89"
    },
    "3088": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MUL",
      "path": "89"
    },
    "3089": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3090": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3091": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3092": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3093": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3094": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3095": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xC3D"
    },
    "3098": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3099": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3100": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3101": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3102": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3103": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3104": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3106": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3107": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3109": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3111": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "3112": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3113": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3114": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3115": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "3116": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3117": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3118": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3119": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "3121": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3122": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3123": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3125": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3126": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3127": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3128": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "GT",
      "path": "89"
    },
    "3129": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xC29"
    },
    "3132": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3133": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "op": "POP"
    },
    "3136": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3137": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3138": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3140": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3141": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3142": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3143": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3144": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3145": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3146": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3147": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3149": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3150": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "LT",
      "path": "89"
    },
    "3151": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xC69"
    },
    "3154": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3155": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3156": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3157": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3158": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3161": {
      "op": "NOT"
    },
    "3162": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3163": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "3164": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3165": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3166": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3168": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3169": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3170": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3171": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3172": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3173": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xC4A"
    },
    "3176": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3177": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3178": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "3180": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3181": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3183": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SUB",
      "path": "89"
    },
    "3184": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "3187": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "EXP",
      "path": "89"
    },
    "3188": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SUB",
      "path": "89"
    },
    "3189": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3190": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "NOT",
      "path": "89"
    },
    "3191": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3192": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3193": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "AND",
      "path": "89"
    },
    "3194": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3195": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3196": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3197": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "AND",
      "path": "89"
    },
    "3198": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3199": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3200": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "OR",
      "path": "89"
    },
    "3201": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP6",
      "path": "89"
    },
    "3202": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3203": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3204": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3205": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3206": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3207": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3208": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3209": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3210": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3211": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "ADD",
      "path": "89"
    },
    "3212": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "3213": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3214": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3215": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "POP",
      "path": "89"
    },
    "3216": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3218": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3219": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3221": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3222": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3223": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SUB",
      "path": "89"
    },
    "3224": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SUB",
      "path": "89"
    },
    "3225": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3226": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3227": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3228": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3230": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6512,
        6558
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3231": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6498,
        6559
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3232": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6498,
        6559
      ],
      "op": "POP",
      "path": "89"
    },
    "3233": {
      "fn": "ERC721.tokenURI",
      "offset": [
        6498,
        6559
      ],
      "op": "POP",
      "path": "89"
    },
    "3234": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3235": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3236": {
      "fn": "ERC721.tokenURI",
      "offset": [
        5826,
        6566
      ],
      "op": "POP",
      "path": "89"
    },
    "3237": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        5826,
        6566
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3238": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10470,
        10624
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3241": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3245": {
      "op": "SHL"
    },
    "3246": {
      "op": "SUB"
    },
    "3247": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "SWAP2",
      "path": "89",
      "statement": 26
    },
    "3248": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3249": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "AND",
      "path": "89"
    },
    "3250": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10559,
        10563
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3252": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3253": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3254": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3255": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10600
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x5"
    },
    "3257": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3259": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3260": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3261": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3262": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3264": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3265": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3266": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10607
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "3267": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "3268": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3269": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "3270": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "AND",
      "path": "89"
    },
    "3271": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3272": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3273": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3274": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3275": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3276": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3277": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "3278": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "3279": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0xFF"
    },
    "3281": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "AND",
      "path": "89"
    },
    "3282": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        10582,
        10617
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3283": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "o",
      "offset": [
        10470,
        10624
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3284": {
      "fn": "ERC721._exists",
      "offset": [
        14333,
        14450
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3285": {
      "fn": "ERC721._exists",
      "offset": [
        14390,
        14394
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3287": {
      "fn": "ERC721._exists",
      "offset": [
        14413,
        14443
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 27,
      "value": "0x713"
    },
    "3290": {
      "fn": "ERC721._exists",
      "offset": [
        14413,
        14425
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "3292": {
      "fn": "ERC721._exists",
      "offset": [
        14435,
        14442
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3293": {
      "fn": "ERC721._exists",
      "offset": [
        14413,
        14434
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10BA"
    },
    "3296": {
      "fn": "ERC721._exists",
      "jump": "i",
      "offset": [
        14413,
        14443
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3297": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        839
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "3298": {
      "fn": "Context._msgSender",
      "offset": [
        822,
        832
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 28
    },
    "3299": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        839
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "3300": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        735,
        839
      ],
      "op": "JUMP",
      "path": "10"
    },
    "3301": {
      "fn": "ERC721._approve",
      "offset": [
        21357,
        21512
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3302": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 29,
      "value": "0x0"
    },
    "3304": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3305": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3306": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3307": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21437
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "3309": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3311": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3312": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3314": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3315": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "3316": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3317": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "SLOAD",
      "path": "89"
    },
    "3318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3324": {
      "op": "SHL"
    },
    "3325": {
      "op": "SUB"
    },
    "3326": {
      "op": "NOT"
    },
    "3327": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "AND",
      "path": "89"
    },
    "3328": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3332": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3334": {
      "op": "SHL"
    },
    "3335": {
      "op": "SUB"
    },
    "3336": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3337": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "AND",
      "path": "89"
    },
    "3338": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3339": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3340": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "OR",
      "path": "89"
    },
    "3341": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3342": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3343": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21451
      ],
      "op": "SSTORE",
      "path": "89"
    },
    "3344": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3345": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3346": {
      "fn": "ERC721._approve",
      "offset": [
        21475,
        21491
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 30,
      "value": "0xD1A"
    },
    "3349": {
      "fn": "ERC721._approve",
      "offset": [
        21422,
        21446
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3350": {
      "fn": "ERC721._approve",
      "offset": [
        21475,
        21482
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x74A"
    },
    "3353": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        21475,
        21491
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3354": {
      "fn": "ERC721._approve",
      "offset": [
        21475,
        21491
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3357": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3361": {
      "op": "SHL"
    },
    "3362": {
      "op": "SUB"
    },
    "3363": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "AND",
      "path": "89"
    },
    "3364": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "PUSH32",
      "path": "89",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "3397": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3399": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3400": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3402": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3403": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3404": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3405": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "SUB",
      "path": "89"
    },
    "3406": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3407": {
      "fn": "ERC721._approve",
      "offset": [
        21466,
        21505
      ],
      "op": "LOG4",
      "path": "89"
    },
    "3408": {
      "fn": "ERC721._approve",
      "offset": [
        21357,
        21512
      ],
      "op": "POP",
      "path": "89"
    },
    "3409": {
      "fn": "ERC721._approve",
      "offset": [
        21357,
        21512
      ],
      "op": "POP",
      "path": "89"
    },
    "3410": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        21357,
        21512
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3411": {
      "fn": "EnumerableMap.length",
      "offset": [
        6990,
        7111
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "3412": {
      "fn": "EnumerableMap.length",
      "offset": [
        7059,
        7066
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "3414": {
      "fn": "EnumerableMap.length",
      "offset": [
        7085,
        7104
      ],
      "op": "PUSH2",
      "path": "105",
      "statement": 31,
      "value": "0x713"
    },
    "3417": {
      "fn": "EnumerableMap.length",
      "offset": [
        7093,
        7096
      ],
      "op": "DUP3",
      "path": "105"
    },
    "3418": {
      "fn": "EnumerableMap.length",
      "offset": [
        7085,
        7092
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x10C6"
    },
    "3421": {
      "fn": "EnumerableMap.length",
      "jump": "i",
      "offset": [
        7085,
        7104
      ],
      "op": "JUMP",
      "path": "105"
    },
    "3422": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14811,
        15140
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3423": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14896,
        14900
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3425": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14920,
        14936
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 32,
      "value": "0xD69"
    },
    "3428": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14928,
        14935
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3429": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14920,
        14927
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCD4"
    },
    "3432": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        14920,
        14936
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3433": {
      "branch": 94,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14920,
        14936
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3434": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDA4"
    },
    "3437": {
      "branch": 94,
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3438": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3440": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3441": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3447": {
      "op": "SHL"
    },
    "3448": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3449": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3450": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "3452": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "ADD",
      "path": "89"
    },
    "3453": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3454": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3455": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3457": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "ADD",
      "path": "89"
    },
    "3458": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3459": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3460": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "SUB",
      "path": "89"
    },
    "3461": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3462": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3463": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2C"
    },
    "3465": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3466": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3467": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3469": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "ADD",
      "path": "89"
    },
    "3470": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3471": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x173B"
    },
    "3474": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2C"
    },
    "3476": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3477": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "3478": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3480": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "ADD",
      "path": "89"
    },
    "3481": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3482": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "POP",
      "path": "89"
    },
    "3483": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "POP",
      "path": "89"
    },
    "3484": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3486": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3487": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3488": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3489": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "SUB",
      "path": "89"
    },
    "3490": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3491": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "REVERT",
      "path": "89"
    },
    "3492": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14912,
        14985
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3493": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14995,
        15008
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3495": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15011,
        15027
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDAF"
    },
    "3498": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15019,
        15026
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3499": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15011,
        15018
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x74A"
    },
    "3502": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        15011,
        15027
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3503": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15011,
        15027
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3504": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14995,
        15027
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3505": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14995,
        15027
      ],
      "op": "POP",
      "path": "89"
    },
    "3506": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15056,
        15061
      ],
      "op": "DUP1",
      "path": "89",
      "statement": 33
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3513": {
      "op": "SHL"
    },
    "3514": {
      "op": "SUB"
    },
    "3515": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15061
      ],
      "op": "AND",
      "path": "89"
    },
    "3516": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15052
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3517": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3519": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3523": {
      "op": "SHL"
    },
    "3524": {
      "op": "SUB"
    },
    "3525": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15061
      ],
      "op": "AND",
      "path": "89"
    },
    "3526": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15061
      ],
      "op": "EQ",
      "path": "89"
    },
    "3527": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15096
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3528": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15096
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDEA"
    },
    "3531": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15096
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3532": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15096
      ],
      "op": "POP",
      "path": "89"
    },
    "3533": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15089,
        15096
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3540": {
      "op": "SHL"
    },
    "3541": {
      "op": "SUB"
    },
    "3542": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15065,
        15096
      ],
      "op": "AND",
      "path": "89"
    },
    "3543": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15065,
        15085
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDDF"
    },
    "3546": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15077,
        15084
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3547": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15065,
        15076
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x549"
    },
    "3550": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        15065,
        15085
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3551": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15065,
        15085
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3558": {
      "op": "SHL"
    },
    "3559": {
      "op": "SUB"
    },
    "3560": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15065,
        15096
      ],
      "op": "AND",
      "path": "89"
    },
    "3561": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15065,
        15096
      ],
      "op": "EQ",
      "path": "89"
    },
    "3562": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15096
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3563": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15132
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3564": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15132
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDFA"
    },
    "3567": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15132
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3568": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15045,
        15132
      ],
      "op": "POP",
      "path": "89"
    },
    "3569": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15100,
        15132
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDFA"
    },
    "3572": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15117,
        15122
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3573": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15124,
        15131
      ],
      "op": "DUP6",
      "path": "89"
    },
    "3574": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15100,
        15116
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCA6"
    },
    "3577": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        15100,
        15132
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3578": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15100,
        15132
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3579": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        15037,
        15133
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "3580": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        14811,
        15140
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "3581": {
      "op": "POP"
    },
    "3582": {
      "op": "POP"
    },
    "3583": {
      "op": "POP"
    },
    "3584": {
      "op": "POP"
    },
    "3585": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        14811,
        15140
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3586": {
      "fn": "ERC721._transfer",
      "offset": [
        18323,
        18882
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3587": {
      "fn": "ERC721._transfer",
      "offset": [
        18440,
        18444
      ],
      "op": "DUP3",
      "path": "89",
      "statement": 34
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3594": {
      "op": "SHL"
    },
    "3595": {
      "op": "SUB"
    },
    "3596": {
      "fn": "ERC721._transfer",
      "offset": [
        18420,
        18444
      ],
      "op": "AND",
      "path": "89"
    },
    "3597": {
      "fn": "ERC721._transfer",
      "offset": [
        18420,
        18436
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xE15"
    },
    "3600": {
      "fn": "ERC721._transfer",
      "offset": [
        18428,
        18435
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3601": {
      "fn": "ERC721._transfer",
      "offset": [
        18420,
        18427
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x74A"
    },
    "3604": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        18420,
        18436
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3605": {
      "fn": "ERC721._transfer",
      "offset": [
        18420,
        18436
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3612": {
      "op": "SHL"
    },
    "3613": {
      "op": "SUB"
    },
    "3614": {
      "fn": "ERC721._transfer",
      "offset": [
        18420,
        18444
      ],
      "op": "AND",
      "path": "89"
    },
    "3615": {
      "branch": 95,
      "fn": "ERC721._transfer",
      "offset": [
        18420,
        18444
      ],
      "op": "EQ",
      "path": "89"
    },
    "3616": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xE5A"
    },
    "3619": {
      "branch": 95,
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3620": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3622": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3623": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3629": {
      "op": "SHL"
    },
    "3630": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3631": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3632": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "3634": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "ADD",
      "path": "89"
    },
    "3635": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3636": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3637": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3639": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "ADD",
      "path": "89"
    },
    "3640": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3641": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3642": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "SUB",
      "path": "89"
    },
    "3643": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3644": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3645": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x29"
    },
    "3647": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3648": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3649": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3651": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "ADD",
      "path": "89"
    },
    "3652": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3653": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1840"
    },
    "3656": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x29"
    },
    "3658": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3659": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "3660": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3662": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "ADD",
      "path": "89"
    },
    "3663": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3664": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "POP",
      "path": "89"
    },
    "3665": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "POP",
      "path": "89"
    },
    "3666": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3668": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3669": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3670": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3671": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "SUB",
      "path": "89"
    },
    "3672": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3673": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "REVERT",
      "path": "89"
    },
    "3674": {
      "fn": "ERC721._transfer",
      "offset": [
        18412,
        18490
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3681": {
      "op": "SHL"
    },
    "3682": {
      "op": "SUB"
    },
    "3683": {
      "fn": "ERC721._transfer",
      "offset": [
        18508,
        18524
      ],
      "op": "DUP3",
      "path": "89",
      "statement": 35
    },
    "3684": {
      "branch": 96,
      "fn": "ERC721._transfer",
      "offset": [
        18508,
        18524
      ],
      "op": "AND",
      "path": "89"
    },
    "3685": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xE9F"
    },
    "3688": {
      "branch": 96,
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "3689": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3691": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3692": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3696": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3698": {
      "op": "SHL"
    },
    "3699": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3700": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3701": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "3703": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "ADD",
      "path": "89"
    },
    "3704": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3705": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3706": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3708": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "ADD",
      "path": "89"
    },
    "3709": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3710": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3711": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "SUB",
      "path": "89"
    },
    "3712": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3713": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3714": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x24"
    },
    "3716": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3717": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3718": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3720": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "ADD",
      "path": "89"
    },
    "3721": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3722": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1717"
    },
    "3725": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x24"
    },
    "3727": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3728": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "3729": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3731": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "ADD",
      "path": "89"
    },
    "3732": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3733": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "POP",
      "path": "89"
    },
    "3734": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "POP",
      "path": "89"
    },
    "3735": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3737": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3738": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3739": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3740": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "SUB",
      "path": "89"
    },
    "3741": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3742": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "REVERT",
      "path": "89"
    },
    "3743": {
      "fn": "ERC721._transfer",
      "offset": [
        18500,
        18565
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3744": {
      "fn": "ERC721._transfer",
      "offset": [
        18576,
        18615
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 36,
      "value": "0xEAA"
    },
    "3747": {
      "fn": "ERC721._transfer",
      "offset": [
        18597,
        18601
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3748": {
      "fn": "ERC721._transfer",
      "offset": [
        18603,
        18605
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3749": {
      "fn": "ERC721._transfer",
      "offset": [
        18607,
        18614
      ],
      "op": "DUP4",
      "path": "89"
    },
    "3750": {
      "fn": "ERC721._transfer",
      "offset": [
        18576,
        18596
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x681"
    },
    "3753": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        18576,
        18615
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3754": {
      "fn": "ERC721._transfer",
      "offset": [
        18576,
        18615
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3755": {
      "fn": "ERC721._transfer",
      "offset": [
        18677,
        18706
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 37,
      "value": "0xEB5"
    },
    "3758": {
      "fn": "ERC721._transfer",
      "offset": [
        18694,
        18695
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3760": {
      "fn": "ERC721._transfer",
      "offset": [
        18698,
        18705
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3761": {
      "fn": "ERC721._transfer",
      "offset": [
        18677,
        18685
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE5"
    },
    "3764": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        18677,
        18706
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3765": {
      "fn": "ERC721._transfer",
      "offset": [
        18677,
        18706
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3768": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "op": "SUB"
    },
    "3774": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "DUP4",
      "path": "89",
      "statement": 38
    },
    "3775": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "AND",
      "path": "89"
    },
    "3776": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3778": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3779": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3780": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3781": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18730
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "3783": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3785": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3786": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3788": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3789": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18736
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "3790": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18752
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xED7"
    },
    "3793": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18752
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3794": {
      "fn": "ERC721._transfer",
      "offset": [
        18744,
        18751
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3795": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18743
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10CA"
    },
    "3798": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        18717,
        18752
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3799": {
      "fn": "ERC721._transfer",
      "offset": [
        18717,
        18752
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3800": {
      "op": "POP"
    },
    "3801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3807": {
      "op": "SHL"
    },
    "3808": {
      "op": "SUB"
    },
    "3809": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "DUP3",
      "path": "89",
      "statement": 39
    },
    "3810": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "AND",
      "path": "89"
    },
    "3811": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "3813": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3814": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "DUP2",
      "path": "89"
    },
    "3815": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3816": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18775
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "3818": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "3820": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "3821": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3823": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3824": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18779
      ],
      "op": "KECCAK256",
      "path": "89"
    },
    "3825": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18792
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xEFA"
    },
    "3828": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18792
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3829": {
      "fn": "ERC721._transfer",
      "offset": [
        18784,
        18791
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3830": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18783
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10D6"
    },
    "3833": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        18762,
        18792
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3834": {
      "fn": "ERC721._transfer",
      "offset": [
        18762,
        18792
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3835": {
      "op": "POP"
    },
    "3836": {
      "fn": "ERC721._transfer",
      "offset": [
        18803,
        18832
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 40,
      "value": "0xF07"
    },
    "3839": {
      "fn": "ERC721._transfer",
      "offset": [
        18803,
        18815
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x2"
    },
    "3841": {
      "fn": "ERC721._transfer",
      "offset": [
        18820,
        18827
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3842": {
      "fn": "ERC721._transfer",
      "offset": [
        18829,
        18831
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3843": {
      "fn": "ERC721._transfer",
      "offset": [
        18803,
        18819
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x10E2"
    },
    "3846": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        18803,
        18832
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3847": {
      "fn": "ERC721._transfer",
      "offset": [
        18803,
        18832
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3848": {
      "fn": "ERC721._transfer",
      "offset": [
        18803,
        18832
      ],
      "op": "POP",
      "path": "89"
    },
    "3849": {
      "fn": "ERC721._transfer",
      "offset": [
        18867,
        18874
      ],
      "op": "DUP1",
      "path": "89",
      "statement": 41
    },
    "3850": {
      "fn": "ERC721._transfer",
      "offset": [
        18863,
        18865
      ],
      "op": "DUP3",
      "path": "89"
    },
    "3851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3857": {
      "op": "SHL"
    },
    "3858": {
      "op": "SUB"
    },
    "3859": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "AND",
      "path": "89"
    },
    "3860": {
      "fn": "ERC721._transfer",
      "offset": [
        18857,
        18861
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3865": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3867": {
      "op": "SHL"
    },
    "3868": {
      "op": "SUB"
    },
    "3869": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "AND",
      "path": "89"
    },
    "3870": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "PUSH32",
      "path": "89",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "3903": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3905": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3906": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "3908": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "3909": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "DUP1",
      "path": "89"
    },
    "3910": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "3911": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "SUB",
      "path": "89"
    },
    "3912": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "3913": {
      "fn": "ERC721._transfer",
      "offset": [
        18848,
        18875
      ],
      "op": "LOG4",
      "path": "89"
    },
    "3914": {
      "fn": "ERC721._transfer",
      "offset": [
        18323,
        18882
      ],
      "op": "POP",
      "path": "89"
    },
    "3915": {
      "fn": "ERC721._transfer",
      "offset": [
        18323,
        18882
      ],
      "op": "POP",
      "path": "89"
    },
    "3916": {
      "fn": "ERC721._transfer",
      "offset": [
        18323,
        18882
      ],
      "op": "POP",
      "path": "89"
    },
    "3917": {
      "fn": "ERC721._transfer",
      "jump": "o",
      "offset": [
        18323,
        18882
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3918": {
      "fn": "EnumerableSet.at",
      "offset": [
        7616,
        7751
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "3919": {
      "fn": "EnumerableSet.at",
      "offset": [
        7687,
        7694
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "3921": {
      "fn": "EnumerableSet.at",
      "offset": [
        7721,
        7743
      ],
      "op": "PUSH2",
      "path": "106",
      "statement": 42,
      "value": "0x710"
    },
    "3924": {
      "fn": "EnumerableSet.at",
      "offset": [
        7725,
        7728
      ],
      "op": "DUP4",
      "path": "106"
    },
    "3925": {
      "fn": "EnumerableSet.at",
      "offset": [
        7737,
        7742
      ],
      "op": "DUP4",
      "path": "106"
    },
    "3926": {
      "fn": "EnumerableSet.at",
      "offset": [
        7721,
        7724
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x10F8"
    },
    "3929": {
      "fn": "EnumerableSet.at",
      "jump": "i",
      "offset": [
        7721,
        7743
      ],
      "op": "JUMP",
      "path": "106"
    },
    "3930": {
      "fn": "EnumerableMap.at",
      "offset": [
        7439,
        7663
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "3931": {
      "fn": "EnumerableMap.at",
      "offset": [
        7519,
        7526
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "3933": {
      "fn": "EnumerableMap.at",
      "offset": [
        7519,
        7526
      ],
      "op": "DUP1",
      "path": "105"
    },
    "3934": {
      "fn": "EnumerableMap.at",
      "offset": [
        7519,
        7526
      ],
      "op": "DUP1",
      "path": "105"
    },
    "3935": {
      "fn": "EnumerableMap.at",
      "offset": [
        7519,
        7526
      ],
      "op": "DUP1",
      "path": "105"
    },
    "3936": {
      "fn": "EnumerableMap.at",
      "offset": [
        7578,
        7600
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0xF69"
    },
    "3939": {
      "fn": "EnumerableMap.at",
      "offset": [
        7582,
        7585
      ],
      "op": "DUP7",
      "path": "105"
    },
    "3940": {
      "fn": "EnumerableMap.at",
      "offset": [
        7594,
        7599
      ],
      "op": "DUP7",
      "path": "105"
    },
    "3941": {
      "fn": "EnumerableMap.at",
      "offset": [
        7578,
        7581
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x115C"
    },
    "3944": {
      "fn": "EnumerableMap.at",
      "jump": "i",
      "offset": [
        7578,
        7600
      ],
      "op": "JUMP",
      "path": "105"
    },
    "3945": {
      "fn": "EnumerableMap.at",
      "offset": [
        7578,
        7600
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "3946": {
      "fn": "EnumerableMap.at",
      "offset": [
        7547,
        7600
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "3947": {
      "fn": "EnumerableMap.at",
      "offset": [
        7547,
        7600
      ],
      "op": "SWAP8",
      "path": "105"
    },
    "3948": {
      "fn": "EnumerableMap.at",
      "offset": [
        7547,
        7600
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "3949": {
      "fn": "EnumerableMap.at",
      "offset": [
        7547,
        7600
      ],
      "op": "SWAP7",
      "path": "105"
    },
    "3950": {
      "op": "POP"
    },
    "3951": {
      "fn": "EnumerableMap.at",
      "offset": [
        7439,
        7663
      ],
      "op": "SWAP5",
      "path": "105"
    },
    "3952": {
      "op": "POP"
    },
    "3953": {
      "op": "POP"
    },
    "3954": {
      "op": "POP"
    },
    "3955": {
      "op": "POP"
    },
    "3956": {
      "op": "POP"
    },
    "3957": {
      "fn": "EnumerableMap.at",
      "jump": "o",
      "offset": [
        7439,
        7663
      ],
      "op": "JUMP",
      "path": "105"
    },
    "3958": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "3959": {
      "fn": "EnumerableMap.get",
      "offset": [
        8189,
        8196
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "3961": {
      "fn": "EnumerableMap.get",
      "offset": [
        8231,
        8275
      ],
      "op": "PUSH2",
      "path": "105",
      "statement": 43,
      "value": "0xF83"
    },
    "3964": {
      "fn": "EnumerableMap.get",
      "offset": [
        8236,
        8239
      ],
      "op": "DUP5",
      "path": "105"
    },
    "3965": {
      "fn": "EnumerableMap.get",
      "offset": [
        8256,
        8259
      ],
      "op": "DUP5",
      "path": "105"
    },
    "3966": {
      "fn": "EnumerableMap.get",
      "offset": [
        8262,
        8274
      ],
      "op": "DUP5",
      "path": "105"
    },
    "3967": {
      "fn": "EnumerableMap.get",
      "offset": [
        8231,
        8235
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x11D7"
    },
    "3970": {
      "fn": "EnumerableMap.get",
      "jump": "i",
      "offset": [
        8231,
        8275
      ],
      "op": "JUMP",
      "path": "105"
    },
    "3971": {
      "fn": "EnumerableMap.get",
      "offset": [
        8231,
        8275
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "3972": {
      "fn": "EnumerableMap.get",
      "offset": [
        8223,
        8276
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "3973": {
      "op": "POP"
    },
    "3974": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "3975": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "SWAP4",
      "path": "105"
    },
    "3976": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "3977": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "POP",
      "path": "105"
    },
    "3978": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "POP",
      "path": "105"
    },
    "3979": {
      "fn": "EnumerableMap.get",
      "offset": [
        8082,
        8284
      ],
      "op": "POP",
      "path": "105"
    },
    "3980": {
      "fn": "EnumerableMap.get",
      "jump": "o",
      "offset": [
        8082,
        8284
      ],
      "op": "JUMP",
      "path": "105"
    },
    "3981": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        13869,
        14138
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3982": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        13982,
        14010
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 44,
      "value": "0xF98"
    },
    "3985": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        13992,
        13996
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3986": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        13998,
        14000
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3987": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14002,
        14009
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3988": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        13982,
        13991
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xE02"
    },
    "3991": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        13982,
        14010
      ],
      "op": "JUMP",
      "path": "89"
    },
    "3992": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        13982,
        14010
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "3993": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14028,
        14076
      ],
      "op": "PUSH2",
      "path": "89",
      "statement": 45,
      "value": "0xFA4"
    },
    "3996": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14051,
        14055
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3997": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14057,
        14059
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3998": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14061,
        14068
      ],
      "op": "DUP5",
      "path": "89"
    },
    "3999": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14070,
        14075
      ],
      "op": "DUP5",
      "path": "89"
    },
    "4000": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14028,
        14050
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x12A1"
    },
    "4003": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        14028,
        14076
      ],
      "op": "JUMP",
      "path": "89"
    },
    "4004": {
      "branch": 97,
      "fn": "ERC721._safeTransfer",
      "offset": [
        14028,
        14076
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "4005": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x9F9"
    },
    "4008": {
      "branch": 97,
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "4009": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "4011": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "4012": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4016": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4018": {
      "op": "SHL"
    },
    "4019": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4020": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4021": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "4023": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "ADD",
      "path": "89"
    },
    "4024": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4025": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4026": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4028": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "ADD",
      "path": "89"
    },
    "4029": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP3",
      "path": "89"
    },
    "4030": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4031": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "SUB",
      "path": "89"
    },
    "4032": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP3",
      "path": "89"
    },
    "4033": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4034": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x32"
    },
    "4036": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4037": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4038": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4040": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "ADD",
      "path": "89"
    },
    "4041": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4042": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x16E5"
    },
    "4045": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x32"
    },
    "4047": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "4048": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "4049": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "4051": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "ADD",
      "path": "89"
    },
    "4052": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "4053": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "POP",
      "path": "89"
    },
    "4054": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "POP",
      "path": "89"
    },
    "4055": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "4057": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "4058": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4059": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "4060": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "SUB",
      "path": "89"
    },
    "4061": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "4062": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        14020,
        14131
      ],
      "op": "REVERT",
      "path": "89"
    },
    "4063": {
      "fn": "Strings.toString",
      "offset": [
        169,
        892
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4064": {
      "fn": "Strings.toString",
      "offset": [
        225,
        238
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x60"
    },
    "4066": {
      "branch": 107,
      "fn": "Strings.toString",
      "offset": [
        442,
        452
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4067": {
      "fn": "Strings.toString",
      "offset": [
        438,
        489
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x1004"
    },
    "4070": {
      "branch": 107,
      "fn": "Strings.toString",
      "offset": [
        438,
        489
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "4071": {
      "op": "POP"
    },
    "4072": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "PUSH1",
      "path": "110",
      "statement": 46,
      "value": "0x40"
    },
    "4074": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4075": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "MLOAD",
      "path": "110"
    },
    "4076": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4077": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4078": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "ADD",
      "path": "110"
    },
    "4079": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "4080": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "SWAP2",
      "path": "110"
    },
    "4081": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "MSTORE",
      "path": "110"
    },
    "4082": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x1"
    },
    "4084": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4085": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "MSTORE",
      "path": "110"
    },
    "4086": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "4088": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "4090": {
      "op": "SHL"
    },
    "4091": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x20"
    },
    "4093": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4094": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "ADD",
      "path": "110"
    },
    "4095": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "MSTORE",
      "path": "110"
    },
    "4096": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x4AE"
    },
    "4099": {
      "fn": "Strings.toString",
      "offset": [
        468,
        478
      ],
      "op": "JUMP",
      "path": "110"
    },
    "4100": {
      "fn": "Strings.toString",
      "offset": [
        438,
        489
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4101": {
      "fn": "Strings.toString",
      "offset": [
        513,
        518
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4102": {
      "fn": "Strings.toString",
      "offset": [
        498,
        510
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "4104": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4105": {
      "fn": "Strings.toString",
      "offset": [
        559,
        568
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4106": {
      "fn": "Strings.toString",
      "offset": [
        559,
        568
      ],
      "op": "ISZERO",
      "path": "110"
    },
    "4107": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x101C"
    },
    "4110": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "4111": {
      "fn": "Strings.toString",
      "offset": [
        584,
        592
      ],
      "op": "PUSH1",
      "path": "110",
      "statement": 47,
      "value": "0x1"
    },
    "4113": {
      "fn": "Strings.toString",
      "offset": [
        584,
        592
      ],
      "op": "ADD",
      "path": "110"
    },
    "4114": {
      "fn": "Strings.toString",
      "offset": [
        614,
        616
      ],
      "op": "PUSH1",
      "path": "110",
      "statement": 48,
      "value": "0xA"
    },
    "4116": {
      "fn": "Strings.toString",
      "offset": [
        606,
        616
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4117": {
      "fn": "Strings.toString",
      "offset": [
        606,
        616
      ],
      "op": "DIV",
      "path": "110"
    },
    "4118": {
      "fn": "Strings.toString",
      "offset": [
        606,
        616
      ],
      "op": "SWAP2",
      "path": "110"
    },
    "4119": {
      "fn": "Strings.toString",
      "offset": [
        606,
        616
      ],
      "op": "POP",
      "path": "110"
    },
    "4120": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x1008"
    },
    "4123": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "JUMP",
      "path": "110"
    },
    "4124": {
      "fn": "Strings.toString",
      "offset": [
        552,
        627
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4125": {
      "fn": "Strings.toString",
      "offset": [
        636,
        655
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x60"
    },
    "4127": {
      "fn": "Strings.toString",
      "offset": [
        668,
        674
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4128": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH8",
      "path": "110",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4137": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4138": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "GT",
      "path": "110"
    },
    "4139": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4140": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ISZERO",
      "path": "110"
    },
    "4141": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x1035"
    },
    "4144": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "4145": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "4147": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4148": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "REVERT",
      "path": "110"
    },
    "4149": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4150": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "POP",
      "path": "110"
    },
    "4151": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x40"
    },
    "4153": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "MLOAD",
      "path": "110"
    },
    "4154": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "4155": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4156": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4157": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "MSTORE",
      "path": "110"
    },
    "4158": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4159": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x1F"
    },
    "4161": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "110"
    },
    "4162": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x1F"
    },
    "4164": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "NOT",
      "path": "110"
    },
    "4165": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "AND",
      "path": "110"
    },
    "4166": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x20"
    },
    "4168": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "110"
    },
    "4169": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4170": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "110"
    },
    "4171": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x40"
    },
    "4173": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "MSTORE",
      "path": "110"
    },
    "4174": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4175": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ISZERO",
      "path": "110"
    },
    "4176": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x1060"
    },
    "4179": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "4180": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x20"
    },
    "4182": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4183": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "110"
    },
    "4184": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4185": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4186": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "CALLDATASIZE",
      "path": "110"
    },
    "4187": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "DUP4",
      "path": "110"
    },
    "4188": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "CALLDATACOPY",
      "path": "110"
    },
    "4189": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "ADD",
      "path": "110"
    },
    "4190": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "4191": {
      "op": "POP"
    },
    "4192": {
      "fn": "Strings.toString",
      "offset": [
        658,
        675
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4193": {
      "op": "POP"
    },
    "4194": {
      "fn": "Strings.toString",
      "offset": [
        728,
        733
      ],
      "op": "DUP6",
      "path": "110",
      "statement": 49
    },
    "4195": {
      "fn": "Strings.toString",
      "offset": [
        728,
        733
      ],
      "op": "SWAP4",
      "path": "110"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "fn": "Strings.toString",
      "offset": [
        636,
        675
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4201": {
      "op": "NOT"
    },
    "4202": {
      "fn": "Strings.toString",
      "offset": [
        701,
        711
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4203": {
      "fn": "Strings.toString",
      "offset": [
        701,
        711
      ],
      "op": "ADD",
      "path": "110"
    },
    "4204": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4205": {
      "fn": "Strings.toString",
      "offset": [
        750,
        759
      ],
      "op": "DUP4",
      "path": "110"
    },
    "4206": {
      "fn": "Strings.toString",
      "offset": [
        750,
        759
      ],
      "op": "ISZERO",
      "path": "110"
    },
    "4207": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x10B1"
    },
    "4210": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "4211": {
      "fn": "Strings.toString",
      "offset": [
        816,
        818
      ],
      "op": "PUSH1",
      "path": "110",
      "statement": 50,
      "value": "0xA"
    },
    "4213": {
      "fn": "Strings.toString",
      "offset": [
        809,
        813
      ],
      "op": "DUP5",
      "path": "110"
    },
    "4214": {
      "fn": "Strings.toString",
      "offset": [
        809,
        818
      ],
      "op": "MOD",
      "path": "110"
    },
    "4215": {
      "fn": "Strings.toString",
      "offset": [
        804,
        806
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x30"
    },
    "4217": {
      "fn": "Strings.toString",
      "offset": [
        804,
        818
      ],
      "op": "ADD",
      "path": "110"
    },
    "4218": {
      "fn": "Strings.toString",
      "offset": [
        793,
        820
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0xF8"
    },
    "4220": {
      "fn": "Strings.toString",
      "offset": [
        793,
        820
      ],
      "op": "SHL",
      "path": "110"
    },
    "4221": {
      "fn": "Strings.toString",
      "offset": [
        775,
        781
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4222": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "DUP3",
      "path": "110"
    },
    "4223": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "DUP1",
      "path": "110"
    },
    "4224": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x1"
    },
    "4226": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "4227": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "SUB",
      "path": "110"
    },
    "4228": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "SWAP4",
      "path": "110"
    },
    "4229": {
      "fn": "Strings.toString",
      "offset": [
        782,
        789
      ],
      "op": "POP",
      "path": "110"
    },
    "4230": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4231": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "MLOAD",
      "path": "110"
    },
    "4232": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4233": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "LT",
      "path": "110"
    },
    "4234": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x108F"
    },
    "4237": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "JUMPI",
      "path": "110"
    },
    "4238": {
      "dev": "Index out of range",
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "INVALID",
      "path": "110"
    },
    "4239": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4240": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x20"
    },
    "4242": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "ADD",
      "path": "110"
    },
    "4243": {
      "fn": "Strings.toString",
      "offset": [
        775,
        790
      ],
      "op": "ADD",
      "path": "110"
    },
    "4244": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "4245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4249": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "4251": {
      "op": "SHL"
    },
    "4252": {
      "op": "SUB"
    },
    "4253": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "NOT",
      "path": "110"
    },
    "4254": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "AND",
      "path": "110"
    },
    "4255": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "4256": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "DUP2",
      "path": "110"
    },
    "4257": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "PUSH1",
      "path": "110",
      "value": "0x0"
    },
    "4259": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "BYTE",
      "path": "110"
    },
    "4260": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "SWAP1",
      "path": "110"
    },
    "4261": {
      "fn": "Strings.toString",
      "offset": [
        775,
        820
      ],
      "op": "MSTORE8",
      "path": "110"
    },
    "4262": {
      "op": "POP"
    },
    "4263": {
      "fn": "Strings.toString",
      "offset": [
        842,
        844
      ],
      "op": "PUSH1",
      "path": "110",
      "statement": 51,
      "value": "0xA"
    },
    "4265": {
      "fn": "Strings.toString",
      "offset": [
        834,
        844
      ],
      "op": "DUP5",
      "path": "110"
    },
    "4266": {
      "fn": "Strings.toString",
      "offset": [
        834,
        844
      ],
      "op": "DIV",
      "path": "110"
    },
    "4267": {
      "fn": "Strings.toString",
      "offset": [
        834,
        844
      ],
      "op": "SWAP4",
      "path": "110"
    },
    "4268": {
      "fn": "Strings.toString",
      "offset": [
        834,
        844
      ],
      "op": "POP",
      "path": "110"
    },
    "4269": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "PUSH2",
      "path": "110",
      "value": "0x106C"
    },
    "4272": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "JUMP",
      "path": "110"
    },
    "4273": {
      "fn": "Strings.toString",
      "offset": [
        743,
        855
      ],
      "op": "JUMPDEST",
      "path": "110"
    },
    "4274": {
      "op": "POP"
    },
    "4275": {
      "fn": "Strings.toString",
      "offset": [
        878,
        884
      ],
      "op": "SWAP5",
      "path": "110",
      "statement": 52
    },
    "4276": {
      "fn": "Strings.toString",
      "offset": [
        169,
        892
      ],
      "op": "SWAP4",
      "path": "110"
    },
    "4277": {
      "op": "POP"
    },
    "4278": {
      "op": "POP"
    },
    "4279": {
      "op": "POP"
    },
    "4280": {
      "op": "POP"
    },
    "4281": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        169,
        892
      ],
      "op": "JUMP",
      "path": "110"
    },
    "4282": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6758,
        6907
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4283": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6842,
        6846
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4285": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6865,
        6900
      ],
      "op": "PUSH2",
      "path": "105",
      "statement": 53,
      "value": "0x710"
    },
    "4288": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6875,
        6878
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4289": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6895,
        6898
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4290": {
      "fn": "EnumerableMap.contains",
      "offset": [
        6865,
        6874
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x14CA"
    },
    "4293": {
      "fn": "EnumerableMap.contains",
      "jump": "i",
      "offset": [
        6865,
        6900
      ],
      "op": "JUMP",
      "path": "105"
    },
    "4294": {
      "fn": "EnumerableMap._length",
      "offset": [
        4450,
        4558
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4295": {
      "fn": "EnumerableMap._length",
      "offset": [
        4532,
        4551
      ],
      "op": "SLOAD",
      "path": "105",
      "statement": 54
    },
    "4296": {
      "fn": "EnumerableMap._length",
      "offset": [
        4532,
        4551
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4297": {
      "fn": "EnumerableMap._length",
      "jump": "o",
      "offset": [
        4450,
        4558
      ],
      "op": "JUMP",
      "path": "105"
    },
    "4298": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6731,
        6866
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "4299": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6801,
        6805
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "4301": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6824,
        6859
      ],
      "op": "PUSH2",
      "path": "106",
      "statement": 55,
      "value": "0x710"
    },
    "4304": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6832,
        6835
      ],
      "op": "DUP4",
      "path": "106"
    },
    "4305": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6852,
        6857
      ],
      "op": "DUP4",
      "path": "106"
    },
    "4306": {
      "fn": "EnumerableSet.remove",
      "offset": [
        6824,
        6831
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x14E2"
    },
    "4309": {
      "fn": "EnumerableSet.remove",
      "jump": "i",
      "offset": [
        6824,
        6859
      ],
      "op": "JUMP",
      "path": "106"
    },
    "4310": {
      "fn": "EnumerableSet.add",
      "offset": [
        6434,
        6563
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "4311": {
      "fn": "EnumerableSet.add",
      "offset": [
        6501,
        6505
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "4313": {
      "fn": "EnumerableSet.add",
      "offset": [
        6524,
        6556
      ],
      "op": "PUSH2",
      "path": "106",
      "statement": 56,
      "value": "0x710"
    },
    "4316": {
      "fn": "EnumerableSet.add",
      "offset": [
        6529,
        6532
      ],
      "op": "DUP4",
      "path": "106"
    },
    "4317": {
      "fn": "EnumerableSet.add",
      "offset": [
        6549,
        6554
      ],
      "op": "DUP4",
      "path": "106"
    },
    "4318": {
      "fn": "EnumerableSet.add",
      "offset": [
        6524,
        6528
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x15A8"
    },
    "4321": {
      "fn": "EnumerableSet.add",
      "jump": "i",
      "offset": [
        6524,
        6556
      ],
      "op": "JUMP",
      "path": "106"
    },
    "4322": {
      "fn": "EnumerableMap.set",
      "offset": [
        6206,
        6380
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4323": {
      "fn": "EnumerableMap.set",
      "offset": [
        6295,
        6299
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4325": {
      "fn": "EnumerableMap.set",
      "offset": [
        6318,
        6373
      ],
      "op": "PUSH2",
      "path": "105",
      "statement": 57,
      "value": "0xF83"
    },
    "4328": {
      "fn": "EnumerableMap.set",
      "offset": [
        6323,
        6326
      ],
      "op": "DUP5",
      "path": "105"
    },
    "4329": {
      "fn": "EnumerableMap.set",
      "offset": [
        6343,
        6346
      ],
      "op": "DUP5",
      "path": "105"
    },
    "4330": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4332": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4336": {
      "op": "SHL"
    },
    "4337": {
      "op": "SUB"
    },
    "4338": {
      "fn": "EnumerableMap.set",
      "offset": [
        6357,
        6371
      ],
      "op": "DUP6",
      "path": "105"
    },
    "4339": {
      "fn": "EnumerableMap.set",
      "offset": [
        6357,
        6371
      ],
      "op": "AND",
      "path": "105"
    },
    "4340": {
      "fn": "EnumerableMap.set",
      "offset": [
        6318,
        6322
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x15F2"
    },
    "4343": {
      "fn": "EnumerableMap.set",
      "jump": "i",
      "offset": [
        6318,
        6373
      ],
      "op": "JUMP",
      "path": "105"
    },
    "4344": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "4345": {
      "fn": "EnumerableSet._at",
      "offset": [
        4484,
        4502
      ],
      "op": "DUP2",
      "path": "106",
      "statement": 58
    },
    "4346": {
      "fn": "EnumerableSet._at",
      "offset": [
        4484,
        4502
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "4347": {
      "fn": "EnumerableSet._at",
      "offset": [
        4457,
        4464
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "4349": {
      "fn": "EnumerableSet._at",
      "offset": [
        4457,
        4464
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "4350": {
      "branch": 104,
      "fn": "EnumerableSet._at",
      "offset": [
        4484,
        4510
      ],
      "op": "DUP3",
      "path": "106"
    },
    "4351": {
      "op": "LT"
    },
    "4352": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x113A"
    },
    "4355": {
      "branch": 104,
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "JUMPI",
      "path": "106"
    },
    "4356": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x40"
    },
    "4358": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MLOAD",
      "path": "106"
    },
    "4359": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4363": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4365": {
      "op": "SHL"
    },
    "4366": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP2",
      "path": "106"
    },
    "4367": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "4368": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x4"
    },
    "4370": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "ADD",
      "path": "106"
    },
    "4371": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP1",
      "path": "106"
    },
    "4372": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP1",
      "path": "106"
    },
    "4373": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "4375": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "ADD",
      "path": "106"
    },
    "4376": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP3",
      "path": "106"
    },
    "4377": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP2",
      "path": "106"
    },
    "4378": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SUB",
      "path": "106"
    },
    "4379": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP3",
      "path": "106"
    },
    "4380": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "4381": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x22"
    },
    "4383": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP2",
      "path": "106"
    },
    "4384": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "4385": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "4387": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "ADD",
      "path": "106"
    },
    "4388": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP1",
      "path": "106"
    },
    "4389": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x16C3"
    },
    "4392": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x22"
    },
    "4394": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "4395": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "CODECOPY",
      "path": "106"
    },
    "4396": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x40"
    },
    "4398": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "ADD",
      "path": "106"
    },
    "4399": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "4400": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "POP",
      "path": "106"
    },
    "4401": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "POP",
      "path": "106"
    },
    "4402": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x40"
    },
    "4404": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "MLOAD",
      "path": "106"
    },
    "4405": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "DUP1",
      "path": "106"
    },
    "4406": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "4407": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SUB",
      "path": "106"
    },
    "4408": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "4409": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "REVERT",
      "path": "106"
    },
    "4410": {
      "fn": "EnumerableSet._at",
      "offset": [
        4476,
        4549
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "4411": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4569
      ],
      "op": "DUP3",
      "path": "106",
      "statement": 59
    },
    "4412": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4577
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "4414": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4577
      ],
      "op": "ADD",
      "path": "106"
    },
    "4415": {
      "fn": "EnumerableSet._at",
      "offset": [
        4578,
        4583
      ],
      "op": "DUP3",
      "path": "106"
    },
    "4416": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "DUP2",
      "path": "106"
    },
    "4417": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "4418": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "DUP2",
      "path": "106"
    },
    "4419": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "LT",
      "path": "106"
    },
    "4420": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x1149"
    },
    "4423": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "JUMPI",
      "path": "106"
    },
    "4424": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "INVALID",
      "path": "106"
    },
    "4425": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "4426": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "4427": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "4429": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "4430": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "4432": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "4434": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "4435": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "ADD",
      "path": "106"
    },
    "4436": {
      "fn": "EnumerableSet._at",
      "offset": [
        4566,
        4584
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "4437": {
      "fn": "EnumerableSet._at",
      "offset": [
        4559,
        4584
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "4438": {
      "fn": "EnumerableSet._at",
      "offset": [
        4559,
        4584
      ],
      "op": "POP",
      "path": "106"
    },
    "4439": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "SWAP3",
      "path": "106"
    },
    "4440": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "4441": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "POP",
      "path": "106"
    },
    "4442": {
      "fn": "EnumerableSet._at",
      "offset": [
        4390,
        4591
      ],
      "op": "POP",
      "path": "106"
    },
    "4443": {
      "fn": "EnumerableSet._at",
      "jump": "o",
      "offset": [
        4390,
        4591
      ],
      "op": "JUMP",
      "path": "106"
    },
    "4444": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4445": {
      "fn": "EnumerableMap._at",
      "offset": [
        5004,
        5023
      ],
      "op": "DUP2",
      "path": "105",
      "statement": 60
    },
    "4446": {
      "fn": "EnumerableMap._at",
      "offset": [
        5004,
        5023
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "4447": {
      "fn": "EnumerableMap._at",
      "offset": [
        4968,
        4975
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4449": {
      "fn": "EnumerableMap._at",
      "offset": [
        4968,
        4975
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4450": {
      "fn": "EnumerableMap._at",
      "offset": [
        4968,
        4975
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4451": {
      "fn": "EnumerableMap._at",
      "offset": [
        4968,
        4975
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4452": {
      "branch": 101,
      "fn": "EnumerableMap._at",
      "offset": [
        5004,
        5031
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4453": {
      "op": "LT"
    },
    "4454": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x11A0"
    },
    "4457": {
      "branch": 101,
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "JUMPI",
      "path": "105"
    },
    "4458": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x40"
    },
    "4460": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "4461": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4465": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4467": {
      "op": "SHL"
    },
    "4468": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4469": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4470": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x4"
    },
    "4472": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "ADD",
      "path": "105"
    },
    "4473": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4474": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4475": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4477": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "ADD",
      "path": "105"
    },
    "4478": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP3",
      "path": "105"
    },
    "4479": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4480": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SUB",
      "path": "105"
    },
    "4481": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP3",
      "path": "105"
    },
    "4482": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4483": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x22"
    },
    "4485": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4486": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4487": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4489": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "ADD",
      "path": "105"
    },
    "4490": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4491": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x17F2"
    },
    "4494": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x22"
    },
    "4496": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "4497": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "CODECOPY",
      "path": "105"
    },
    "4498": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x40"
    },
    "4500": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "ADD",
      "path": "105"
    },
    "4501": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "4502": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "POP",
      "path": "105"
    },
    "4503": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "POP",
      "path": "105"
    },
    "4504": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x40"
    },
    "4506": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "4507": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4508": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "4509": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SUB",
      "path": "105"
    },
    "4510": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4511": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "REVERT",
      "path": "105"
    },
    "4512": {
      "fn": "EnumerableMap._at",
      "offset": [
        4996,
        5070
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4513": {
      "fn": "EnumerableMap._at",
      "offset": [
        5081,
        5103
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4515": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5109
      ],
      "op": "DUP5",
      "path": "105"
    },
    "4516": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5118
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4518": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5118
      ],
      "op": "ADD",
      "path": "105"
    },
    "4519": {
      "fn": "EnumerableMap._at",
      "offset": [
        5119,
        5124
      ],
      "op": "DUP5",
      "path": "105"
    },
    "4520": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4521": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "4522": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4523": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "LT",
      "path": "105"
    },
    "4524": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x11B1"
    },
    "4527": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "JUMPI",
      "path": "105"
    },
    "4528": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "INVALID",
      "path": "105"
    },
    "4529": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4530": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4531": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4533": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4534": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4536": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4538": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "KECCAK256",
      "path": "105"
    },
    "4539": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4540": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x2"
    },
    "4542": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "MUL",
      "path": "105"
    },
    "4543": {
      "fn": "EnumerableMap._at",
      "offset": [
        5106,
        5125
      ],
      "op": "ADD",
      "path": "105"
    },
    "4544": {
      "fn": "EnumerableMap._at",
      "offset": [
        5081,
        5125
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4545": {
      "fn": "EnumerableMap._at",
      "offset": [
        5081,
        5125
      ],
      "op": "POP",
      "path": "105"
    },
    "4546": {
      "fn": "EnumerableMap._at",
      "offset": [
        5143,
        5148
      ],
      "op": "DUP1",
      "path": "105",
      "statement": 61
    },
    "4547": {
      "fn": "EnumerableMap._at",
      "offset": [
        5143,
        5153
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4549": {
      "fn": "EnumerableMap._at",
      "offset": [
        5143,
        5153
      ],
      "op": "ADD",
      "path": "105"
    },
    "4550": {
      "fn": "EnumerableMap._at",
      "offset": [
        5143,
        5153
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "4551": {
      "fn": "EnumerableMap._at",
      "offset": [
        5155,
        5160
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4552": {
      "fn": "EnumerableMap._at",
      "offset": [
        5155,
        5167
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "4554": {
      "fn": "EnumerableMap._at",
      "offset": [
        5155,
        5167
      ],
      "op": "ADD",
      "path": "105"
    },
    "4555": {
      "fn": "EnumerableMap._at",
      "offset": [
        5155,
        5167
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "4556": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "4557": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "POP",
      "path": "105"
    },
    "4558": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "4559": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "POP",
      "path": "105"
    },
    "4560": {
      "fn": "EnumerableMap._at",
      "offset": [
        5135,
        5168
      ],
      "op": "POP",
      "path": "105"
    },
    "4561": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "4562": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "POP",
      "path": "105"
    },
    "4563": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "4564": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4565": {
      "fn": "EnumerableMap._at",
      "offset": [
        4901,
        5175
      ],
      "op": "POP",
      "path": "105"
    },
    "4566": {
      "fn": "EnumerableMap._at",
      "jump": "o",
      "offset": [
        4901,
        5175
      ],
      "op": "JUMP",
      "path": "105"
    },
    "4567": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4568": {
      "fn": "EnumerableMap._get",
      "offset": [
        5676,
        5683
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4570": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "DUP3",
      "path": "105"
    },
    "4571": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4572": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4573": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5726
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "4575": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5726
      ],
      "op": "DUP5",
      "path": "105"
    },
    "4576": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5726
      ],
      "op": "ADD",
      "path": "105"
    },
    "4577": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4579": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4580": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x40"
    },
    "4582": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4583": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "KECCAK256",
      "path": "105"
    },
    "4584": {
      "fn": "EnumerableMap._get",
      "offset": [
        5714,
        5731
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "4585": {
      "fn": "EnumerableMap._get",
      "offset": [
        5764,
        5776
      ],
      "op": "DUP3",
      "path": "105",
      "statement": 62
    },
    "4586": {
      "branch": 102,
      "fn": "EnumerableMap._get",
      "offset": [
        5749,
        5762
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4587": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x1272"
    },
    "4590": {
      "branch": 102,
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPI",
      "path": "105"
    },
    "4591": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x40"
    },
    "4593": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "4594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4600": {
      "op": "SHL"
    },
    "4601": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4602": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4603": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x4"
    },
    "4605": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4606": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4607": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4608": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4610": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4611": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP3",
      "path": "105"
    },
    "4612": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4613": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "105"
    },
    "4614": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP3",
      "path": "105"
    },
    "4615": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4616": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4617": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4618": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4619": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "4620": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4621": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4622": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4624": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4625": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "4626": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4627": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4628": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "4629": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4630": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4632": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4633": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4634": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4635": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4636": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4637": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4639": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4640": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4641": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4642": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "LT",
      "path": "105"
    },
    "4643": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ISZERO",
      "path": "105"
    },
    "4644": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x1237"
    },
    "4647": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPI",
      "path": "105"
    },
    "4648": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4649": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4650": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4651": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "4652": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4653": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP3",
      "path": "105"
    },
    "4654": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4655": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4656": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4658": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4659": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x121F"
    },
    "4662": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMP",
      "path": "105"
    },
    "4663": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4664": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4665": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4666": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4667": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4668": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4669": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4670": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4671": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4672": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4673": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4674": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1F"
    },
    "4676": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "AND",
      "path": "105"
    },
    "4677": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4678": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ISZERO",
      "path": "105"
    },
    "4679": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x1264"
    },
    "4682": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPI",
      "path": "105"
    },
    "4683": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4684": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP3",
      "path": "105"
    },
    "4685": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "105"
    },
    "4686": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4687": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "4688": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "4690": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP4",
      "path": "105"
    },
    "4691": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4693": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "105"
    },
    "4694": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x100"
    },
    "4697": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "EXP",
      "path": "105"
    },
    "4698": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "105"
    },
    "4699": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "NOT",
      "path": "105"
    },
    "4700": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "AND",
      "path": "105"
    },
    "4701": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4702": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4703": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4705": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "ADD",
      "path": "105"
    },
    "4706": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "4707": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4708": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4709": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4710": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "4711": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4712": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4713": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4714": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x40"
    },
    "4716": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "4717": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "DUP1",
      "path": "105"
    },
    "4718": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "4719": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SUB",
      "path": "105"
    },
    "4720": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4721": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "REVERT",
      "path": "105"
    },
    "4722": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4723": {
      "fn": "EnumerableMap._get",
      "offset": [
        5741,
        5777
      ],
      "op": "POP",
      "path": "105"
    },
    "4724": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5833
      ],
      "op": "DUP5",
      "path": "105",
      "statement": 63
    },
    "4725": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5842
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4727": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5842
      ],
      "op": "ADD",
      "path": "105"
    },
    "4728": {
      "fn": "EnumerableMap._get",
      "offset": [
        5854,
        5855
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "4730": {
      "fn": "EnumerableMap._get",
      "offset": [
        5843,
        5851
      ],
      "op": "DUP3",
      "path": "105"
    },
    "4731": {
      "fn": "EnumerableMap._get",
      "offset": [
        5843,
        5855
      ],
      "op": "SUB",
      "path": "105"
    },
    "4732": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4733": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "4734": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "DUP2",
      "path": "105"
    },
    "4735": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "LT",
      "path": "105"
    },
    "4736": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x1285"
    },
    "4739": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "JUMPI",
      "path": "105"
    },
    "4740": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "INVALID",
      "path": "105"
    },
    "4741": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "4742": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4743": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4745": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "4746": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "4748": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "4750": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "KECCAK256",
      "path": "105"
    },
    "4751": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "4752": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x2"
    },
    "4754": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "MUL",
      "path": "105"
    },
    "4755": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5856
      ],
      "op": "ADD",
      "path": "105"
    },
    "4756": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5863
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "4758": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5863
      ],
      "op": "ADD",
      "path": "105"
    },
    "4759": {
      "fn": "EnumerableMap._get",
      "offset": [
        5830,
        5863
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "4760": {
      "fn": "EnumerableMap._get",
      "offset": [
        5823,
        5863
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "4761": {
      "fn": "EnumerableMap._get",
      "offset": [
        5823,
        5863
      ],
      "op": "POP",
      "path": "105"
    },
    "4762": {
      "fn": "EnumerableMap._get",
      "offset": [
        5823,
        5863
      ],
      "op": "POP",
      "path": "105"
    },
    "4763": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "SWAP4",
      "path": "105"
    },
    "4764": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "4765": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "POP",
      "path": "105"
    },
    "4766": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "POP",
      "path": "105"
    },
    "4767": {
      "fn": "EnumerableMap._get",
      "offset": [
        5582,
        5897
      ],
      "op": "POP",
      "path": "105"
    },
    "4768": {
      "fn": "EnumerableMap._get",
      "jump": "o",
      "offset": [
        5582,
        5897
      ],
      "op": "JUMP",
      "path": "105"
    },
    "4769": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20301,
        21351
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "4770": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20421,
        20425
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "4772": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20446,
        20461
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x12B5"
    },
    "4775": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20446,
        20448
      ],
      "op": "DUP5",
      "path": "89"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20446,
        20459
      ],
      "op": "AND",
      "path": "89"
    },
    "4785": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20446,
        20459
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1689"
    },
    "4788": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        20446,
        20461
      ],
      "op": "JUMP",
      "path": "89"
    },
    "4789": {
      "branch": 98,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20446,
        20461
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "4790": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20441,
        20499
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x12C1"
    },
    "4793": {
      "branch": 98,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20441,
        20499
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "4794": {
      "op": "POP"
    },
    "4795": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20484,
        20488
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 64,
      "value": "0x1"
    },
    "4797": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20477,
        20488
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDFA"
    },
    "4800": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20477,
        20488
      ],
      "op": "JUMP",
      "path": "89"
    },
    "4801": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20441,
        20499
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "4802": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20568,
        20580
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "4804": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20582,
        20605
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "4806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4812": {
      "op": "SHL"
    },
    "4813": {
      "op": "SUB"
    },
    "4814": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20616
      ],
      "op": "DUP7",
      "path": "89"
    },
    "4815": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20616
      ],
      "op": "AND",
      "path": "89"
    },
    "4816": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "4821": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "4823": {
      "op": "SHL"
    },
    "4824": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20712,
        20724
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x12DF"
    },
    "4827": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20712,
        20722
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xCE1"
    },
    "4830": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        20712,
        20724
      ],
      "op": "JUMP",
      "path": "89"
    },
    "4831": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20712,
        20724
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "4832": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20738,
        20742
      ],
      "op": "DUP10",
      "path": "89"
    },
    "4833": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20756,
        20763
      ],
      "op": "DUP9",
      "path": "89"
    },
    "4834": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20777,
        20782
      ],
      "op": "DUP9",
      "path": "89"
    },
    "4835": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "4837": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "4838": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x24"
    },
    "4840": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4841": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4842": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP6",
      "path": "89"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "op": "SUB"
    },
    "4851": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "AND",
      "path": "89"
    },
    "4852": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4853": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4854": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4856": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4857": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP5",
      "path": "89"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4864": {
      "op": "SHL"
    },
    "4865": {
      "op": "SUB"
    },
    "4866": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "AND",
      "path": "89"
    },
    "4867": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4869": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4872": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP4",
      "path": "89"
    },
    "4873": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4875": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4877": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4878": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4879": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4881": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4882": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP3",
      "path": "89"
    },
    "4883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SUB",
      "path": "89"
    },
    "4885": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP3",
      "path": "89"
    },
    "4886": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4887": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP4",
      "path": "89"
    },
    "4888": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4889": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4890": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "4891": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4892": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "4897": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "POP",
      "path": "89"
    },
    "4898": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4899": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "4900": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "4901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4903": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4904": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "4905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4906": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP4",
      "path": "89"
    },
    "4907": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP4",
      "path": "89"
    },
    "4908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "4910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "4911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP4",
      "path": "89"
    },
    "4912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "LT",
      "path": "89"
    },
    "4914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "4915": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1346"
    },
    "4918": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "4919": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4920": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4921": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "4923": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP4",
      "path": "89"
    },
    "4924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP3",
      "path": "89"
    },
    "4925": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x132E"
    },
    "4933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "JUMP",
      "path": "89"
    },
    "4934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "4935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "POP",
      "path": "89"
    },
    "4936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "POP",
      "path": "89"
    },
    "4937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "POP",
      "path": "89"
    },
    "4938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "POP",
      "path": "89"
    },
    "4939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "4940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "POP",
      "path": "89"
    },
    "4941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "4942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4943": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4944": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "4945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "4947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "AND",
      "path": "89"
    },
    "4948": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "4950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1373"
    },
    "4953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "4954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP3",
      "path": "89"
    },
    "4956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SUB",
      "path": "89"
    },
    "4957": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4958": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "4959": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "4961": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP4",
      "path": "89"
    },
    "4962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SUB",
      "path": "89"
    },
    "4965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "4968": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "EXP",
      "path": "89"
    },
    "4969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SUB",
      "path": "89"
    },
    "4970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "NOT",
      "path": "89"
    },
    "4971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "AND",
      "path": "89"
    },
    "4972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4974": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4976": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "4978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "POP",
      "path": "89"
    },
    "4979": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "4980": {
      "op": "POP"
    },
    "4981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "4983": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "4984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "4985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4987": {
      "op": "NOT"
    },
    "4988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP5",
      "path": "89"
    },
    "4990": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SUB",
      "path": "89"
    },
    "4991": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "4992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4994": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "4995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP2",
      "path": "89"
    },
    "4996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "4997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "4999": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "ADD",
      "path": "89"
    },
    "5001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5002": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5009": {
      "op": "SHL"
    },
    "5010": {
      "op": "SUB"
    },
    "5011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "AND",
      "path": "89"
    },
    "5012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5016": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5018": {
      "op": "SHL"
    },
    "5019": {
      "op": "SUB"
    },
    "5020": {
      "op": "NOT"
    },
    "5021": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "5022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP11",
      "path": "89"
    },
    "5023": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "AND",
      "path": "89"
    },
    "5024": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP10",
      "path": "89"
    },
    "5025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "5026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP10",
      "path": "89"
    },
    "5027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "OR",
      "path": "89"
    },
    "5028": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP10",
      "path": "89"
    },
    "5029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP9",
      "path": "89"
    },
    "5035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "5036": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP8",
      "path": "89"
    },
    "5037": {
      "op": "POP"
    },
    "5038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP8",
      "path": "89"
    },
    "5039": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP7",
      "path": "89"
    },
    "5040": {
      "op": "POP"
    },
    "5041": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "SWAP5",
      "path": "89"
    },
    "5042": {
      "op": "POP"
    },
    "5043": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "5044": {
      "op": "POP"
    },
    "5045": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5046": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5047": {
      "op": "POP"
    },
    "5048": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP5",
      "path": "89"
    },
    "5049": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "5050": {
      "op": "POP"
    },
    "5051": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20617,
        20792
      ],
      "op": "DUP4",
      "path": "89"
    },
    "5052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "5053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5055": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP4",
      "path": "89"
    },
    "5056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "LT",
      "path": "89"
    },
    "5057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x13DB"
    },
    "5060": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "5061": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5062": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5063": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5064": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5067": {
      "op": "NOT"
    },
    "5068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "5069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "5070": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "ADD",
      "path": "89"
    },
    "5071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5074": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5075": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5076": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "ADD",
      "path": "89"
    },
    "5077": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5078": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "ADD",
      "path": "89"
    },
    "5079": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x13BC"
    },
    "5082": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "JUMP",
      "path": "89"
    },
    "5083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "5084": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1"
    },
    "5086": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP4",
      "path": "89"
    },
    "5087": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5089": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SUB",
      "path": "89"
    },
    "5090": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x100"
    },
    "5093": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "EXP",
      "path": "89"
    },
    "5094": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SUB",
      "path": "89"
    },
    "5095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5096": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "NOT",
      "path": "89"
    },
    "5097": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5099": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "AND",
      "path": "89"
    },
    "5100": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5101": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP5",
      "path": "89"
    },
    "5102": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "AND",
      "path": "89"
    },
    "5104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5105": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "OR",
      "path": "89"
    },
    "5107": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP6",
      "path": "89"
    },
    "5108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5109": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5110": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5111": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5112": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5113": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5114": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5115": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "5116": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5117": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "ADD",
      "path": "89"
    },
    "5118": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5119": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5120": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5121": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "5123": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "5125": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5126": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5127": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP4",
      "path": "89"
    },
    "5128": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SUB",
      "path": "89"
    },
    "5129": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5130": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "5132": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP7",
      "path": "89"
    },
    "5133": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "GAS",
      "path": "89"
    },
    "5134": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "CALL",
      "path": "89"
    },
    "5135": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5136": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5137": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5138": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "RETURNDATASIZE",
      "path": "89"
    },
    "5139": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5140": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "5142": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5143": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "EQ",
      "path": "89"
    },
    "5144": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x143D"
    },
    "5147": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "5148": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "5150": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5151": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5152": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5153": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x1F"
    },
    "5155": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "NOT",
      "path": "89"
    },
    "5156": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x3F"
    },
    "5158": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "RETURNDATASIZE",
      "path": "89"
    },
    "5159": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "ADD",
      "path": "89"
    },
    "5160": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "AND",
      "path": "89"
    },
    "5161": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5162": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "ADD",
      "path": "89"
    },
    "5163": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "5165": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5166": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "RETURNDATASIZE",
      "path": "89"
    },
    "5167": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5168": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5169": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "RETURNDATASIZE",
      "path": "89"
    },
    "5170": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "5172": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5174": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "DUP5",
      "path": "89"
    },
    "5175": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "ADD",
      "path": "89"
    },
    "5176": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "RETURNDATACOPY",
      "path": "89"
    },
    "5177": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1442"
    },
    "5180": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "JUMP",
      "path": "89"
    },
    "5181": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "5182": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x60"
    },
    "5184": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5185": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5186": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "5187": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20609,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5188": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20567,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5189": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20567,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5190": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20567,
        20793
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5191": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20567,
        20793
      ],
      "op": "POP",
      "path": "89"
    },
    "5192": {
      "branch": 99,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20808,
        20815
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5193": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20803,
        21345
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x1493"
    },
    "5196": {
      "branch": 99,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20803,
        21345
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "5197": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20835,
        20852
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5198": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20835,
        20852
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5199": {
      "branch": 100,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20835,
        20856
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "5200": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20831,
        21207
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x145C"
    },
    "5203": {
      "branch": 100,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20831,
        21207
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "5204": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21000,
        21010
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5205": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20994,
        21011
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5206": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21060,
        21075
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5207": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21047,
        21057
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5208": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21043,
        21045
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5210": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21039,
        21058
      ],
      "op": "ADD",
      "path": "89"
    },
    "5211": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21032,
        21076
      ],
      "op": "REVERT",
      "path": "89"
    },
    "5212": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20949,
        21094
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "5213": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH1",
      "path": "89",
      "statement": 65,
      "value": "0x40"
    },
    "5215": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5222": {
      "op": "SHL"
    },
    "5223": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5224": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5225": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x4"
    },
    "5227": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "ADD",
      "path": "89"
    },
    "5228": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5229": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5230": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5232": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "ADD",
      "path": "89"
    },
    "5233": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5234": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5235": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "SUB",
      "path": "89"
    },
    "5236": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP3",
      "path": "89"
    },
    "5237": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5238": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x32"
    },
    "5240": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5241": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "MSTORE",
      "path": "89"
    },
    "5242": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5244": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "ADD",
      "path": "89"
    },
    "5245": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5246": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x16E5"
    },
    "5249": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x32"
    },
    "5251": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5252": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "CODECOPY",
      "path": "89"
    },
    "5253": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "5255": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "ADD",
      "path": "89"
    },
    "5256": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5257": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "POP",
      "path": "89"
    },
    "5258": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "POP",
      "path": "89"
    },
    "5259": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x40"
    },
    "5261": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5262": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5263": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "SWAP2",
      "path": "89"
    },
    "5264": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "SUB",
      "path": "89"
    },
    "5265": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "5266": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21132,
        21192
      ],
      "op": "REVERT",
      "path": "89"
    },
    "5267": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        20803,
        21345
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "5268": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21237,
        21250
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "5270": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21264,
        21274
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5271": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5272": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5274": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "ADD",
      "path": "89"
    },
    "5275": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "SWAP1",
      "path": "89"
    },
    "5276": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5277": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x20"
    },
    "5279": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "DUP2",
      "path": "89"
    },
    "5280": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "LT",
      "path": "89"
    },
    "5281": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "ISZERO",
      "path": "89"
    },
    "5282": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0x14AA"
    },
    "5285": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "JUMPI",
      "path": "89"
    },
    "5286": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "PUSH1",
      "path": "89",
      "value": "0x0"
    },
    "5288": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "DUP1",
      "path": "89"
    },
    "5289": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "REVERT",
      "path": "89"
    },
    "5290": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "JUMPDEST",
      "path": "89"
    },
    "5291": {
      "op": "POP"
    },
    "5292": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21253,
        21285
      ],
      "op": "MLOAD",
      "path": "89"
    },
    "5293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5299": {
      "op": "SHL"
    },
    "5300": {
      "op": "SUB"
    },
    "5301": {
      "op": "NOT"
    },
    "5302": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21307,
        21333
      ],
      "op": "AND",
      "path": "89",
      "statement": 66
    },
    "5303": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "5310": {
      "op": "SHL"
    },
    "5311": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21307,
        21333
      ],
      "op": "EQ",
      "path": "89"
    },
    "5312": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21307,
        21333
      ],
      "op": "SWAP4",
      "path": "89"
    },
    "5313": {
      "op": "POP"
    },
    "5314": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21299,
        21334
      ],
      "op": "PUSH2",
      "path": "89",
      "value": "0xDFA"
    },
    "5317": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21299,
        21334
      ],
      "op": "SWAP3",
      "path": "89"
    },
    "5318": {
      "op": "POP"
    },
    "5319": {
      "op": "POP"
    },
    "5320": {
      "op": "POP"
    },
    "5321": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        21299,
        21334
      ],
      "op": "JUMP",
      "path": "89"
    },
    "5322": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4237,
        4360
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "5323": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4308,
        4312
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "5325": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "SWAP1",
      "path": "105",
      "statement": 67
    },
    "5326": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5327": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5328": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "5330": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "5331": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5332": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "5333": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4343
      ],
      "op": "ADD",
      "path": "105"
    },
    "5334": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "5336": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5337": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x40"
    },
    "5339": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5340": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "KECCAK256",
      "path": "105"
    },
    "5341": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4348
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "5342": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4353
      ],
      "op": "ISZERO",
      "path": "105"
    },
    "5343": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4353
      ],
      "op": "ISZERO",
      "path": "105"
    },
    "5344": {
      "fn": "EnumerableMap._contains",
      "offset": [
        4331,
        4353
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5345": {
      "fn": "EnumerableMap._contains",
      "jump": "o",
      "offset": [
        4237,
        4360
      ],
      "op": "JUMP",
      "path": "105"
    },
    "5346": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2150,
        3662
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "5347": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2216,
        2220
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5349": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5350": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5351": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5352": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2365
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x1"
    },
    "5354": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2365
      ],
      "op": "DUP4",
      "path": "106"
    },
    "5355": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2365
      ],
      "op": "ADD",
      "path": "106"
    },
    "5356": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "5358": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5359": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x40"
    },
    "5361": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5362": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "5363": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2353,
        2372
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "5364": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2387,
        2402
      ],
      "op": "DUP1",
      "path": "106"
    },
    "5365": {
      "branch": 105,
      "fn": "EnumerableSet._remove",
      "offset": [
        2387,
        2402
      ],
      "op": "ISZERO",
      "path": "106"
    },
    "5366": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2383,
        3656
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x159E"
    },
    "5369": {
      "branch": 105,
      "fn": "EnumerableSet._remove",
      "offset": [
        2383,
        3656
      ],
      "op": "JUMPI",
      "path": "106"
    },
    "5370": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2834
      ],
      "op": "DUP4",
      "path": "106"
    },
    "5371": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2834
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "5372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5374": {
      "op": "NOT"
    },
    "5375": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2768,
        2782
      ],
      "op": "DUP1",
      "path": "106"
    },
    "5376": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2768,
        2782
      ],
      "op": "DUP4",
      "path": "106"
    },
    "5377": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2768,
        2782
      ],
      "op": "ADD",
      "path": "106"
    },
    "5378": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2768,
        2782
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "5379": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5380": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5381": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "ADD",
      "path": "106"
    },
    "5382": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5383": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2744,
        2765
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5385": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2744,
        2765
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5386": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2819
      ],
      "op": "DUP8",
      "path": "106"
    },
    "5387": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2819
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5388": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "DUP4",
      "path": "106"
    },
    "5389": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2816,
        2838
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5390": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5391": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "LT",
      "path": "106"
    },
    "5392": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x1515"
    },
    "5395": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "JUMPI",
      "path": "106"
    },
    "5396": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "INVALID",
      "path": "106"
    },
    "5397": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "5398": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5399": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5401": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5402": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "5404": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5406": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "5407": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "ADD",
      "path": "106"
    },
    "5408": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3098,
        3120
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "5409": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3078,
        3120
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5410": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3078,
        3120
      ],
      "op": "POP",
      "path": "106"
    },
    "5411": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3241,
        3250
      ],
      "op": "DUP1",
      "path": "106",
      "statement": 68
    },
    "5412": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3215
      ],
      "op": "DUP8",
      "path": "106"
    },
    "5413": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3223
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5415": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3223
      ],
      "op": "ADD",
      "path": "106"
    },
    "5416": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3224,
        3237
      ],
      "op": "DUP5",
      "path": "106"
    },
    "5417": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5418": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "5419": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5420": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "LT",
      "path": "106"
    },
    "5421": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x1532"
    },
    "5424": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "JUMPI",
      "path": "106"
    },
    "5425": {
      "dev": "Index out of range",
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "INVALID",
      "path": "106"
    },
    "5426": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "5427": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5429": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "5430": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP3",
      "path": "106"
    },
    "5431": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5432": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "5434": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP1",
      "path": "106"
    },
    "5435": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "DUP4",
      "path": "106"
    },
    "5436": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "5437": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5438": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "5439": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3238
      ],
      "op": "ADD",
      "path": "106"
    },
    "5440": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3250
      ],
      "op": "SWAP3",
      "path": "106"
    },
    "5441": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3250
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5442": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3250
      ],
      "op": "SWAP3",
      "path": "106"
    },
    "5443": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3212,
        3250
      ],
      "op": "SSTORE",
      "path": "106"
    },
    "5444": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "DUP3",
      "path": "106",
      "statement": 69
    },
    "5445": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5446": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5447": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3358,
        3359
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x1"
    },
    "5449": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3328
      ],
      "op": "DUP10",
      "path": "106"
    },
    "5450": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3328
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5451": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3328
      ],
      "op": "ADD",
      "path": "106"
    },
    "5452": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5453": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "SWAP3",
      "path": "106"
    },
    "5454": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5455": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x40"
    },
    "5457": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5458": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3339
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "5459": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3342,
        3359
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5460": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3342,
        3359
      ],
      "op": "DUP5",
      "path": "106"
    },
    "5461": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3342,
        3359
      ],
      "op": "ADD",
      "path": "106"
    },
    "5462": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3359
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5463": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3359
      ],
      "op": "SSTORE",
      "path": "106"
    },
    "5464": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "DUP7",
      "path": "106",
      "statement": 70
    },
    "5465": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "5466": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3319
      ],
      "op": "DUP8",
      "path": "106"
    },
    "5467": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3316,
        3319
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5468": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "DUP1",
      "path": "106"
    },
    "5469": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x1562"
    },
    "5472": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "JUMPI",
      "path": "106"
    },
    "5473": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "INVALID",
      "path": "106"
    },
    "5474": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "5475": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x1"
    },
    "5477": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5478": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SUB",
      "path": "106"
    },
    "5479": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5480": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5481": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5482": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5484": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5485": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "5487": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5489": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "5490": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "ADD",
      "path": "106"
    },
    "5491": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5493": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5494": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SSTORE",
      "path": "106"
    },
    "5495": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5496": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3465,
        3482
      ],
      "op": "SSTORE",
      "path": "106"
    },
    "5497": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3560
      ],
      "op": "DUP7",
      "path": "106",
      "statement": 71
    },
    "5498": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3569
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x1"
    },
    "5500": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3569
      ],
      "op": "ADD",
      "path": "106"
    },
    "5501": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5503": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3570,
        3575
      ],
      "op": "DUP8",
      "path": "106"
    },
    "5504": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5505": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5506": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "5508": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "ADD",
      "path": "106"
    },
    "5509": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5510": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5511": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5512": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "5514": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "ADD",
      "path": "106"
    },
    "5515": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5517": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3557,
        3576
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "5518": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3550,
        3576
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5520": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3550,
        3576
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5521": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3550,
        3576
      ],
      "op": "SSTORE",
      "path": "106"
    },
    "5522": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3598,
        3602
      ],
      "op": "PUSH1",
      "path": "106",
      "statement": 72,
      "value": "0x1"
    },
    "5524": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "SWAP5",
      "path": "106"
    },
    "5525": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "106"
    },
    "5526": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "106"
    },
    "5527": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "106"
    },
    "5528": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "106"
    },
    "5529": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "POP",
      "path": "106"
    },
    "5530": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x713"
    },
    "5533": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3591,
        3602
      ],
      "op": "JUMP",
      "path": "106"
    },
    "5534": {
      "fn": "EnumerableSet._remove",
      "offset": [
        2383,
        3656
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "5535": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3640,
        3645
      ],
      "op": "PUSH1",
      "path": "106",
      "statement": 73,
      "value": "0x0"
    },
    "5537": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "5538": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "POP",
      "path": "106"
    },
    "5539": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "POP",
      "path": "106"
    },
    "5540": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x713"
    },
    "5543": {
      "fn": "EnumerableSet._remove",
      "offset": [
        3633,
        3645
      ],
      "op": "JUMP",
      "path": "106"
    },
    "5544": {
      "fn": "EnumerableSet._add",
      "offset": [
        1578,
        1982
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "5545": {
      "fn": "EnumerableSet._add",
      "offset": [
        1641,
        1645
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5547": {
      "fn": "EnumerableSet._add",
      "offset": [
        1662,
        1683
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x15B4"
    },
    "5550": {
      "fn": "EnumerableSet._add",
      "offset": [
        1672,
        1675
      ],
      "op": "DUP4",
      "path": "106"
    },
    "5551": {
      "fn": "EnumerableSet._add",
      "offset": [
        1677,
        1682
      ],
      "op": "DUP4",
      "path": "106"
    },
    "5552": {
      "fn": "EnumerableSet._add",
      "offset": [
        1662,
        1671
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x14CA"
    },
    "5555": {
      "fn": "EnumerableSet._add",
      "jump": "i",
      "offset": [
        1662,
        1683
      ],
      "op": "JUMP",
      "path": "106"
    },
    "5556": {
      "branch": 106,
      "fn": "EnumerableSet._add",
      "offset": [
        1662,
        1683
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "5557": {
      "fn": "EnumerableSet._add",
      "offset": [
        1657,
        1976
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x15EA"
    },
    "5560": {
      "branch": 106,
      "fn": "EnumerableSet._add",
      "offset": [
        1657,
        1976
      ],
      "op": "JUMPI",
      "path": "106"
    },
    "5561": {
      "op": "POP"
    },
    "5562": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP2",
      "path": "106",
      "statement": 74
    },
    "5563": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "5564": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x1"
    },
    "5566": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5567": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5568": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "ADD",
      "path": "106"
    },
    "5569": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP5",
      "path": "106"
    },
    "5570": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SSTORE",
      "path": "106"
    },
    "5571": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1710
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x0"
    },
    "5573": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP5",
      "path": "106"
    },
    "5574": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP2",
      "path": "106"
    },
    "5575": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5576": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x20"
    },
    "5578": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP1",
      "path": "106"
    },
    "5579": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP3",
      "path": "106"
    },
    "5580": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "5581": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5582": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SWAP4",
      "path": "106"
    },
    "5583": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "ADD",
      "path": "106"
    },
    "5584": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "DUP5",
      "path": "106"
    },
    "5585": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5586": {
      "fn": "EnumerableSet._add",
      "offset": [
        1699,
        1722
      ],
      "op": "SSTORE",
      "path": "106"
    },
    "5587": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1897
      ],
      "op": "DUP5",
      "path": "106",
      "statement": 75
    },
    "5588": {
      "fn": "EnumerableSet._add",
      "offset": [
        1879,
        1897
      ],
      "op": "SLOAD",
      "path": "106"
    },
    "5589": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "DUP5",
      "path": "106"
    },
    "5590": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "DUP3",
      "path": "106"
    },
    "5591": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5592": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1869
      ],
      "op": "DUP3",
      "path": "106"
    },
    "5593": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1869
      ],
      "op": "DUP7",
      "path": "106"
    },
    "5594": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1869
      ],
      "op": "ADD",
      "path": "106"
    },
    "5595": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5596": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "SWAP4",
      "path": "106"
    },
    "5597": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "MSTORE",
      "path": "106"
    },
    "5598": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "PUSH1",
      "path": "106",
      "value": "0x40"
    },
    "5600": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5601": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1876
      ],
      "op": "KECCAK256",
      "path": "106"
    },
    "5602": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1897
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "5603": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1897
      ],
      "op": "SWAP1",
      "path": "106"
    },
    "5604": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1897
      ],
      "op": "SWAP2",
      "path": "106"
    },
    "5605": {
      "fn": "EnumerableSet._add",
      "offset": [
        1857,
        1897
      ],
      "op": "SSTORE",
      "path": "106"
    },
    "5606": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1922
      ],
      "op": "PUSH2",
      "path": "106",
      "statement": 76,
      "value": "0x713"
    },
    "5609": {
      "fn": "EnumerableSet._add",
      "offset": [
        1911,
        1922
      ],
      "op": "JUMP",
      "path": "106"
    },
    "5610": {
      "fn": "EnumerableSet._add",
      "offset": [
        1657,
        1976
      ],
      "op": "JUMPDEST",
      "path": "106"
    },
    "5611": {
      "op": "POP"
    },
    "5612": {
      "fn": "EnumerableSet._add",
      "offset": [
        1960,
        1965
      ],
      "op": "PUSH1",
      "path": "106",
      "statement": 77,
      "value": "0x0"
    },
    "5614": {
      "fn": "EnumerableSet._add",
      "offset": [
        1953,
        1965
      ],
      "op": "PUSH2",
      "path": "106",
      "value": "0x713"
    },
    "5617": {
      "fn": "EnumerableSet._add",
      "offset": [
        1953,
        1965
      ],
      "op": "JUMP",
      "path": "106"
    },
    "5618": {
      "fn": "EnumerableMap._set",
      "offset": [
        1795,
        2473
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "5619": {
      "fn": "EnumerableMap._set",
      "offset": [
        1871,
        1875
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "5621": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP3",
      "path": "105"
    },
    "5622": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5623": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5624": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2016
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "5626": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2016
      ],
      "op": "DUP5",
      "path": "105"
    },
    "5627": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2016
      ],
      "op": "ADD",
      "path": "105"
    },
    "5628": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "5630": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5631": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x40"
    },
    "5633": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5634": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "KECCAK256",
      "path": "105"
    },
    "5635": {
      "fn": "EnumerableMap._set",
      "offset": [
        2004,
        2021
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "5636": {
      "branch": 103,
      "fn": "EnumerableMap._set",
      "offset": [
        2036,
        2049
      ],
      "op": "DUP1",
      "path": "105"
    },
    "5637": {
      "fn": "EnumerableMap._set",
      "offset": [
        2032,
        2467
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x1657"
    },
    "5640": {
      "branch": 103,
      "fn": "EnumerableMap._set",
      "offset": [
        2032,
        2467
      ],
      "op": "JUMPI",
      "path": "105"
    },
    "5641": {
      "op": "POP"
    },
    "5642": {
      "op": "POP"
    },
    "5643": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "PUSH1",
      "path": "105",
      "statement": 78,
      "value": "0x40"
    },
    "5645": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP1",
      "path": "105"
    },
    "5646": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "5647": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP1",
      "path": "105"
    },
    "5648": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP3",
      "path": "105"
    },
    "5649": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "ADD",
      "path": "105"
    },
    "5650": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP3",
      "path": "105"
    },
    "5651": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5652": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP4",
      "path": "105"
    },
    "5653": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5654": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5655": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "5657": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP1",
      "path": "105"
    },
    "5658": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP3",
      "path": "105"
    },
    "5659": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "ADD",
      "path": "105"
    },
    "5660": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP5",
      "path": "105"
    },
    "5661": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5662": {
      "fn": "EnumerableMap._set",
      "offset": [
        2120,
        2158
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5663": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP7",
      "path": "105"
    },
    "5664": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "5665": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "5667": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5668": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5669": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "ADD",
      "path": "105"
    },
    "5670": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP10",
      "path": "105"
    },
    "5671": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SSTORE",
      "path": "105"
    },
    "5672": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2114
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "5674": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP10",
      "path": "105"
    },
    "5675": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5676": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5677": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP5",
      "path": "105"
    },
    "5678": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5679": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "KECCAK256",
      "path": "105"
    },
    "5680": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP6",
      "path": "105"
    },
    "5681": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "5682": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x2"
    },
    "5684": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5685": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP4",
      "path": "105"
    },
    "5686": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "MUL",
      "path": "105"
    },
    "5687": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5688": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP6",
      "path": "105"
    },
    "5689": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "ADD",
      "path": "105"
    },
    "5690": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "5691": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP3",
      "path": "105"
    },
    "5692": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SSTORE",
      "path": "105"
    },
    "5693": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "5694": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "MLOAD",
      "path": "105"
    },
    "5695": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5696": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "DUP3",
      "path": "105"
    },
    "5697": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "ADD",
      "path": "105"
    },
    "5698": {
      "fn": "EnumerableMap._set",
      "offset": [
        2102,
        2159
      ],
      "op": "SSTORE",
      "path": "105"
    },
    "5699": {
      "fn": "EnumerableMap._set",
      "offset": [
        2314,
        2333
      ],
      "op": "DUP7",
      "path": "105",
      "statement": 79
    },
    "5700": {
      "fn": "EnumerableMap._set",
      "offset": [
        2314,
        2333
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "5701": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "DUP7",
      "path": "105"
    },
    "5702": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "DUP5",
      "path": "105"
    },
    "5703": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5704": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2306
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5705": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2306
      ],
      "op": "DUP9",
      "path": "105"
    },
    "5706": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2306
      ],
      "op": "ADD",
      "path": "105"
    },
    "5707": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5708": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "5709": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5710": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP3",
      "path": "105"
    },
    "5711": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5712": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "5713": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2311
      ],
      "op": "KECCAK256",
      "path": "105"
    },
    "5714": {
      "fn": "EnumerableMap._set",
      "offset": [
        2294,
        2333
      ],
      "op": "SSTORE",
      "path": "105"
    },
    "5715": {
      "fn": "EnumerableMap._set",
      "offset": [
        2347,
        2358
      ],
      "op": "PUSH2",
      "path": "105",
      "statement": 80,
      "value": "0xF86"
    },
    "5718": {
      "fn": "EnumerableMap._set",
      "offset": [
        2347,
        2358
      ],
      "op": "JUMP",
      "path": "105"
    },
    "5719": {
      "fn": "EnumerableMap._set",
      "offset": [
        2032,
        2467
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "5720": {
      "fn": "EnumerableMap._set",
      "offset": [
        2425,
        2430
      ],
      "op": "DUP3",
      "path": "105",
      "statement": 81
    },
    "5721": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2392
      ],
      "op": "DUP6",
      "path": "105"
    },
    "5722": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2401
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "5724": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2401
      ],
      "op": "ADD",
      "path": "105"
    },
    "5725": {
      "fn": "EnumerableMap._set",
      "offset": [
        2413,
        2414
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "5727": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2410
      ],
      "op": "DUP4",
      "path": "105"
    },
    "5728": {
      "fn": "EnumerableMap._set",
      "offset": [
        2402,
        2414
      ],
      "op": "SUB",
      "path": "105"
    },
    "5729": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5730": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "SLOAD",
      "path": "105"
    },
    "5731": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5732": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "LT",
      "path": "105"
    },
    "5733": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0x166A"
    },
    "5736": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "JUMPI",
      "path": "105"
    },
    "5737": {
      "dev": "Index out of range",
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "INVALID",
      "path": "105"
    },
    "5738": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "JUMPDEST",
      "path": "105"
    },
    "5739": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5740": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "5742": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "MSTORE",
      "path": "105"
    },
    "5743": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x20"
    },
    "5745": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x0"
    },
    "5747": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "KECCAK256",
      "path": "105"
    },
    "5748": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5749": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x2"
    },
    "5751": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "MUL",
      "path": "105"
    },
    "5752": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2415
      ],
      "op": "ADD",
      "path": "105"
    },
    "5753": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2422
      ],
      "op": "PUSH1",
      "path": "105",
      "value": "0x1"
    },
    "5755": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2422
      ],
      "op": "ADD",
      "path": "105"
    },
    "5756": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2430
      ],
      "op": "DUP2",
      "path": "105"
    },
    "5757": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2430
      ],
      "op": "SWAP1",
      "path": "105"
    },
    "5758": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2430
      ],
      "op": "SSTORE",
      "path": "105"
    },
    "5759": {
      "fn": "EnumerableMap._set",
      "offset": [
        2389,
        2430
      ],
      "op": "POP",
      "path": "105"
    },
    "5760": {
      "fn": "EnumerableMap._set",
      "offset": [
        2451,
        2456
      ],
      "op": "PUSH1",
      "path": "105",
      "statement": 82,
      "value": "0x0"
    },
    "5762": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "SWAP2",
      "path": "105"
    },
    "5763": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "POP",
      "path": "105"
    },
    "5764": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "POP",
      "path": "105"
    },
    "5765": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "PUSH2",
      "path": "105",
      "value": "0xF86"
    },
    "5768": {
      "fn": "EnumerableMap._set",
      "offset": [
        2444,
        2456
      ],
      "op": "JUMP",
      "path": "105"
    },
    "5769": {
      "fn": "Address.isContract",
      "offset": [
        685,
        1295
      ],
      "op": "JUMPDEST",
      "path": "101"
    },
    "5770": {
      "fn": "Address.isContract",
      "offset": [
        745,
        749
      ],
      "op": "PUSH1",
      "path": "101",
      "value": "0x0"
    },
    "5772": {
      "fn": "Address.isContract",
      "offset": [
        1206,
        1226
      ],
      "op": "DUP2",
      "path": "101"
    },
    "5773": {
      "fn": "Address.isContract",
      "offset": [
        1206,
        1226
      ],
      "op": "EXTCODEHASH",
      "path": "101"
    },
    "5774": {
      "fn": "Address.isContract",
      "offset": [
        1051,
        1117
      ],
      "op": "PUSH32",
      "path": "101",
      "value": "0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470"
    },
    "5807": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP2",
      "path": "101",
      "statement": 83
    },
    "5808": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP2",
      "path": "101"
    },
    "5809": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "EQ",
      "path": "101"
    },
    "5810": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "DUP1",
      "path": "101"
    },
    "5811": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "ISZERO",
      "path": "101"
    },
    "5812": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1268
      ],
      "op": "SWAP1",
      "path": "101"
    },
    "5813": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1287
      ],
      "op": "PUSH2",
      "path": "101",
      "value": "0xDFA"
    },
    "5816": {
      "fn": "Address.isContract",
      "offset": [
        1245,
        1287
      ],
      "op": "JUMPI",
      "path": "101"
    },
    "5817": {
      "op": "POP"
    },
    "5818": {
      "op": "POP"
    },
    "5819": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "ISZERO",
      "path": "101"
    },
    "5820": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "ISZERO",
      "path": "101"
    },
    "5821": {
      "fn": "Address.isContract",
      "offset": [
        1272,
        1287
      ],
      "op": "SWAP3",
      "path": "101"
    },
    "5822": {
      "fn": "Address.isContract",
      "offset": [
        1237,
        1288
      ],
      "op": "SWAP2",
      "path": "101"
    },
    "5823": {
      "op": "POP"
    },
    "5824": {
      "op": "POP"
    },
    "5825": {
      "fn": "Address.isContract",
      "jump": "o",
      "offset": [
        685,
        1295
      ],
      "op": "JUMP",
      "path": "101"
    }
  },
  "sha1": "d0bdb66e42e799d8164f859c82550ae6694a05e9",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../../GSN/Context.sol\";\nimport \"./IERC721.sol\";\nimport \"./IERC721Metadata.sol\";\nimport \"./IERC721Enumerable.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"../../introspection/ERC165.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/EnumerableSet.sol\";\nimport \"../../utils/EnumerableMap.sol\";\nimport \"../../utils/Strings.sol\";\n\n/**\n * @title ERC721 Non-Fungible Token Standard basic implementation\n * @dev see https://eips.ethereum.org/EIPS/eip-721\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Enumerable {\n    using SafeMath for uint256;\n    using Address for address;\n    using EnumerableSet for EnumerableSet.UintSet;\n    using EnumerableMap for EnumerableMap.UintToAddressMap;\n    using Strings for uint256;\n\n    // Equals to `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n    // which can be also obtained as `IERC721Receiver(0).onERC721Received.selector`\n    bytes4 private constant _ERC721_RECEIVED = 0x150b7a02;\n\n    // Mapping from holder address to their (enumerable) set of owned tokens\n    mapping (address => EnumerableSet.UintSet) private _holderTokens;\n\n    // Enumerable mapping from token ids to their owners\n    EnumerableMap.UintToAddressMap private _tokenOwners;\n\n    // Mapping from token ID to approved address\n    mapping (uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping (address => mapping (address => bool)) private _operatorApprovals;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    // Base URI\n    string private _baseURI;\n\n    /*\n     *     bytes4(keccak256('balanceOf(address)')) == 0x70a08231\n     *     bytes4(keccak256('ownerOf(uint256)')) == 0x6352211e\n     *     bytes4(keccak256('approve(address,uint256)')) == 0x095ea7b3\n     *     bytes4(keccak256('getApproved(uint256)')) == 0x081812fc\n     *     bytes4(keccak256('setApprovalForAll(address,bool)')) == 0xa22cb465\n     *     bytes4(keccak256('isApprovedForAll(address,address)')) == 0xe985e9c5\n     *     bytes4(keccak256('transferFrom(address,address,uint256)')) == 0x23b872dd\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256)')) == 0x42842e0e\n     *     bytes4(keccak256('safeTransferFrom(address,address,uint256,bytes)')) == 0xb88d4fde\n     *\n     *     => 0x70a08231 ^ 0x6352211e ^ 0x095ea7b3 ^ 0x081812fc ^\n     *        0xa22cb465 ^ 0xe985e9c ^ 0x23b872dd ^ 0x42842e0e ^ 0xb88d4fde == 0x80ac58cd\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721 = 0x80ac58cd;\n\n    /*\n     *     bytes4(keccak256('name()')) == 0x06fdde03\n     *     bytes4(keccak256('symbol()')) == 0x95d89b41\n     *     bytes4(keccak256('tokenURI(uint256)')) == 0xc87b56dd\n     *\n     *     => 0x06fdde03 ^ 0x95d89b41 ^ 0xc87b56dd == 0x5b5e139f\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_METADATA = 0x5b5e139f;\n\n    /*\n     *     bytes4(keccak256('totalSupply()')) == 0x18160ddd\n     *     bytes4(keccak256('tokenOfOwnerByIndex(address,uint256)')) == 0x2f745c59\n     *     bytes4(keccak256('tokenByIndex(uint256)')) == 0x4f6ccce7\n     *\n     *     => 0x18160ddd ^ 0x2f745c59 ^ 0x4f6ccce7 == 0x780e9d63\n     */\n    bytes4 private constant _INTERFACE_ID_ERC721_ENUMERABLE = 0x780e9d63;\n\n    constructor (string memory name, string memory symbol) public {\n        _name = name;\n        _symbol = symbol;\n\n        // register the supported interfaces to conform to ERC721 via ERC165\n        _registerInterface(_INTERFACE_ID_ERC721);\n        _registerInterface(_INTERFACE_ID_ERC721_METADATA);\n        _registerInterface(_INTERFACE_ID_ERC721_ENUMERABLE);\n    }\n\n    /**\n     * @dev Gets the balance of the specified address.\n     * @param owner address to query the balance of\n     * @return uint256 representing the amount owned by the passed address\n     */\n    function balanceOf(address owner) public view override returns (uint256) {\n        require(owner != address(0), \"ERC721: balance query for the zero address\");\n\n        return _holderTokens[owner].length();\n    }\n\n    /**\n     * @dev Gets the owner of the specified token ID.\n     * @param tokenId uint256 ID of the token to query the owner of\n     * @return address currently marked as the owner of the given token ID\n     */\n    function ownerOf(uint256 tokenId) public view override returns (address) {\n        return _tokenOwners.get(tokenId, \"ERC721: owner query for nonexistent token\");\n    }\n\n    /**\n     * @dev Gets the token name.\n     * @return string representing the token name\n     */\n    function name() public view override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Gets the token symbol.\n     * @return string representing the token symbol\n     */\n    function symbol() public view override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the URI for a given token ID. May return an empty string.\n     *\n     * If a base URI is set (via {_setBaseURI}), it is added as a prefix to the\n     * token's own URI (via {_setTokenURI}).\n     *\n     * If there is a base URI but no token URI, the token's ID will be used as\n     * its URI when appending it to the base URI. This pattern for autogenerated\n     * token URIs can lead to large gas savings.\n     *\n     * .Examples\n     * |===\n     * |`_setBaseURI()` |`_setTokenURI()` |`tokenURI()`\n     * | \"\"\n     * | \"\"\n     * | \"\"\n     * | \"\"\n     * | \"token.uri/123\"\n     * | \"token.uri/123\"\n     * | \"token.uri/\"\n     * | \"123\"\n     * | \"token.uri/123\"\n     * | \"token.uri/\"\n     * | \"\"\n     * | \"token.uri/<tokenId>\"\n     * |===\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\n        require(_exists(tokenId), \"ERC721Metadata: URI query for nonexistent token\");\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n\n        // If there is no base URI, return the token URI.\n        if (bytes(_baseURI).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(_baseURI, _tokenURI));\n        }\n        // If there is a baseURI but no tokenURI, concatenate the tokenID to the baseURI.\n        return string(abi.encodePacked(_baseURI, tokenId.toString()));\n    }\n\n    /**\n    * @dev Returns the base URI set via {_setBaseURI}. This will be\n    * automatically added as a prefix in {tokenURI} to each token's URI, or\n    * to the token ID if no specific URI is set for that token ID.\n    */\n    function baseURI() public view returns (string memory) {\n        return _baseURI;\n    }\n\n    /**\n     * @dev Gets the token ID at a given index of the tokens list of the requested owner.\n     * @param owner address owning the tokens list to be accessed\n     * @param index uint256 representing the index to be accessed of the requested tokens list\n     * @return uint256 token ID at the given index of the tokens list owned by the requested address\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view override returns (uint256) {\n        return _holderTokens[owner].at(index);\n    }\n\n    /**\n     * @dev Gets the total amount of tokens stored by the contract.\n     * @return uint256 representing the total amount of tokens\n     */\n    function totalSupply() public view override returns (uint256) {\n        // _tokenOwners are indexed by tokenIds, so .length() returns the number of tokenIds\n        return _tokenOwners.length();\n    }\n\n    /**\n     * @dev Gets the token ID at a given index of all the tokens in this contract\n     * Reverts if the index is greater or equal to the total number of tokens.\n     * @param index uint256 representing the index to be accessed of the tokens list\n     * @return uint256 token ID at the given index of the tokens list\n     */\n    function tokenByIndex(uint256 index) public view override returns (uint256) {\n        (uint256 tokenId, ) = _tokenOwners.at(index);\n        return tokenId;\n    }\n\n    /**\n     * @dev Approves another address to transfer the given token ID\n     * The zero address indicates there is no approved address.\n     * There can only be one approved address per token at a given time.\n     * Can only be called by the token owner or an approved operator.\n     * @param to address to be approved for the given token ID\n     * @param tokenId uint256 ID of the token to be approved\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(_msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not owner nor approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev Gets the approved address for a token ID, or zero if no address set\n     * Reverts if the token ID does not exist.\n     * @param tokenId uint256 ID of the token to query the approval of\n     * @return address currently approved for the given token ID\n     */\n    function getApproved(uint256 tokenId) public view override returns (address) {\n        require(_exists(tokenId), \"ERC721: approved query for nonexistent token\");\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Sets or unsets the approval of a given operator\n     * An operator is allowed to transfer all tokens of the sender on their behalf.\n     * @param operator operator address to set the approval\n     * @param approved representing the status of the approval to be set\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        require(operator != _msgSender(), \"ERC721: approve to caller\");\n\n        _operatorApprovals[_msgSender()][operator] = approved;\n        emit ApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev Tells whether an operator is approved by a given owner.\n     * @param owner owner address which you want to query the approval of\n     * @param operator operator address which you want to query the approval of\n     * @return bool whether the given operator is approved by the given owner\n     */\n    function isApprovedForAll(address owner, address operator) public view override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Transfers the ownership of a given token ID to another address.\n     * Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     * Requires the msg.sender to be the owner, approved, or operator.\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Safely transfers the ownership of a given token ID to another address\n     * If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * Requires the msg.sender to be the owner, approved, or operator\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Safely transfers the ownership of a given token ID to another address\n     * If the target address is a contract, it must implement {IERC721Receiver-onERC721Received},\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * Requires the _msgSender() to be the owner, approved, or operator\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes data to send along with a safe transfer check\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory _data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: transfer caller is not owner nor approved\");\n        _safeTransfer(from, to, tokenId, _data);\n    }\n\n    /**\n     * @dev Safely transfers the ownership of a given token ID to another address\n     * If the target address is a contract, it must implement `onERC721Received`,\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * Requires the msg.sender to be the owner, approved, or operator\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes data to send along with a safe transfer check\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns whether the specified token exists.\n     * @param tokenId uint256 ID of the token to query the existence of\n     * @return bool whether the token exists\n     */\n    function _exists(uint256 tokenId) internal view returns (bool) {\n        return _tokenOwners.contains(tokenId);\n    }\n\n    /**\n     * @dev Returns whether the given spender can transfer a given token ID.\n     * @param spender address of the spender to query\n     * @param tokenId uint256 ID of the token to be transferred\n     * @return bool whether the msg.sender is approved for the given token ID,\n     * is an operator of the owner, or is the owner of the token\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view returns (bool) {\n        require(_exists(tokenId), \"ERC721: operator query for nonexistent token\");\n        address owner = ownerOf(tokenId);\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\n    }\n\n    /**\n     * @dev Internal function to safely mint a new token.\n     * Reverts if the given token ID already exists.\n     * If the target address is a contract, it must implement `onERC721Received`,\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * @param to The address that will own the minted token\n     * @param tokenId uint256 ID of the token to be minted\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Internal function to safely mint a new token.\n     * Reverts if the given token ID already exists.\n     * If the target address is a contract, it must implement `onERC721Received`,\n     * which is called upon a safe transfer, and return the magic value\n     * `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise,\n     * the transfer is reverted.\n     * @param to The address that will own the minted token\n     * @param tokenId uint256 ID of the token to be minted\n     * @param _data bytes data to send along with a safe transfer check\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory _data) internal virtual {\n        _mint(to, tokenId);\n        require(_checkOnERC721Received(address(0), to, tokenId, _data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Internal function to mint a new token.\n     * Reverts if the given token ID already exists.\n     * @param to The address that will own the minted token\n     * @param tokenId uint256 ID of the token to be minted\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId);\n\n        _holderTokens[to].add(tokenId);\n\n        _tokenOwners.set(tokenId, to);\n\n        emit Transfer(address(0), to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to burn a specific token.\n     * Reverts if the token does not exist.\n     * @param tokenId uint256 ID of the token being burned\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId);\n\n        // Clear approvals\n        _approve(address(0), tokenId);\n\n        // Clear metadata (if any)\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n\n        _holderTokens[owner].remove(tokenId);\n\n        _tokenOwners.remove(tokenId);\n\n        emit Transfer(owner, address(0), tokenId);\n    }\n\n    /**\n     * @dev Internal function to transfer ownership of a given token ID to another address.\n     * As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     * @param from current owner of the token\n     * @param to address to receive the ownership of the given token ID\n     * @param tokenId uint256 ID of the token to be transferred\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ownerOf(tokenId) == from, \"ERC721: transfer of token that is not own\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId);\n\n        // Clear approvals from the previous owner\n        _approve(address(0), tokenId);\n\n        _holderTokens[from].remove(tokenId);\n        _holderTokens[to].add(tokenId);\n\n        _tokenOwners.set(tokenId, to);\n\n        emit Transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev Internal function to set the token URI for a given token.\n     *\n     * Reverts if the token ID does not exist.\n     *\n     * TIP: If all token IDs share a prefix (for example, if your URIs look like\n     * `https://api.myproject.com/token/<id>`), use {_setBaseURI} to store\n     * it and save gas.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721Metadata: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n    }\n\n    /**\n     * @dev Internal function to set the base URI for all token IDs. It is\n     * automatically added as a prefix to the value returned in {tokenURI},\n     * or to the token ID if {tokenURI} is empty.\n     */\n    function _setBaseURI(string memory baseURI_) internal virtual {\n        _baseURI = baseURI_;\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory _data)\n        private returns (bool)\n    {\n        if (!to.isContract()) {\n            return true;\n        }\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = to.call(abi.encodeWithSelector(\n            IERC721Receiver(to).onERC721Received.selector,\n            _msgSender(),\n            from,\n            tokenId,\n            _data\n        ));\n        if (!success) {\n            if (returndata.length > 0) {\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n            }\n        } else {\n            bytes4 retval = abi.decode(returndata, (bytes4));\n            return (retval == _ERC721_RECEIVED);\n        }\n    }\n\n    function _approve(address to, uint256 tokenId) private {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, ``from``'s `tokenId` will be\n     * transferred to `to`.\n     * - when `from` is zero, `tokenId` will be minted for `to`.\n     * - when `to` is zero, ``from``'s `tokenId` will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual { }\n}\n",
  "sourceMap": "528:21635:89:-:0;;;3419:365;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3419:365:89;;;;;;;;;;-1:-1:-1;3419:365:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3419:365:89;;;;;;;;;;-1:-1:-1;3419:365:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3419:365:89;;-1:-1:-1;718:40:21;;-1:-1:-1;;;;737:20:21;-1:-1:-1;718:18:21;:40::i;:::-;3491:12:89;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;3513:16:89;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;3617:40:89;-1:-1:-1;;;3617:18:89;:40::i;:::-;3667:49;-1:-1:-1;;;3667:18:89;:49::i;:::-;3726:51;-1:-1:-1;;;3726:18:89;:51::i;:::-;3419:365;;528:21635;;1449:198:21;-1:-1:-1;;;;;;1532:25:21;;;;;1524:66;;;;;-1:-1:-1;;;1524:66:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1600:33:21;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1600:40:21;1636:4;1600:40;;;1449:198::o;528:21635:89:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;528:21635:89;;;-1:-1:-1;528:21635:89;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}