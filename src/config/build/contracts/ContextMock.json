{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "integerValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "stringValue",
          "type": "string"
        }
      ],
      "name": "Data",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "Sender",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "integerValue",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "stringValue",
          "type": "string"
        }
      ],
      "name": "msgData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "msgSender",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "contracts/openzeppelin/contracts/GSN/Context.sol",
    "34": "contracts/openzeppelin/contracts/mocks/ContextMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/ContextMock.sol",
    "exportedSymbols": {
      "ContextMock": [
        11326
      ],
      "ContextMockCaller": [
        11355
      ]
    },
    "id": 11356,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11286,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/GSN/Context.sol",
        "file": "../GSN/Context.sol",
        "id": 11287,
        "nodeType": "ImportDirective",
        "scope": 11356,
        "sourceUnit": 8186,
        "src": "25:28:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 11288,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8185,
              "src": "79:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$8185",
                "typeString": "contract Context"
              }
            },
            "id": 11289,
            "nodeType": "InheritanceSpecifier",
            "src": "79:7:34"
          }
        ],
        "contractDependencies": [
          8185
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11326,
        "linearizedBaseContracts": [
          11326,
          8185
        ],
        "name": "ContextMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 11293,
            "name": "Sender",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11291,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11293,
                  "src": "106:14:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "106:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "105:16:34"
            },
            "src": "93:29:34"
          },
          {
            "body": {
              "id": 11301,
              "nodeType": "Block",
              "src": "156:42:34",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11297,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8173,
                          "src": "178:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 11298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "178:12:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11296,
                      "name": "Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11293,
                      "src": "171:6:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "171:20:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11300,
                  "nodeType": "EmitStatement",
                  "src": "166:25:34"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "d737d0c7",
            "id": 11302,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "msgSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "146:2:34"
            },
            "returnParameters": {
              "id": 11295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "156:0:34"
            },
            "scope": 11326,
            "src": "128:70:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 11310,
            "name": "Data",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11304,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11310,
                  "src": "215:10:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11303,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:5:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11306,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "integerValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11310,
                  "src": "227:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "227:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11308,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "stringValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11310,
                  "src": "249:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11307,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "249:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "214:54:34"
            },
            "src": "204:65:34"
          },
          {
            "body": {
              "id": 11324,
              "nodeType": "Block",
              "src": "348:65:34",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 11318,
                          "name": "_msgData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8184,
                          "src": "368:8:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () view returns (bytes memory)"
                          }
                        },
                        "id": 11319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "368:10:34",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11320,
                        "name": "integerValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11312,
                        "src": "380:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11321,
                        "name": "stringValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11314,
                        "src": "394:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 11317,
                      "name": "Data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11310,
                      "src": "363:4:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory,uint256,string memory)"
                      }
                    },
                    "id": 11322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:43:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11323,
                  "nodeType": "EmitStatement",
                  "src": "358:48:34"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "376bf262",
            "id": 11325,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "msgData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11312,
                  "mutability": "mutable",
                  "name": "integerValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11325,
                  "src": "292:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "292:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11314,
                  "mutability": "mutable",
                  "name": "stringValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11325,
                  "src": "314:25:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11313,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "291:49:34"
            },
            "returnParameters": {
              "id": 11316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:34"
            },
            "scope": 11326,
            "src": "275:138:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11356,
        "src": "55:360:34"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 11355,
        "linearizedBaseContracts": [
          11355
        ],
        "name": "ContextMockCaller",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11336,
              "nodeType": "Block",
              "src": "498:36:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11331,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11328,
                        "src": "508:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ContextMock_$11326",
                          "typeString": "contract ContextMock"
                        }
                      },
                      "id": 11333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "msgSender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11302,
                      "src": "508:17:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 11334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "508:19:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11335,
                  "nodeType": "ExpressionStatement",
                  "src": "508:19:34"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3207ad96",
            "id": 11337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSender",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11328,
                  "mutability": "mutable",
                  "name": "context",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11337,
                  "src": "470:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContextMock_$11326",
                    "typeString": "contract ContextMock"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11327,
                    "name": "ContextMock",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11326,
                    "src": "470:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContextMock_$11326",
                      "typeString": "contract ContextMock"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:21:34"
            },
            "returnParameters": {
              "id": 11330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:34"
            },
            "scope": 11355,
            "src": "450:84:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11353,
              "nodeType": "Block",
              "src": "635:59:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 11349,
                        "name": "integerValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11341,
                        "src": "661:12:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 11350,
                        "name": "stringValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11343,
                        "src": "675:11:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 11346,
                        "name": "context",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11339,
                        "src": "645:7:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ContextMock_$11326",
                          "typeString": "contract ContextMock"
                        }
                      },
                      "id": 11348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "msgData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11325,
                      "src": "645:15:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory) external"
                      }
                    },
                    "id": 11351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "645:42:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11352,
                  "nodeType": "ExpressionStatement",
                  "src": "645:42:34"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "00860459",
            "id": 11354,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callData",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 11344,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11339,
                  "mutability": "mutable",
                  "name": "context",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11354,
                  "src": "558:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ContextMock_$11326",
                    "typeString": "contract ContextMock"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 11338,
                    "name": "ContextMock",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 11326,
                    "src": "558:11:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ContextMock_$11326",
                      "typeString": "contract ContextMock"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11341,
                  "mutability": "mutable",
                  "name": "integerValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11354,
                  "src": "579:20:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "579:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11343,
                  "mutability": "mutable",
                  "name": "stringValue",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 11354,
                  "src": "601:25:34",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 11342,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:6:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "557:70:34"
            },
            "returnParameters": {
              "id": 11345,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "635:0:34"
            },
            "scope": 11355,
            "src": "540:154:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11356,
        "src": "417:279:34"
      }
    ],
    "src": "0:697:34"
  },
  "bytecode": "608060405234801561001057600080fd5b506102c4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063376bf2621461003b578063d737d0c7146100ea575b600080fd5b6100e86004803603604081101561005157600080fd5b8135919081019060408101602082013564010000000081111561007357600080fd5b82018360208201111561008557600080fd5b803590602001918460018302840111640100000000831117156100a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100f2945050505050565b005b6100e8610205565b7faf235354a0a47c91ee171961326335cb2d1a8e55b8a89859b0e61eb049e50ea061011b61024b565b8383604051808060200184815260200180602001838103835286818151815260200191508051906020019080838360005b8381101561016457818101518382015260200161014c565b50505050905090810190601f1680156101915780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101c45781810151838201526020016101ac565b50505050905090810190601f1680156101f15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050565b7fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc61022e61028a565b604080516001600160a01b039092168252519081900360200190a1565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092935050505090565b339056fea26469706673582212209f5fff0095318d81c631b1bb57c53f3df260fcaceecd66b3325c6b2008b67f3c64736f6c634300060c0033",
  "bytecodeSha1": "2f15a4bc4fade0f1395c4ee7c4075aca8cedb321",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "ContextMock",
  "coverageMap": {
    "branches": {
      "10": {},
      "34": {}
    },
    "statements": {
      "10": {
        "Context._msgData": {
          "2": [
            1053,
            1068
          ]
        },
        "Context._msgSender": {
          "3": [
            815,
            832
          ]
        }
      },
      "34": {
        "ContextMock.msgData": {
          "0": [
            358,
            406
          ]
        },
        "ContextMock.msgSender": {
          "1": [
            166,
            191
          ]
        }
      }
    }
  },
  "dependencies": [
    "Context"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063376bf2621461003b578063d737d0c7146100ea575b600080fd5b6100e86004803603604081101561005157600080fd5b8135919081019060408101602082013564010000000081111561007357600080fd5b82018360208201111561008557600080fd5b803590602001918460018302840111640100000000831117156100a757600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506100f2945050505050565b005b6100e8610205565b7faf235354a0a47c91ee171961326335cb2d1a8e55b8a89859b0e61eb049e50ea061011b61024b565b8383604051808060200184815260200180602001838103835286818151815260200191508051906020019080838360005b8381101561016457818101518382015260200161014c565b50505050905090810190601f1680156101915780820380516001836020036101000a031916815260200191505b50838103825284518152845160209182019186019080838360005b838110156101c45781810151838201526020016101ac565b50505050905090810190601f1680156101f15780820380516001836020036101000a031916815260200191505b509550505050505060405180910390a15050565b7fd6558c3ed910d959271054471fd1c326679d9fece99c5091b00ed89627cf2bfc61022e61028a565b604080516001600160a01b039092168252519081900360200190a1565b60606000368080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092935050505090565b339056fea26469706673582212209f5fff0095318d81c631b1bb57c53f3df260fcaceecd66b3325c6b2008b67f3c64736f6c634300060c0033",
  "deployedSourceMap": "55:360:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:138;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;275:138:34;;-1:-1:-1;275:138:34;;-1:-1:-1;;;;;275:138:34:i;:::-;;128:70;;;:::i;275:138::-;363:43;368:10;:8;:10::i;:::-;380:12;394:11;363:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;363:43:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:138;;:::o;128:70::-;171:20;178:12;:10;:12::i;:::-;171:20;;;-1:-1:-1;;;;;171:20:34;;;;;;;;;;;;;;128:70::o;845:230:10:-;896:12;1060:8;;1053:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1053:15:10;;-1:-1:-1;;;;845:230:10;:::o;735:104::-;822:10;735:104;:::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    55,
    415
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x376BF262 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD737D0C7 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0xF2 SWAP5 POP POP POP POP POP JUMP JUMPDEST STOP JUMPDEST PUSH2 0xE8 PUSH2 0x205 JUMP JUMPDEST PUSH32 0xAF235354A0A47C91EE171961326335CB2D1A8E55B8A89859B0E61EB049E50EA0 PUSH2 0x11B PUSH2 0x24B JUMP JUMPDEST DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 SUB DUP4 MSTORE DUP7 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x164 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x191 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP DUP4 DUP2 SUB DUP3 MSTORE DUP5 MLOAD DUP2 MSTORE DUP5 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 DUP7 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1AC JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1F1 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH32 0xD6558C3ED910D959271054471FD1C326679D9FECE99C5091B00ED89627CF2BFC PUSH2 0x22E PUSH2 0x28A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 CALLDATASIZE DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 0x5F SELFDESTRUCT STOP SWAP6 BALANCE DUP14 DUP2 0xC6 BALANCE 0xB1 0xBB JUMPI 0xC5 EXTCODEHASH RETURNDATASIZE CALLCODE PUSH1 0xFC 0xAC 0xEE 0xCD PUSH7 0xB3325C6B2008B6 PUSH32 0x3C64736F6C634300060C00330000000000000000000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        55,
        415
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "5": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "CALLVALUE",
      "path": "34"
    },
    "6": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "DUP1",
      "path": "34"
    },
    "7": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "8": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "12": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "DUP1",
      "path": "34"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "REVERT",
      "path": "34"
    },
    "16": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "17": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "POP",
      "path": "34"
    },
    "18": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "21": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "LT",
      "path": "34"
    },
    "22": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x36"
    },
    "25": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "26": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "29": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "SHR",
      "path": "34"
    },
    "32": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "DUP1",
      "path": "34"
    },
    "33": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0x376BF262"
    },
    "38": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "EQ",
      "path": "34"
    },
    "39": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x3B"
    },
    "42": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "43": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "DUP1",
      "path": "34"
    },
    "44": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH4",
      "path": "34",
      "value": "0xD737D0C7"
    },
    "49": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "EQ",
      "path": "34"
    },
    "50": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xEA"
    },
    "53": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "54": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "55": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "57": {
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "DUP1",
      "path": "34"
    },
    "58": {
      "first_revert": true,
      "fn": null,
      "offset": [
        55,
        415
      ],
      "op": "REVERT",
      "path": "34"
    },
    "59": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "60": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xE8"
    },
    "63": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x4"
    },
    "65": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "66": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "CALLDATASIZE",
      "path": "34"
    },
    "67": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SUB",
      "path": "34"
    },
    "68": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "70": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP2",
      "path": "34"
    },
    "71": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "LT",
      "path": "34"
    },
    "72": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "73": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x51"
    },
    "76": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "77": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "79": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "80": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "REVERT",
      "path": "34"
    },
    "81": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "82": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP2",
      "path": "34"
    },
    "83": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "84": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "85": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "86": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP2",
      "path": "34"
    },
    "87": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "88": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "89": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "91": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP2",
      "path": "34"
    },
    "92": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "93": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "95": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP3",
      "path": "34"
    },
    "96": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "97": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "98": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH5",
      "path": "34",
      "value": "0x100000000"
    },
    "104": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP2",
      "path": "34"
    },
    "105": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "GT",
      "path": "34"
    },
    "106": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "107": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x73"
    },
    "110": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "111": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "113": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "114": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "REVERT",
      "path": "34"
    },
    "115": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "116": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP3",
      "path": "34"
    },
    "117": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "118": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP4",
      "path": "34"
    },
    "119": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "121": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP3",
      "path": "34"
    },
    "122": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "123": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "GT",
      "path": "34"
    },
    "124": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "125": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x85"
    },
    "128": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "129": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "131": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "132": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "REVERT",
      "path": "34"
    },
    "133": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "134": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "135": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "CALLDATALOAD",
      "path": "34"
    },
    "136": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "137": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "139": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "140": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "141": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP5",
      "path": "34"
    },
    "142": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "144": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP4",
      "path": "34"
    },
    "145": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "MUL",
      "path": "34"
    },
    "146": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP5",
      "path": "34"
    },
    "147": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "148": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "GT",
      "path": "34"
    },
    "149": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH5",
      "path": "34",
      "value": "0x100000000"
    },
    "155": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP4",
      "path": "34"
    },
    "156": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "GT",
      "path": "34"
    },
    "157": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "OR",
      "path": "34"
    },
    "158": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "159": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xA7"
    },
    "162": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "163": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "165": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "166": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "REVERT",
      "path": "34"
    },
    "167": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "168": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "169": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "170": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "171": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "172": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1F"
    },
    "174": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "175": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "177": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "178": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "179": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DIV",
      "path": "34"
    },
    "180": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "MUL",
      "path": "34"
    },
    "181": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "183": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "184": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "186": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "187": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "188": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP2",
      "path": "34"
    },
    "189": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "190": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "192": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "193": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "194": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP4",
      "path": "34"
    },
    "195": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "196": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "197": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "198": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP2",
      "path": "34"
    },
    "199": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP2",
      "path": "34"
    },
    "200": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "201": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "203": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "204": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP4",
      "path": "34"
    },
    "205": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP4",
      "path": "34"
    },
    "206": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP1",
      "path": "34"
    },
    "207": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP3",
      "path": "34"
    },
    "208": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "DUP5",
      "path": "34"
    },
    "209": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "CALLDATACOPY",
      "path": "34"
    },
    "210": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "212": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "213": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "ADD",
      "path": "34"
    },
    "214": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "215": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "216": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "217": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "218": {
      "op": "POP"
    },
    "219": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "220": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP6",
      "path": "34"
    },
    "221": {
      "op": "POP"
    },
    "222": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xF2"
    },
    "225": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "SWAP5",
      "path": "34"
    },
    "226": {
      "op": "POP"
    },
    "227": {
      "op": "POP"
    },
    "228": {
      "op": "POP"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "op": "POP"
    },
    "231": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        275,
        413
      ],
      "op": "JUMP",
      "path": "34"
    },
    "232": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "233": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "STOP",
      "path": "34"
    },
    "234": {
      "fn": "ContextMock.msgSender",
      "offset": [
        128,
        198
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "235": {
      "fn": "ContextMock.msgSender",
      "offset": [
        128,
        198
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0xE8"
    },
    "238": {
      "fn": "ContextMock.msgSender",
      "offset": [
        128,
        198
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x205"
    },
    "241": {
      "fn": "ContextMock.msgSender",
      "jump": "i",
      "offset": [
        128,
        198
      ],
      "op": "JUMP",
      "path": "34"
    },
    "242": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "243": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH32",
      "path": "34",
      "statement": 0,
      "value": "0xAF235354A0A47C91EE171961326335CB2D1A8E55B8A89859B0E61EB049E50EA0"
    },
    "276": {
      "fn": "ContextMock.msgData",
      "offset": [
        368,
        378
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x11B"
    },
    "279": {
      "fn": "ContextMock.msgData",
      "offset": [
        368,
        376
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x24B"
    },
    "282": {
      "fn": "ContextMock.msgData",
      "jump": "i",
      "offset": [
        368,
        378
      ],
      "op": "JUMP",
      "path": "34"
    },
    "283": {
      "fn": "ContextMock.msgData",
      "offset": [
        368,
        378
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "284": {
      "fn": "ContextMock.msgData",
      "offset": [
        380,
        392
      ],
      "op": "DUP4",
      "path": "34"
    },
    "285": {
      "fn": "ContextMock.msgData",
      "offset": [
        394,
        405
      ],
      "op": "DUP4",
      "path": "34"
    },
    "286": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "288": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "289": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "290": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "291": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "293": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "294": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP5",
      "path": "34"
    },
    "295": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "296": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "297": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "299": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "300": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "301": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "303": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "304": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "305": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "306": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "307": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "308": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "309": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP7",
      "path": "34"
    },
    "310": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "311": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "312": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "313": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "314": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "315": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "317": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "318": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "319": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "320": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "321": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "322": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "323": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "325": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "326": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "327": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "328": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "329": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "330": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "332": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "333": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "334": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "335": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "LT",
      "path": "34"
    },
    "336": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "337": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x164"
    },
    "340": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "341": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "342": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "343": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "344": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "345": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "346": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP3",
      "path": "34"
    },
    "347": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "348": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "349": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "351": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "352": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x14C"
    },
    "355": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMP",
      "path": "34"
    },
    "356": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "357": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "358": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "359": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "360": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "361": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "362": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "363": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "364": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "365": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "366": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "367": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1F"
    },
    "369": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "AND",
      "path": "34"
    },
    "370": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "371": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "372": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x191"
    },
    "375": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "376": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "377": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP3",
      "path": "34"
    },
    "378": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "379": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "380": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "381": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "383": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "384": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "386": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "387": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x100"
    },
    "390": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "EXP",
      "path": "34"
    },
    "391": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "392": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "NOT",
      "path": "34"
    },
    "393": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "AND",
      "path": "34"
    },
    "394": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "395": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "396": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "398": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "399": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "400": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "401": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "402": {
      "op": "POP"
    },
    "403": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "404": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "405": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "406": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP3",
      "path": "34"
    },
    "407": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "408": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP5",
      "path": "34"
    },
    "409": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "410": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "411": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "412": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP5",
      "path": "34"
    },
    "413": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "414": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "416": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "417": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP3",
      "path": "34"
    },
    "418": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "419": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "420": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP7",
      "path": "34"
    },
    "421": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "422": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "423": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "424": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "425": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "426": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x0"
    },
    "428": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "429": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "430": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "431": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "LT",
      "path": "34"
    },
    "432": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "433": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1C4"
    },
    "436": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "437": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "438": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "439": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "440": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "441": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "442": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP3",
      "path": "34"
    },
    "443": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "444": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "445": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "447": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "448": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1AC"
    },
    "451": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMP",
      "path": "34"
    },
    "452": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "453": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "454": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "455": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "456": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "457": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "458": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "459": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "460": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "461": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "462": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "463": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1F"
    },
    "465": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "AND",
      "path": "34"
    },
    "466": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "467": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ISZERO",
      "path": "34"
    },
    "468": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x1F1"
    },
    "471": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPI",
      "path": "34"
    },
    "472": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "473": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP3",
      "path": "34"
    },
    "474": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "475": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "476": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "477": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x1"
    },
    "479": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP4",
      "path": "34"
    },
    "480": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "482": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "483": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x100"
    },
    "486": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "EXP",
      "path": "34"
    },
    "487": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "488": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "NOT",
      "path": "34"
    },
    "489": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "AND",
      "path": "34"
    },
    "490": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP2",
      "path": "34"
    },
    "491": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "492": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "494": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "ADD",
      "path": "34"
    },
    "495": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "496": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "497": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "498": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "499": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP6",
      "path": "34"
    },
    "500": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "501": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "502": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "503": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "504": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "505": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "POP",
      "path": "34"
    },
    "506": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "508": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "509": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "DUP1",
      "path": "34"
    },
    "510": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP2",
      "path": "34"
    },
    "511": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SUB",
      "path": "34"
    },
    "512": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "513": {
      "fn": "ContextMock.msgData",
      "offset": [
        363,
        406
      ],
      "op": "LOG1",
      "path": "34"
    },
    "514": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "POP",
      "path": "34"
    },
    "515": {
      "fn": "ContextMock.msgData",
      "offset": [
        275,
        413
      ],
      "op": "POP",
      "path": "34"
    },
    "516": {
      "fn": "ContextMock.msgData",
      "jump": "o",
      "offset": [
        275,
        413
      ],
      "op": "JUMP",
      "path": "34"
    },
    "517": {
      "fn": "ContextMock.msgSender",
      "offset": [
        128,
        198
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "518": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "PUSH32",
      "path": "34",
      "statement": 1,
      "value": "0xD6558C3ED910D959271054471FD1C326679D9FECE99C5091B00ED89627CF2BFC"
    },
    "551": {
      "fn": "ContextMock.msgSender",
      "offset": [
        178,
        190
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x22E"
    },
    "554": {
      "fn": "ContextMock.msgSender",
      "offset": [
        178,
        188
      ],
      "op": "PUSH2",
      "path": "34",
      "value": "0x28A"
    },
    "557": {
      "fn": "ContextMock.msgSender",
      "jump": "i",
      "offset": [
        178,
        190
      ],
      "op": "JUMP",
      "path": "34"
    },
    "558": {
      "fn": "ContextMock.msgSender",
      "offset": [
        178,
        190
      ],
      "op": "JUMPDEST",
      "path": "34"
    },
    "559": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x40"
    },
    "561": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "DUP1",
      "path": "34"
    },
    "562": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "563": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "565": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "567": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "569": {
      "op": "SHL"
    },
    "570": {
      "op": "SUB"
    },
    "571": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "572": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "SWAP3",
      "path": "34"
    },
    "573": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "AND",
      "path": "34"
    },
    "574": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "DUP3",
      "path": "34"
    },
    "575": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "MSTORE",
      "path": "34"
    },
    "576": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "MLOAD",
      "path": "34"
    },
    "577": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "578": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "DUP2",
      "path": "34"
    },
    "579": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "580": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "SUB",
      "path": "34"
    },
    "581": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "PUSH1",
      "path": "34",
      "value": "0x20"
    },
    "583": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "ADD",
      "path": "34"
    },
    "584": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "SWAP1",
      "path": "34"
    },
    "585": {
      "fn": "ContextMock.msgSender",
      "offset": [
        171,
        191
      ],
      "op": "LOG1",
      "path": "34"
    },
    "586": {
      "fn": "ContextMock.msgSender",
      "jump": "o",
      "offset": [
        128,
        198
      ],
      "op": "JUMP",
      "path": "34"
    },
    "587": {
      "fn": "Context._msgData",
      "offset": [
        845,
        1075
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "588": {
      "fn": "Context._msgData",
      "offset": [
        896,
        908
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "590": {
      "fn": "Context._msgData",
      "offset": [
        1060,
        1068
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 2,
      "value": "0x0"
    },
    "592": {
      "fn": "Context._msgData",
      "offset": [
        1060,
        1068
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "593": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP1",
      "path": "10"
    },
    "594": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP1",
      "path": "10"
    },
    "595": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "597": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "ADD",
      "path": "10"
    },
    "598": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "600": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP1",
      "path": "10"
    },
    "601": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "602": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DIV",
      "path": "10"
    },
    "603": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "MUL",
      "path": "10"
    },
    "604": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "606": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "ADD",
      "path": "10"
    },
    "607": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "609": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "610": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "611": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP2",
      "path": "10"
    },
    "612": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "ADD",
      "path": "10"
    },
    "613": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "615": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "616": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP1",
      "path": "10"
    },
    "617": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "618": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "619": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "620": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "621": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP2",
      "path": "10"
    },
    "622": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP2",
      "path": "10"
    },
    "623": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "624": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "626": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "ADD",
      "path": "10"
    },
    "627": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP4",
      "path": "10"
    },
    "628": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP4",
      "path": "10"
    },
    "629": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP1",
      "path": "10"
    },
    "630": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP3",
      "path": "10"
    },
    "631": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "DUP5",
      "path": "10"
    },
    "632": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "633": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "635": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "636": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "ADD",
      "path": "10"
    },
    "637": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "638": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "639": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP2",
      "path": "10"
    },
    "640": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "641": {
      "op": "POP"
    },
    "642": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "643": {
      "fn": "Context._msgData",
      "offset": [
        1053,
        1068
      ],
      "op": "SWAP4",
      "path": "10"
    },
    "644": {
      "op": "POP"
    },
    "645": {
      "op": "POP"
    },
    "646": {
      "op": "POP"
    },
    "647": {
      "op": "POP"
    },
    "648": {
      "fn": "Context._msgData",
      "offset": [
        845,
        1075
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "649": {
      "fn": "Context._msgData",
      "jump": "o",
      "offset": [
        845,
        1075
      ],
      "op": "JUMP",
      "path": "10"
    },
    "650": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        839
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "651": {
      "fn": "Context._msgSender",
      "offset": [
        822,
        832
      ],
      "op": "CALLER",
      "path": "10",
      "statement": 3
    },
    "652": {
      "fn": "Context._msgSender",
      "offset": [
        735,
        839
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "653": {
      "fn": "Context._msgSender",
      "jump": "o",
      "offset": [
        735,
        839
      ],
      "op": "JUMP",
      "path": "10"
    }
  },
  "sha1": "3f065b3116730e3392b4c0824b888434c4333edc",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../GSN/Context.sol\";\n\ncontract ContextMock is Context {\n    event Sender(address sender);\n\n    function msgSender() public {\n        emit Sender(_msgSender());\n    }\n\n    event Data(bytes data, uint256 integerValue, string stringValue);\n\n    function msgData(uint256 integerValue, string memory stringValue) public {\n        emit Data(_msgData(), integerValue, stringValue);\n    }\n}\n\ncontract ContextMockCaller {\n    function callSender(ContextMock context) public {\n        context.msgSender();\n    }\n\n    function callData(ContextMock context, uint256 integerValue, string memory stringValue) public {\n        context.msgData(integerValue, stringValue);\n    }\n}\n",
  "sourceMap": "55:360:34:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/ContextMock.sol",
  "type": "contract"
}