{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "average",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "max",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "a",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "min",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "27": "contracts/openzeppelin/contracts/math/Math.sol",
    "62": "contracts/openzeppelin/contracts/mocks/MathMock.sol"
  },
  "ast": {
    "absolutePath": "contracts/openzeppelin/contracts/mocks/MathMock.sol",
    "exportedSymbols": {
      "MathMock": [
        13174
      ]
    },
    "id": 13175,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13124,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:62"
      },
      {
        "absolutePath": "contracts/openzeppelin/contracts/math/Math.sol",
        "file": "../math/Math.sol",
        "id": 13125,
        "nodeType": "ImportDirective",
        "scope": 13175,
        "sourceUnit": 10773,
        "src": "25:26:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 13174,
        "linearizedBaseContracts": [
          13174
        ],
        "name": "MathMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 13140,
              "nodeType": "Block",
              "src": "142:38:62",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13136,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13127,
                        "src": "168:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13137,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13129,
                        "src": "171:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13134,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10772,
                        "src": "159:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$10772_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 13135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10720,
                      "src": "159:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 13138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "159:14:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13133,
                  "id": 13139,
                  "nodeType": "Return",
                  "src": "152:21:62"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6d5433e6",
            "id": 13141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "max",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13127,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13141,
                  "src": "90:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "90:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13129,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13141,
                  "src": "101:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13128,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "101:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "89:22:62"
            },
            "returnParameters": {
              "id": 13133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13132,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13141,
                  "src": "133:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "133:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "132:9:62"
            },
            "scope": 13174,
            "src": "77:103:62",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13156,
              "nodeType": "Block",
              "src": "251:38:62",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13152,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13143,
                        "src": "277:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13153,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13145,
                        "src": "280:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13150,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10772,
                        "src": "268:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$10772_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 13151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10738,
                      "src": "268:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 13154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "268:14:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13149,
                  "id": 13155,
                  "nodeType": "Return",
                  "src": "261:21:62"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "7ae2b5c7",
            "id": 13157,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "min",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13143,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13157,
                  "src": "199:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "199:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13145,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13157,
                  "src": "210:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "210:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "198:22:62"
            },
            "returnParameters": {
              "id": 13149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13148,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13157,
                  "src": "242:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "242:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "241:9:62"
            },
            "scope": 13174,
            "src": "186:103:62",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13172,
              "nodeType": "Block",
              "src": "364:42:62",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 13168,
                        "name": "a",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13159,
                        "src": "394:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 13169,
                        "name": "b",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13161,
                        "src": "397:1:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 13166,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10772,
                        "src": "381:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$10772_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 13167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "average",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10771,
                      "src": "381:12:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 13170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "381:18:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 13165,
                  "id": 13171,
                  "nodeType": "Return",
                  "src": "374:25:62"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "2b7423ab",
            "id": 13173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "average",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 13162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13159,
                  "mutability": "mutable",
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13173,
                  "src": "312:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13161,
                  "mutability": "mutable",
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13173,
                  "src": "323:9:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13160,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "311:22:62"
            },
            "returnParameters": {
              "id": 13165,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13164,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 13173,
                  "src": "355:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 13163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "354:9:62"
            },
            "scope": 13174,
            "src": "295:111:62",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 13175,
        "src": "53:355:62"
      }
    ],
    "src": "0:409:62"
  },
  "bytecode": "608060405234801561001057600080fd5b5061016d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632b7423ab146100465780636d5433e61461007b5780637ae2b5c71461009e575b600080fd5b6100696004803603604081101561005c57600080fd5b50803590602001356100c1565b60408051918252519081900360200190f35b6100696004803603604081101561009157600080fd5b50803590602001356100d4565b610069600480360360408110156100b457600080fd5b50803590602001356100e0565b60006100cd83836100ec565b9392505050565b60006100cd8383610111565b60006100cd8383610128565b600060028083066002850601816100ff57fe5b04600283046002850401019392505050565b60008183101561012157816100cd565b5090919050565b600081831061012157816100cd56fea26469706673582212206132149b5f8c799a628d5743eb3e99deec88ab96d86abd5211419a581fcd004d64736f6c634300060c0033",
  "bytecodeSha1": "7f06ac8d094da6d78868258374e3fa4a1a890606",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.6.12+commit.27d51765"
  },
  "contractName": "MathMock",
  "coverageMap": {
    "branches": {
      "27": {
        "Math.max": {
          "6": [
            266,
            272,
            true
          ]
        },
        "Math.min": {
          "7": [
            442,
            447,
            true
          ]
        }
      },
      "62": {}
    },
    "statements": {
      "27": {
        "Math.average": {
          "3": [
            710,
            758
          ]
        },
        "Math.max": {
          "4": [
            259,
            280
          ]
        },
        "Math.min": {
          "5": [
            435,
            455
          ]
        }
      },
      "62": {
        "MathMock.average": {
          "0": [
            374,
            399
          ]
        },
        "MathMock.max": {
          "1": [
            152,
            173
          ]
        },
        "MathMock.min": {
          "2": [
            261,
            282
          ]
        }
      }
    }
  },
  "dependencies": [
    "Math"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100415760003560e01c80632b7423ab146100465780636d5433e61461007b5780637ae2b5c71461009e575b600080fd5b6100696004803603604081101561005c57600080fd5b50803590602001356100c1565b60408051918252519081900360200190f35b6100696004803603604081101561009157600080fd5b50803590602001356100d4565b610069600480360360408110156100b457600080fd5b50803590602001356100e0565b60006100cd83836100ec565b9392505050565b60006100cd8383610111565b60006100cd8383610128565b600060028083066002850601816100ff57fe5b04600283046002850401019392505050565b60008183101561012157816100cd565b5090919050565b600081831061012157816100cd56fea26469706673582212206132149b5f8c799a628d5743eb3e99deec88ab96d86abd5211419a581fcd004d64736f6c634300060c0033",
  "deployedSourceMap": "53:355:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:111;;;;;;;;;;;;;;;;-1:-1:-1;295:111:62;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;77:103;;;;;;;;;;;;;;;;-1:-1:-1;77:103:62;;;;;;;:::i;186:::-;;;;;;;;;;;;;;;;-1:-1:-1;186:103:62;;;;;;;:::i;295:111::-;355:7;381:18;394:1;397;381:12;:18::i;:::-;374:25;295:111;-1:-1:-1;;;295:111:62:o;77:103::-;133:7;159:14;168:1;171;159:8;:14::i;186:103::-;242:7;268:14;277:1;280;268:8;:14::i;575:190:27:-;637:7;756:1;;747;:5;743:1;739;:5;:13;738:19;;;;;;732:1;728;:5;722:1;718;:5;717:17;:41;;575:190;-1:-1:-1;;;575:190:27:o;182:105::-;240:7;271:1;266;:6;;:14;;279:1;266:14;;;-1:-1:-1;275:1:27;;182:105;-1:-1:-1;182:105:27:o;358:104::-;416:7;446:1;442;:5;:13;;454:1;442:13;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    53,
    408
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2B7423AB EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6D5433E6 EQ PUSH2 0x7B JUMPI DUP1 PUSH4 0x7AE2B5C7 EQ PUSH2 0x9E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xC1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xD4 JUMP JUMPDEST PUSH2 0x69 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0xE0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD DUP4 DUP4 PUSH2 0xEC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD DUP4 DUP4 PUSH2 0x111 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD DUP4 DUP4 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 DUP4 MOD PUSH1 0x2 DUP6 MOD ADD DUP2 PUSH2 0xFF JUMPI INVALID JUMPDEST DIV PUSH1 0x2 DUP4 DIV PUSH1 0x2 DUP6 DIV ADD ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT ISZERO PUSH2 0x121 JUMPI DUP2 PUSH2 0xCD JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x121 JUMPI DUP2 PUSH2 0xCD JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0x3214 SWAP12 0x5F DUP13 PUSH26 0x9A628D5743EB3E99DEEC88AB96D86ABD5211419A581FCD004D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        53,
        408
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "5": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "CALLVALUE",
      "path": "62"
    },
    "6": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "DUP1",
      "path": "62"
    },
    "7": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "ISZERO",
      "path": "62"
    },
    "8": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "12": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "DUP1",
      "path": "62"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "REVERT",
      "path": "62"
    },
    "16": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "17": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "POP",
      "path": "62"
    },
    "18": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "CALLDATASIZE",
      "path": "62"
    },
    "21": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "LT",
      "path": "62"
    },
    "22": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x41"
    },
    "25": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "26": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "CALLDATALOAD",
      "path": "62"
    },
    "29": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "SHR",
      "path": "62"
    },
    "32": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "DUP1",
      "path": "62"
    },
    "33": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH4",
      "path": "62",
      "value": "0x2B7423AB"
    },
    "38": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "EQ",
      "path": "62"
    },
    "39": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x46"
    },
    "42": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "43": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "DUP1",
      "path": "62"
    },
    "44": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH4",
      "path": "62",
      "value": "0x6D5433E6"
    },
    "49": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "EQ",
      "path": "62"
    },
    "50": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x7B"
    },
    "53": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "54": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "DUP1",
      "path": "62"
    },
    "55": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH4",
      "path": "62",
      "value": "0x7AE2B5C7"
    },
    "60": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "EQ",
      "path": "62"
    },
    "61": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x9E"
    },
    "64": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "65": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "66": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "68": {
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "DUP1",
      "path": "62"
    },
    "69": {
      "first_revert": true,
      "fn": null,
      "offset": [
        53,
        408
      ],
      "op": "REVERT",
      "path": "62"
    },
    "70": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "71": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x69"
    },
    "74": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x4"
    },
    "76": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "DUP1",
      "path": "62"
    },
    "77": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "CALLDATASIZE",
      "path": "62"
    },
    "78": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "SUB",
      "path": "62"
    },
    "79": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "81": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "DUP2",
      "path": "62"
    },
    "82": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "LT",
      "path": "62"
    },
    "83": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "ISZERO",
      "path": "62"
    },
    "84": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x5C"
    },
    "87": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "88": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "90": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "DUP1",
      "path": "62"
    },
    "91": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "REVERT",
      "path": "62"
    },
    "92": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "93": {
      "op": "POP"
    },
    "94": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "DUP1",
      "path": "62"
    },
    "95": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "CALLDATALOAD",
      "path": "62"
    },
    "96": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "97": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "99": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "ADD",
      "path": "62"
    },
    "100": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "CALLDATALOAD",
      "path": "62"
    },
    "101": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0xC1"
    },
    "104": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        295,
        406
      ],
      "op": "JUMP",
      "path": "62"
    },
    "105": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "106": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "108": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "DUP1",
      "path": "62"
    },
    "109": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "110": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "SWAP2",
      "path": "62"
    },
    "111": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "DUP3",
      "path": "62"
    },
    "112": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "MSTORE",
      "path": "62"
    },
    "113": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "MLOAD",
      "path": "62"
    },
    "114": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "115": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "DUP2",
      "path": "62"
    },
    "116": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "117": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "SUB",
      "path": "62"
    },
    "118": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "120": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "ADD",
      "path": "62"
    },
    "121": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "122": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "RETURN",
      "path": "62"
    },
    "123": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "124": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x69"
    },
    "127": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x4"
    },
    "129": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "DUP1",
      "path": "62"
    },
    "130": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "CALLDATASIZE",
      "path": "62"
    },
    "131": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "SUB",
      "path": "62"
    },
    "132": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "134": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "DUP2",
      "path": "62"
    },
    "135": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "LT",
      "path": "62"
    },
    "136": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "ISZERO",
      "path": "62"
    },
    "137": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x91"
    },
    "140": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "141": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "143": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "DUP1",
      "path": "62"
    },
    "144": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "REVERT",
      "path": "62"
    },
    "145": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "146": {
      "op": "POP"
    },
    "147": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "DUP1",
      "path": "62"
    },
    "148": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "CALLDATALOAD",
      "path": "62"
    },
    "149": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "150": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "152": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "ADD",
      "path": "62"
    },
    "153": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "CALLDATALOAD",
      "path": "62"
    },
    "154": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0xD4"
    },
    "157": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        77,
        180
      ],
      "op": "JUMP",
      "path": "62"
    },
    "158": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "159": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x69"
    },
    "162": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x4"
    },
    "164": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "DUP1",
      "path": "62"
    },
    "165": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "CALLDATASIZE",
      "path": "62"
    },
    "166": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "SUB",
      "path": "62"
    },
    "167": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x40"
    },
    "169": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "DUP2",
      "path": "62"
    },
    "170": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "LT",
      "path": "62"
    },
    "171": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "ISZERO",
      "path": "62"
    },
    "172": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0xB4"
    },
    "175": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "JUMPI",
      "path": "62"
    },
    "176": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "178": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "DUP1",
      "path": "62"
    },
    "179": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "REVERT",
      "path": "62"
    },
    "180": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "181": {
      "op": "POP"
    },
    "182": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "DUP1",
      "path": "62"
    },
    "183": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "CALLDATALOAD",
      "path": "62"
    },
    "184": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "SWAP1",
      "path": "62"
    },
    "185": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x20"
    },
    "187": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "ADD",
      "path": "62"
    },
    "188": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "CALLDATALOAD",
      "path": "62"
    },
    "189": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0xE0"
    },
    "192": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        186,
        289
      ],
      "op": "JUMP",
      "path": "62"
    },
    "193": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "194": {
      "fn": "MathMock.average",
      "offset": [
        355,
        362
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "196": {
      "fn": "MathMock.average",
      "offset": [
        381,
        399
      ],
      "op": "PUSH2",
      "path": "62",
      "statement": 0,
      "value": "0xCD"
    },
    "199": {
      "fn": "MathMock.average",
      "offset": [
        394,
        395
      ],
      "op": "DUP4",
      "path": "62"
    },
    "200": {
      "fn": "MathMock.average",
      "offset": [
        397,
        398
      ],
      "op": "DUP4",
      "path": "62"
    },
    "201": {
      "fn": "MathMock.average",
      "offset": [
        381,
        393
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0xEC"
    },
    "204": {
      "fn": "MathMock.average",
      "jump": "i",
      "offset": [
        381,
        399
      ],
      "op": "JUMP",
      "path": "62"
    },
    "205": {
      "fn": "MathMock.average",
      "offset": [
        381,
        399
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "206": {
      "fn": "MathMock.average",
      "offset": [
        374,
        399
      ],
      "op": "SWAP4",
      "path": "62"
    },
    "207": {
      "fn": "MathMock.average",
      "offset": [
        295,
        406
      ],
      "op": "SWAP3",
      "path": "62"
    },
    "208": {
      "op": "POP"
    },
    "209": {
      "op": "POP"
    },
    "210": {
      "op": "POP"
    },
    "211": {
      "fn": "MathMock.average",
      "jump": "o",
      "offset": [
        295,
        406
      ],
      "op": "JUMP",
      "path": "62"
    },
    "212": {
      "fn": "MathMock.max",
      "offset": [
        77,
        180
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "213": {
      "fn": "MathMock.max",
      "offset": [
        133,
        140
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "215": {
      "fn": "MathMock.max",
      "offset": [
        159,
        173
      ],
      "op": "PUSH2",
      "path": "62",
      "statement": 1,
      "value": "0xCD"
    },
    "218": {
      "fn": "MathMock.max",
      "offset": [
        168,
        169
      ],
      "op": "DUP4",
      "path": "62"
    },
    "219": {
      "fn": "MathMock.max",
      "offset": [
        171,
        172
      ],
      "op": "DUP4",
      "path": "62"
    },
    "220": {
      "fn": "MathMock.max",
      "offset": [
        159,
        167
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x111"
    },
    "223": {
      "fn": "MathMock.max",
      "jump": "i",
      "offset": [
        159,
        173
      ],
      "op": "JUMP",
      "path": "62"
    },
    "224": {
      "fn": "MathMock.min",
      "offset": [
        186,
        289
      ],
      "op": "JUMPDEST",
      "path": "62"
    },
    "225": {
      "fn": "MathMock.min",
      "offset": [
        242,
        249
      ],
      "op": "PUSH1",
      "path": "62",
      "value": "0x0"
    },
    "227": {
      "fn": "MathMock.min",
      "offset": [
        268,
        282
      ],
      "op": "PUSH2",
      "path": "62",
      "statement": 2,
      "value": "0xCD"
    },
    "230": {
      "fn": "MathMock.min",
      "offset": [
        277,
        278
      ],
      "op": "DUP4",
      "path": "62"
    },
    "231": {
      "fn": "MathMock.min",
      "offset": [
        280,
        281
      ],
      "op": "DUP4",
      "path": "62"
    },
    "232": {
      "fn": "MathMock.min",
      "offset": [
        268,
        276
      ],
      "op": "PUSH2",
      "path": "62",
      "value": "0x128"
    },
    "235": {
      "fn": "MathMock.min",
      "jump": "i",
      "offset": [
        268,
        282
      ],
      "op": "JUMP",
      "path": "62"
    },
    "236": {
      "fn": "Math.average",
      "offset": [
        575,
        765
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "237": {
      "fn": "Math.average",
      "offset": [
        637,
        644
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "239": {
      "fn": "Math.average",
      "offset": [
        756,
        757
      ],
      "op": "PUSH1",
      "path": "27",
      "statement": 3,
      "value": "0x2"
    },
    "241": {
      "fn": "Math.average",
      "offset": [
        756,
        757
      ],
      "op": "DUP1",
      "path": "27"
    },
    "242": {
      "fn": "Math.average",
      "offset": [
        747,
        748
      ],
      "op": "DUP4",
      "path": "27"
    },
    "243": {
      "fn": "Math.average",
      "offset": [
        747,
        752
      ],
      "op": "MOD",
      "path": "27"
    },
    "244": {
      "fn": "Math.average",
      "offset": [
        743,
        744
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "246": {
      "fn": "Math.average",
      "offset": [
        739,
        740
      ],
      "op": "DUP6",
      "path": "27"
    },
    "247": {
      "fn": "Math.average",
      "offset": [
        739,
        744
      ],
      "op": "MOD",
      "path": "27"
    },
    "248": {
      "fn": "Math.average",
      "offset": [
        739,
        752
      ],
      "op": "ADD",
      "path": "27"
    },
    "249": {
      "fn": "Math.average",
      "offset": [
        738,
        757
      ],
      "op": "DUP2",
      "path": "27"
    },
    "250": {
      "fn": "Math.average",
      "offset": [
        738,
        757
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xFF"
    },
    "253": {
      "fn": "Math.average",
      "offset": [
        738,
        757
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "254": {
      "dev": "Division by zero",
      "fn": "Math.average",
      "offset": [
        738,
        757
      ],
      "op": "INVALID",
      "path": "27"
    },
    "255": {
      "fn": "Math.average",
      "offset": [
        738,
        757
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "256": {
      "fn": "Math.average",
      "offset": [
        738,
        757
      ],
      "op": "DIV",
      "path": "27"
    },
    "257": {
      "fn": "Math.average",
      "offset": [
        732,
        733
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "259": {
      "fn": "Math.average",
      "offset": [
        728,
        729
      ],
      "op": "DUP4",
      "path": "27"
    },
    "260": {
      "fn": "Math.average",
      "offset": [
        728,
        733
      ],
      "op": "DIV",
      "path": "27"
    },
    "261": {
      "fn": "Math.average",
      "offset": [
        722,
        723
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x2"
    },
    "263": {
      "fn": "Math.average",
      "offset": [
        718,
        719
      ],
      "op": "DUP6",
      "path": "27"
    },
    "264": {
      "fn": "Math.average",
      "offset": [
        718,
        723
      ],
      "op": "DIV",
      "path": "27"
    },
    "265": {
      "fn": "Math.average",
      "offset": [
        717,
        734
      ],
      "op": "ADD",
      "path": "27"
    },
    "266": {
      "fn": "Math.average",
      "offset": [
        717,
        758
      ],
      "op": "ADD",
      "path": "27"
    },
    "267": {
      "fn": "Math.average",
      "offset": [
        717,
        758
      ],
      "op": "SWAP4",
      "path": "27"
    },
    "268": {
      "fn": "Math.average",
      "offset": [
        575,
        765
      ],
      "op": "SWAP3",
      "path": "27"
    },
    "269": {
      "op": "POP"
    },
    "270": {
      "op": "POP"
    },
    "271": {
      "op": "POP"
    },
    "272": {
      "fn": "Math.average",
      "jump": "o",
      "offset": [
        575,
        765
      ],
      "op": "JUMP",
      "path": "27"
    },
    "273": {
      "fn": "Math.max",
      "offset": [
        182,
        287
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "274": {
      "fn": "Math.max",
      "offset": [
        240,
        247
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "276": {
      "fn": "Math.max",
      "offset": [
        271,
        272
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 4
    },
    "277": {
      "fn": "Math.max",
      "offset": [
        266,
        267
      ],
      "op": "DUP4",
      "path": "27"
    },
    "278": {
      "fn": "Math.max",
      "offset": [
        266,
        272
      ],
      "op": "LT",
      "path": "27"
    },
    "279": {
      "branch": 6,
      "fn": "Math.max",
      "offset": [
        266,
        272
      ],
      "op": "ISZERO",
      "path": "27"
    },
    "280": {
      "fn": "Math.max",
      "offset": [
        266,
        280
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x121"
    },
    "283": {
      "branch": 6,
      "fn": "Math.max",
      "offset": [
        266,
        280
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "284": {
      "fn": "Math.max",
      "offset": [
        279,
        280
      ],
      "op": "DUP2",
      "path": "27"
    },
    "285": {
      "fn": "Math.max",
      "offset": [
        266,
        280
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCD"
    },
    "288": {
      "fn": "Math.max",
      "offset": [
        266,
        280
      ],
      "op": "JUMP",
      "path": "27"
    },
    "289": {
      "fn": "Math.max",
      "offset": [
        266,
        280
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "290": {
      "op": "POP"
    },
    "291": {
      "fn": "Math.max",
      "offset": [
        275,
        276
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "292": {
      "fn": "Math.max",
      "offset": [
        275,
        276
      ],
      "op": "SWAP2",
      "path": "27"
    },
    "293": {
      "fn": "Math.max",
      "offset": [
        182,
        287
      ],
      "op": "SWAP1",
      "path": "27"
    },
    "294": {
      "op": "POP"
    },
    "295": {
      "fn": "Math.max",
      "jump": "o",
      "offset": [
        182,
        287
      ],
      "op": "JUMP",
      "path": "27"
    },
    "296": {
      "fn": "Math.min",
      "offset": [
        358,
        462
      ],
      "op": "JUMPDEST",
      "path": "27"
    },
    "297": {
      "fn": "Math.min",
      "offset": [
        416,
        423
      ],
      "op": "PUSH1",
      "path": "27",
      "value": "0x0"
    },
    "299": {
      "fn": "Math.min",
      "offset": [
        446,
        447
      ],
      "op": "DUP2",
      "path": "27",
      "statement": 5
    },
    "300": {
      "fn": "Math.min",
      "offset": [
        442,
        443
      ],
      "op": "DUP4",
      "path": "27"
    },
    "301": {
      "branch": 7,
      "fn": "Math.min",
      "offset": [
        442,
        447
      ],
      "op": "LT",
      "path": "27"
    },
    "302": {
      "fn": "Math.min",
      "offset": [
        442,
        455
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0x121"
    },
    "305": {
      "branch": 7,
      "fn": "Math.min",
      "offset": [
        442,
        455
      ],
      "op": "JUMPI",
      "path": "27"
    },
    "306": {
      "fn": "Math.min",
      "offset": [
        454,
        455
      ],
      "op": "DUP2",
      "path": "27"
    },
    "307": {
      "fn": "Math.min",
      "offset": [
        442,
        455
      ],
      "op": "PUSH2",
      "path": "27",
      "value": "0xCD"
    },
    "310": {
      "fn": "Math.min",
      "offset": [
        442,
        455
      ],
      "op": "JUMP",
      "path": "27"
    }
  },
  "sha1": "d9b5656aeb29a9c82278b045e6775f8d77407b2e",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../math/Math.sol\";\n\ncontract MathMock {\n    function max(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.max(a, b);\n    }\n\n    function min(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.min(a, b);\n    }\n\n    function average(uint256 a, uint256 b) public pure returns (uint256) {\n        return Math.average(a, b);\n    }\n}\n",
  "sourceMap": "53:355:62:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/openzeppelin/contracts/mocks/MathMock.sol",
  "type": "contract"
}